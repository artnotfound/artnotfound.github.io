/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/aframe-animation-component/index.js":
/* unknown exports provided */
/* all exports used */
/*!************************************************!*\
  !*** ../~/aframe-animation-component/index.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* global AFRAME */\n\nvar anime = __webpack_require__(/*! animejs */ \"../node_modules/animejs/anime.js\");\n\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\nvar utils = AFRAME.utils;\nvar getComponentProperty = utils.entity.getComponentProperty;\nvar setComponentProperty = utils.entity.setComponentProperty;\nvar styleParser = utils.styleParser.parse;\n\n/**\n * Animation component for A-Frame.\n *\n * @member {boolean} animationIsPlaying - Used during initialization and scene resume to see\n *  if animation should be playing.\n */\nAFRAME.registerComponent('animation', {\n  schema: {\n    delay: {default: 0},\n    dir: {default: ''},\n    dur: {default: 1000},\n    easing: {default: 'easeInQuad'},\n    elasticity: {default: 400},\n    from: {default: ''},\n    loop: {default: false},\n    property: {default: ''},\n    repeat: {default: 0},\n    startEvents: {type: 'array'},\n    pauseEvents: {type: 'array'},\n    resumeEvents: {type: 'array'},\n    restartEvents: {type: 'array'},\n    to: {default: ''}\n  },\n\n  multiple: true,\n\n  init: function () {\n    this.animation = null;\n    this.animationIsPlaying = false;\n    this.config = null;\n    this.playAnimationBound = this.playAnimation.bind(this);\n    this.pauseAnimationBound = this.pauseAnimation.bind(this);\n    this.resumeAnimationBound = this.resumeAnimation.bind(this);\n    this.restartAnimationBound = this.restartAnimation.bind(this);\n    this.repeat = 0;\n  },\n\n  update: function () {\n    var attrName = this.attrName;\n    var data = this.data;\n    var el = this.el;\n    var propType = getPropertyType(el, data.property);\n    var self = this;\n\n    if (!data.property) { return; }\n\n    // Base config.\n    this.repeat = data.repeat;\n    var config = {\n      autoplay: false,\n      begin: function () {\n        el.emit('animationbegin');\n        el.emit(attrName + '-begin');\n      },\n      complete: function () {\n        el.emit('animationcomplete');\n        el.emit(attrName + '-complete');\n        // Repeat.\n        if (--self.repeat > 0) { self.animation.play(); }\n      },\n      direction: data.dir,\n      duration: data.dur,\n      easing: data.easing,\n      elasticity: data.elasticity,\n      loop: data.loop\n    };\n\n    // Customize config based on property type.\n    var updateConfig = configDefault;\n    if (propType === 'vec2' || propType === 'vec3' || propType === 'vec4') {\n      updateConfig = configVector;\n    }\n\n    // Config.\n    this.config = updateConfig(el, data, config);\n    this.animation = anime(this.config);\n\n    // Stop previous animation.\n    this.pauseAnimation();\n\n    if (!this.data.startEvents.length) { this.animationIsPlaying = true; }\n\n    // Play animation if no holding event.\n    this.removeEventListeners();\n    this.addEventListeners();\n  },\n\n  /**\n   * `remove` handler.\n   */\n  remove: function () {\n    this.pauseAnimation();\n    this.removeEventListeners();\n  },\n\n  /**\n   * `pause` handler.\n   */\n  pause: function () {\n    this.pauseAnimation();\n    this.removeEventListeners();\n  },\n\n  /**\n   * `play` handler.\n   */\n  play: function () {\n    var data = this.data;\n    var self = this;\n\n    if (!this.animation || !this.animationIsPlaying) { return; }\n\n    // Delay.\n    if (data.delay) {\n      setTimeout(play, data.delay);\n    } else {\n      play();\n    }\n\n    function play () {\n      self.playAnimation();\n      self.addEventListeners();\n    }\n  },\n\n  addEventListeners: function () {\n    var self = this;\n    var data = this.data;\n    var el = this.el;\n    data.startEvents.map(function (eventName) {\n      el.addEventListener(eventName, self.playAnimationBound);\n    });\n    data.pauseEvents.map(function (eventName) {\n      el.addEventListener(eventName, self.pauseAnimationBound);\n    });\n    data.resumeEvents.map(function (eventName) {\n      el.addEventListener(eventName, self.resumeAnimationBound);\n    });\n    data.restartEvents.map(function (eventName) {\n      el.addEventListener(eventName, self.restartAnimationBound);\n    });\n  },\n\n  removeEventListeners: function () {\n    var self = this;\n    var data = this.data;\n    var el = this.el;\n    data.startEvents.map(function (eventName) {\n      el.removeEventListener(eventName, self.playAnimationBound);\n    });\n    data.pauseEvents.map(function (eventName) {\n      el.removeEventListener(eventName, self.pauseAnimationBound);\n    });\n    data.resumeEvents.map(function (eventName) {\n      el.removeEventListener(eventName, self.resumeAnimationBound);\n    });\n    data.restartEvents.map(function (eventName) {\n      el.removeEventListener(eventName, self.restartAnimationBound);\n    });\n  },\n\n  playAnimation: function () {\n    this.animation = anime(this.config);\n    this.animation.play();\n  },\n\n  pauseAnimation: function () {\n    this.animation.pause();\n  },\n\n  resumeAnimation: function () {\n    this.animation.play();\n  },\n\n  restartAnimation: function () {\n    this.animation.restart();\n  }\n});\n\n/**\n * Stuff property into generic `property` key.\n */\nfunction configDefault (el, data, config) {\n  var from = data.from || getComponentProperty(el, data.property);\n  return AFRAME.utils.extend({}, config, {\n    targets: [{aframeProperty: from}],\n    aframeProperty: data.to,\n    update: function () {\n      setComponentProperty(el, data.property, this.targets[0].aframeProperty);\n    }\n  });\n}\n\n/**\n * Extend x/y/z/w onto the config.\n */\nfunction configVector (el, data, config) {\n  var from = getComponentProperty(el, data.property);\n  if (data.from) { from = AFRAME.utils.coordinates.parse(data.from); }\n  var to = AFRAME.utils.coordinates.parse(data.to);\n  return AFRAME.utils.extend({}, config, {\n    targets: [from],\n    update: function () {\n      setComponentProperty(el, data.property, this.targets[0]);\n    }\n  }, to);\n}\n\nfunction getPropertyType (el, property) {\n  var split = property.split('.');\n  var componentName = split[0];\n  var propertyName = split[1];\n  var component = el.components[componentName] || AFRAME.components[componentName];\n\n  // Primitives.\n  if (!component) { return null; }\n\n  if (propertyName) {\n    return component.schema[propertyName].type;\n  }\n  return component.schema.type;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ "../node_modules/aframe-event-set-component/index.js":
/* unknown exports provided */
/* all exports used */
/*!************************************************!*\
  !*** ../~/aframe-event-set-component/index.js ***!
  \************************************************/
/***/ (function(module, exports) {

eval("/* global AFRAME */\nvar styleParser = AFRAME.utils.styleParser;\n\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\nAFRAME.registerComponent('event-set', {\n  schema: {\n    default: '',\n    parse: function (value) {\n      var obj = styleParser.parse(value);\n      // Convert camelCase keys from styleParser to hyphen.\n      var convertedObj = {};\n      Object.keys(obj).forEach(function (key) {\n        var hyphened = key.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n        convertedObj[hyphened] = obj[key];\n      });\n      return convertedObj;\n    }\n  },\n\n  multiple: true,\n\n  init: function () {\n    this.eventHandler = null;\n    this.eventName = null;\n  },\n\n  update: function (oldData) {\n    this.removeEventListener();\n    this.updateEventListener();\n    this.addEventListener();\n  },\n\n  /**\n   * Called when a component is removed (e.g., via removeAttribute).\n   * Generally undoes all modifications to the entity.\n   */\n  remove: function () {\n    this.removeEventListener();\n  },\n\n  /**\n   * Called when entity pauses.\n   * Use to stop or remove any dynamic or background behavior such as events.\n   */\n  pause: function () {\n    this.removeEventListener();\n  },\n\n  /**\n   * Called when entity resumes.\n   * Use to continue or add any dynamic or background behavior such as events.\n   */\n  play: function () {\n    this.addEventListener();\n  },\n\n  /**\n   * Update source-of-truth event listener registry.\n   * Does not actually attach event listeners yet.\n   */\n  updateEventListener: function () {\n    var data = this.data;\n    var el = this.el;\n\n    // Set event listener using `_event`.\n    var event = data._event;\n    var target = data._target;\n    delete data._event;\n    delete data._target;\n\n    // Decide the target to `setAttribute` on.\n    var targetEl = target ? el.sceneEl.querySelector(target) : el;\n\n    this.eventName = event;\n    this.eventHandler = function handler () {\n      // Set attributes.\n      Object.keys(data).forEach(function setAttribute (propName) {\n        AFRAME.utils.entity.setComponentProperty.call(this, targetEl, propName,\n                                                      data[propName]);\n      });\n    };\n  },\n\n  addEventListener: function () {\n    this.el.addEventListener(this.eventName, this.eventHandler);\n  },\n\n  removeEventListener: function () {\n    this.el.removeEventListener(this.eventName, this.eventHandler);\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2FmcmFtZS1ldmVudC1zZXQtY29tcG9uZW50L2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vYWZyYW1lLWV2ZW50LXNldC1jb21wb25lbnQvaW5kZXguanM/ZWFkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgQUZSQU1FICovXG52YXIgc3R5bGVQYXJzZXIgPSBBRlJBTUUudXRpbHMuc3R5bGVQYXJzZXI7XG5cbmlmICh0eXBlb2YgQUZSQU1FID09PSAndW5kZWZpbmVkJykge1xuICB0aHJvdyBuZXcgRXJyb3IoJ0NvbXBvbmVudCBhdHRlbXB0ZWQgdG8gcmVnaXN0ZXIgYmVmb3JlIEFGUkFNRSB3YXMgYXZhaWxhYmxlLicpO1xufVxuXG5BRlJBTUUucmVnaXN0ZXJDb21wb25lbnQoJ2V2ZW50LXNldCcsIHtcbiAgc2NoZW1hOiB7XG4gICAgZGVmYXVsdDogJycsXG4gICAgcGFyc2U6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgdmFyIG9iaiA9IHN0eWxlUGFyc2VyLnBhcnNlKHZhbHVlKTtcbiAgICAgIC8vIENvbnZlcnQgY2FtZWxDYXNlIGtleXMgZnJvbSBzdHlsZVBhcnNlciB0byBoeXBoZW4uXG4gICAgICB2YXIgY29udmVydGVkT2JqID0ge307XG4gICAgICBPYmplY3Qua2V5cyhvYmopLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICB2YXIgaHlwaGVuZWQgPSBrZXkucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgJyQxLSQyJykudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgY29udmVydGVkT2JqW2h5cGhlbmVkXSA9IG9ialtrZXldO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gY29udmVydGVkT2JqO1xuICAgIH1cbiAgfSxcblxuICBtdWx0aXBsZTogdHJ1ZSxcblxuICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5ldmVudEhhbmRsZXIgPSBudWxsO1xuICAgIHRoaXMuZXZlbnROYW1lID0gbnVsbDtcbiAgfSxcblxuICB1cGRhdGU6IGZ1bmN0aW9uIChvbGREYXRhKSB7XG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCk7XG4gICAgdGhpcy51cGRhdGVFdmVudExpc3RlbmVyKCk7XG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIENhbGxlZCB3aGVuIGEgY29tcG9uZW50IGlzIHJlbW92ZWQgKGUuZy4sIHZpYSByZW1vdmVBdHRyaWJ1dGUpLlxuICAgKiBHZW5lcmFsbHkgdW5kb2VzIGFsbCBtb2RpZmljYXRpb25zIHRvIHRoZSBlbnRpdHkuXG4gICAqL1xuICByZW1vdmU6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoKTtcbiAgfSxcblxuICAvKipcbiAgICogQ2FsbGVkIHdoZW4gZW50aXR5IHBhdXNlcy5cbiAgICogVXNlIHRvIHN0b3Agb3IgcmVtb3ZlIGFueSBkeW5hbWljIG9yIGJhY2tncm91bmQgYmVoYXZpb3Igc3VjaCBhcyBldmVudHMuXG4gICAqL1xuICBwYXVzZTogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBDYWxsZWQgd2hlbiBlbnRpdHkgcmVzdW1lcy5cbiAgICogVXNlIHRvIGNvbnRpbnVlIG9yIGFkZCBhbnkgZHluYW1pYyBvciBiYWNrZ3JvdW5kIGJlaGF2aW9yIHN1Y2ggYXMgZXZlbnRzLlxuICAgKi9cbiAgcGxheTogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcigpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBVcGRhdGUgc291cmNlLW9mLXRydXRoIGV2ZW50IGxpc3RlbmVyIHJlZ2lzdHJ5LlxuICAgKiBEb2VzIG5vdCBhY3R1YWxseSBhdHRhY2ggZXZlbnQgbGlzdGVuZXJzIHlldC5cbiAgICovXG4gIHVwZGF0ZUV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZGF0YSA9IHRoaXMuZGF0YTtcbiAgICB2YXIgZWwgPSB0aGlzLmVsO1xuXG4gICAgLy8gU2V0IGV2ZW50IGxpc3RlbmVyIHVzaW5nIGBfZXZlbnRgLlxuICAgIHZhciBldmVudCA9IGRhdGEuX2V2ZW50O1xuICAgIHZhciB0YXJnZXQgPSBkYXRhLl90YXJnZXQ7XG4gICAgZGVsZXRlIGRhdGEuX2V2ZW50O1xuICAgIGRlbGV0ZSBkYXRhLl90YXJnZXQ7XG5cbiAgICAvLyBEZWNpZGUgdGhlIHRhcmdldCB0byBgc2V0QXR0cmlidXRlYCBvbi5cbiAgICB2YXIgdGFyZ2V0RWwgPSB0YXJnZXQgPyBlbC5zY2VuZUVsLnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KSA6IGVsO1xuXG4gICAgdGhpcy5ldmVudE5hbWUgPSBldmVudDtcbiAgICB0aGlzLmV2ZW50SGFuZGxlciA9IGZ1bmN0aW9uIGhhbmRsZXIgKCkge1xuICAgICAgLy8gU2V0IGF0dHJpYnV0ZXMuXG4gICAgICBPYmplY3Qua2V5cyhkYXRhKS5mb3JFYWNoKGZ1bmN0aW9uIHNldEF0dHJpYnV0ZSAocHJvcE5hbWUpIHtcbiAgICAgICAgQUZSQU1FLnV0aWxzLmVudGl0eS5zZXRDb21wb25lbnRQcm9wZXJ0eS5jYWxsKHRoaXMsIHRhcmdldEVsLCBwcm9wTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFbcHJvcE5hbWVdKTtcbiAgICAgIH0pO1xuICAgIH07XG4gIH0sXG5cbiAgYWRkRXZlbnRMaXN0ZW5lcjogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZWwuYWRkRXZlbnRMaXN0ZW5lcih0aGlzLmV2ZW50TmFtZSwgdGhpcy5ldmVudEhhbmRsZXIpO1xuICB9LFxuXG4gIHJlbW92ZUV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmVsLnJlbW92ZUV2ZW50TGlzdGVuZXIodGhpcy5ldmVudE5hbWUsIHRoaXMuZXZlbnRIYW5kbGVyKTtcbiAgfVxufSk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L2FmcmFtZS1ldmVudC1zZXQtY29tcG9uZW50L2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvYWZyYW1lLWV2ZW50LXNldC1jb21wb25lbnQvaW5kZXguanNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/aframe-layout-component/index.js":
/* unknown exports provided */
/* all exports used */
/*!*********************************************!*\
  !*** ../~/aframe-layout-component/index.js ***!
  \*********************************************/
/***/ (function(module, exports) {

eval("/**\n * Layout component for A-Frame.\n * Some layouts adapted from http://www.vb-helper.com/tutorial_platonic_solids.html\n */\nAFRAME.registerComponent('layout', {\n  schema: {\n    columns: {default: 1, min: 0, if: {type: ['box']}},\n    margin: {default: 1, min: 0, if: {type: ['box', 'line']}},\n    plane: {default: 'xy'},\n    radius: {default: 1, min: 0, if: {type: ['circle', 'cube', 'dodecahedron', 'pyramid']}},\n    reverse: {default: false},\n    type: {default: 'line', oneOf: ['box', 'circle', 'cube', 'dodecahedron', 'line',\n                                    'pyramid']}\n  },\n\n  /**\n   * Store initial positions in case need to reset on component removal.\n   */\n  init: function () {\n    var self = this;\n    var el = this.el;\n\n    this.children = el.getChildEntities();\n    this.initialPositions = [];\n\n    this.children.forEach(function getInitialPositions (childEl) {\n      if (childEl.hasLoaded) { return _getPositions(); }\n      childEl.addEventListener('loaded', _getPositions);\n      function _getPositions () {\n        var position = childEl.getAttribute('position');\n        self.initialPositions.push([position.x, position.y, position.z]);\n      }\n    });\n\n    el.addEventListener('child-attached', function (evt) {\n      // Only update if direct child attached.\n      if (evt.detail.el.parentNode !== el) { return; }\n      self.children.push(evt.detail.el);\n      self.update();\n    });\n\n    el.addEventListener('child-detached', function (evt) {\n      // Only update if direct child detached.\n      if (self.children.indexOf(evt.detail.el) === -1) { return; }\n      self.children.splice(self.children.indexOf(evt.detail.el), 1);\n      self.initialPositions.splice(self.children.indexOf(evt.detail.el), 1);\n      self.update();\n    });\n  },\n\n  /**\n   * Update child entity positions.\n   */\n  update: function (oldData) {\n    var children = this.children;\n    var data = this.data;\n    var el = this.el;\n    var numChildren = children.length;\n    var positionFn;\n    var positions;\n    var startPosition = el.getAttribute('position');\n\n    // Calculate different positions based on layout shape.\n    switch (data.type) {\n      case 'box': {\n        positionFn = getBoxPositions;\n        break;\n      }\n      case 'circle': {\n        positionFn = getCirclePositions;\n        break;\n      }\n      case 'cube': {\n        positionFn = getCubePositions;\n        break;\n      }\n      case 'dodecahedron': {\n        positionFn = getDodecahedronPositions;\n        break;\n      }\n      case 'pyramid': {\n        positionFn = getPyramidPositions;\n        break;\n      }\n      default: {\n        // Line.\n        positionFn = getLinePositions;\n      }\n    }\n\n    positions = positionFn(data, numChildren, startPosition);\n    if (data.reverse) { positions.reverse(); }\n    setPositions(children, positions);\n  },\n\n  /**\n   * Reset positions.\n   */\n  remove: function () {\n    this.el.removeEventListener('child-attached', this.childAttachedCallback);\n    setPositions(this.children, this.initialPositions);\n  }\n});\n\n/**\n * Get positions for `box` layout.\n */\nfunction getBoxPositions (data, numChildren, startPosition) {\n  var position;\n  var positions = [];\n  var rows = Math.ceil(numChildren / data.columns);\n\n  for (var row = 0; row < rows; row++) {\n    for (var column = 0; column < data.columns; column++) {\n      position = [0, 0, 0];\n      if (data.plane.indexOf('x') === 0) {\n        position[0] = column * data.margin;\n      }\n      if (data.plane.indexOf('y') === 0) {\n        position[1] = column * data.margin;\n      }\n      if (data.plane.indexOf('y') === 1) {\n        position[1] = row * data.margin;\n      }\n      if (data.plane.indexOf('z') === 1) {\n        position[2] = row * data.margin;\n      }\n      positions.push(position);\n    }\n  }\n\n  return positions;\n}\nmodule.exports.getBoxPositions = getBoxPositions;\n\n/**\n * Get positions for `circle` layout.\n * TODO: arcLength.\n */\nfunction getCirclePositions (data, numChildren, startPosition) {\n  var positions = [];\n\n  for (var i = 0; i < numChildren; i++) {\n    var rad = i * (2 * Math.PI) / numChildren;\n    var position = [\n      startPosition.x,\n      startPosition.y,\n      startPosition.z\n    ];\n    if (data.plane.indexOf('x') === 0) {\n      position[0] += data.radius * Math.cos(rad);\n    }\n    if (data.plane.indexOf('y') === 0) {\n      position[1] += data.radius * Math.cos(rad);\n    }\n    if (data.plane.indexOf('y') === 1) {\n      position[1] += data.radius * Math.sin(rad);\n    }\n    if (data.plane.indexOf('z') === 1) {\n      position[2] += data.radius * Math.sin(rad);\n    }\n    positions.push(position);\n  }\n  return positions;\n}\nmodule.exports.getCirclePositions = getCirclePositions;\n\n/**\n * Get positions for `line` layout.\n * TODO: 3D margins.\n */\nfunction getLinePositions (data, numChildren, startPosition) {\n  data.columns = numChildren;\n  return getBoxPositions(data, numChildren, startPosition);\n}\nmodule.exports.getLinePositions = getLinePositions;\n\n/**\n * Get positions for `cube` layout.\n */\nfunction getCubePositions (data, numChildren, startPosition) {\n  return transform([\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1],\n    [-1, 0, 0],\n    [0, -1, 0],\n    [0, 0, -1],\n  ], startPosition, data.radius / 2);\n}\nmodule.exports.getCubePositions = getCubePositions;\n\n/**\n * Get positions for `dodecahedron` layout.\n */\nfunction getDodecahedronPositions (data, numChildren, startPosition) {\n  var PHI = (1 + Math.sqrt(5)) / 2;\n  var B = 1 / PHI;\n  var C = 2 - PHI;\n  var NB = -1 * B;\n  var NC = -1 * C;\n\n  return transform([\n    [-1, C, 0],\n    [-1, NC, 0],\n    [0, -1, C],\n    [0, -1, NC],\n    [0, 1, C],\n    [0, 1, NC],\n    [1, C, 0],\n    [1, NC, 0],\n    [B, B, B],\n    [B, B, NB],\n    [B, NB, B],\n    [B, NB, NB],\n    [C, 0, 1],\n    [C, 0, -1],\n    [NB, B, B],\n    [NB, B, NB],\n    [NB, NB, B],\n    [NB, NB, NB],\n    [NC, 0, 1],\n    [NC, 0, -1],\n  ], startPosition, data.radius / 2);\n}\nmodule.exports.getDodecahedronPositions = getDodecahedronPositions;\n\n/**\n * Get positions for `pyramid` layout.\n */\nfunction getPyramidPositions (data, numChildren, startPosition) {\n  var SQRT_3 = Math.sqrt(3);\n  var NEG_SQRT_1_3 = -1 / Math.sqrt(3);\n  var DBL_SQRT_2_3 = 2 * Math.sqrt(2 / 3);\n\n  return transform([\n    [0, 0, SQRT_3 + NEG_SQRT_1_3],\n    [-1, 0, NEG_SQRT_1_3],\n    [1, 0, NEG_SQRT_1_3],\n    [0, DBL_SQRT_2_3, 0]\n  ], startPosition, data.radius / 2);\n}\nmodule.exports.getPyramidPositions = getPyramidPositions;\n\n/**\n * Multiply all coordinates by a scale factor and add translate.\n *\n * @params {array} positions - Array of coordinates in array form.\n * @returns {array} positions\n */\nfunction transform (positions, translate, scale) {\n  translate = [translate.x, translate.y, translate.z];\n  return positions.map(function (position) {\n    return position.map(function (point, i) {\n      return point * scale + translate[i];\n    });\n  });\n};\n\n/**\n * Set position on child entities.\n *\n * @param {array} els - Child entities to set.\n * @param {array} positions - Array of coordinates.\n */\nfunction setPositions (els, positions) {\n  els.forEach(function (el, i) {\n    var position = positions[i];\n    el.setAttribute('position', {\n      x: position[0],\n      y: position[1],\n      z: position[2]\n    });\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ "../node_modules/aframe-look-at-component/index.js":
/* unknown exports provided */
/* all exports used */
/*!**********************************************!*\
  !*** ../~/aframe-look-at-component/index.js ***!
  \**********************************************/
/***/ (function(module, exports) {

eval("var debug = AFRAME.utils.debug;\nvar coordinates = AFRAME.utils.coordinates;\n\nvar warn = debug('components:look-at:warn');\nvar isCoordinate = coordinates.isCoordinate;\n\ndelete AFRAME.components['look-at'];\n\n/**\n * Look-at component.\n *\n * Modifies rotation to either track another entity OR do a one-time turn towards a position\n * vector.\n *\n * If tracking an object via setting the component value via a selector, look-at will register\n * a behavior to the scene to update rotation on every tick.\n */\nAFRAME.registerComponent('look-at', {\n  schema: {\n    default: '',\n\n    parse: function (value) {\n      // A static position to look at.\n      if (isCoordinate(value) || typeof value === 'object') {\n        return coordinates.parse(value);\n      }\n      // A selector to a target entity.\n      return value;\n    },\n\n    stringify: function (data) {\n      if (typeof data === 'object') {\n        return coordinates.stringify(data);\n      }\n      return data;\n    }\n  },\n\n  init: function () {\n    this.target3D = null;\n    this.vector = new THREE.Vector3();\n  },\n\n  /**\n   * If tracking an object, this will be called on every tick.\n   * If looking at a position vector, this will only be called once (until further updates).\n   */\n  update: function () {\n    var self = this;\n    var target = self.data;\n    var object3D = self.el.object3D;\n    var targetEl;\n\n    // No longer looking at anything (i.e., look-at=\"\").\n    if (!target || (typeof target === 'object' && !Object.keys(target).length)) {\n      return self.remove();\n    }\n\n    // Look at a position.\n    if (typeof target === 'object') {\n      return object3D.lookAt(new THREE.Vector3(target.x, target.y, target.z));\n    }\n\n    // Assume target is a string.\n    // Query for the element, grab its object3D, then register a behavior on the scene to\n    // track the target on every tick.\n    targetEl = self.el.sceneEl.querySelector(target);\n    if (!targetEl) {\n      warn('\"' + target + '\" does not point to a valid entity to look-at');\n      return;\n    }\n    if (!targetEl.hasLoaded) {\n      return targetEl.addEventListener('loaded', function () {\n        self.beginTracking(targetEl);\n      });\n    }\n    return self.beginTracking(targetEl);\n  },\n\n  tick: function (t) {\n    // Track target object position. Depends on parent object keeping global transforms up\n    // to state with updateMatrixWorld(). In practice, this is handled by the renderer.\n    var target3D = this.target3D;\n    if (target3D) {\n      var vector = this.el.object3D.parent.worldToLocal(target3D.getWorldPosition());\n      return this.el.object3D.lookAt(vector);\n    }\n  },\n\n  beginTracking: function (targetEl) {\n    this.target3D = targetEl.object3D;\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2FmcmFtZS1sb29rLWF0LWNvbXBvbmVudC9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L2FmcmFtZS1sb29rLWF0LWNvbXBvbmVudC9pbmRleC5qcz85NWE1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBkZWJ1ZyA9IEFGUkFNRS51dGlscy5kZWJ1ZztcbnZhciBjb29yZGluYXRlcyA9IEFGUkFNRS51dGlscy5jb29yZGluYXRlcztcblxudmFyIHdhcm4gPSBkZWJ1ZygnY29tcG9uZW50czpsb29rLWF0Ondhcm4nKTtcbnZhciBpc0Nvb3JkaW5hdGUgPSBjb29yZGluYXRlcy5pc0Nvb3JkaW5hdGU7XG5cbmRlbGV0ZSBBRlJBTUUuY29tcG9uZW50c1snbG9vay1hdCddO1xuXG4vKipcbiAqIExvb2stYXQgY29tcG9uZW50LlxuICpcbiAqIE1vZGlmaWVzIHJvdGF0aW9uIHRvIGVpdGhlciB0cmFjayBhbm90aGVyIGVudGl0eSBPUiBkbyBhIG9uZS10aW1lIHR1cm4gdG93YXJkcyBhIHBvc2l0aW9uXG4gKiB2ZWN0b3IuXG4gKlxuICogSWYgdHJhY2tpbmcgYW4gb2JqZWN0IHZpYSBzZXR0aW5nIHRoZSBjb21wb25lbnQgdmFsdWUgdmlhIGEgc2VsZWN0b3IsIGxvb2stYXQgd2lsbCByZWdpc3RlclxuICogYSBiZWhhdmlvciB0byB0aGUgc2NlbmUgdG8gdXBkYXRlIHJvdGF0aW9uIG9uIGV2ZXJ5IHRpY2suXG4gKi9cbkFGUkFNRS5yZWdpc3RlckNvbXBvbmVudCgnbG9vay1hdCcsIHtcbiAgc2NoZW1hOiB7XG4gICAgZGVmYXVsdDogJycsXG5cbiAgICBwYXJzZTogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAvLyBBIHN0YXRpYyBwb3NpdGlvbiB0byBsb29rIGF0LlxuICAgICAgaWYgKGlzQ29vcmRpbmF0ZSh2YWx1ZSkgfHwgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gY29vcmRpbmF0ZXMucGFyc2UodmFsdWUpO1xuICAgICAgfVxuICAgICAgLy8gQSBzZWxlY3RvciB0byBhIHRhcmdldCBlbnRpdHkuXG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSxcblxuICAgIHN0cmluZ2lmeTogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIGNvb3JkaW5hdGVzLnN0cmluZ2lmeShkYXRhKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cbiAgfSxcblxuICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy50YXJnZXQzRCA9IG51bGw7XG4gICAgdGhpcy52ZWN0b3IgPSBuZXcgVEhSRUUuVmVjdG9yMygpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBJZiB0cmFja2luZyBhbiBvYmplY3QsIHRoaXMgd2lsbCBiZSBjYWxsZWQgb24gZXZlcnkgdGljay5cbiAgICogSWYgbG9va2luZyBhdCBhIHBvc2l0aW9uIHZlY3RvciwgdGhpcyB3aWxsIG9ubHkgYmUgY2FsbGVkIG9uY2UgKHVudGlsIGZ1cnRoZXIgdXBkYXRlcykuXG4gICAqL1xuICB1cGRhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdmFyIHRhcmdldCA9IHNlbGYuZGF0YTtcbiAgICB2YXIgb2JqZWN0M0QgPSBzZWxmLmVsLm9iamVjdDNEO1xuICAgIHZhciB0YXJnZXRFbDtcblxuICAgIC8vIE5vIGxvbmdlciBsb29raW5nIGF0IGFueXRoaW5nIChpLmUuLCBsb29rLWF0PVwiXCIpLlxuICAgIGlmICghdGFyZ2V0IHx8ICh0eXBlb2YgdGFyZ2V0ID09PSAnb2JqZWN0JyAmJiAhT2JqZWN0LmtleXModGFyZ2V0KS5sZW5ndGgpKSB7XG4gICAgICByZXR1cm4gc2VsZi5yZW1vdmUoKTtcbiAgICB9XG5cbiAgICAvLyBMb29rIGF0IGEgcG9zaXRpb24uXG4gICAgaWYgKHR5cGVvZiB0YXJnZXQgPT09ICdvYmplY3QnKSB7XG4gICAgICByZXR1cm4gb2JqZWN0M0QubG9va0F0KG5ldyBUSFJFRS5WZWN0b3IzKHRhcmdldC54LCB0YXJnZXQueSwgdGFyZ2V0LnopKTtcbiAgICB9XG5cbiAgICAvLyBBc3N1bWUgdGFyZ2V0IGlzIGEgc3RyaW5nLlxuICAgIC8vIFF1ZXJ5IGZvciB0aGUgZWxlbWVudCwgZ3JhYiBpdHMgb2JqZWN0M0QsIHRoZW4gcmVnaXN0ZXIgYSBiZWhhdmlvciBvbiB0aGUgc2NlbmUgdG9cbiAgICAvLyB0cmFjayB0aGUgdGFyZ2V0IG9uIGV2ZXJ5IHRpY2suXG4gICAgdGFyZ2V0RWwgPSBzZWxmLmVsLnNjZW5lRWwucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuICAgIGlmICghdGFyZ2V0RWwpIHtcbiAgICAgIHdhcm4oJ1wiJyArIHRhcmdldCArICdcIiBkb2VzIG5vdCBwb2ludCB0byBhIHZhbGlkIGVudGl0eSB0byBsb29rLWF0Jyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICghdGFyZ2V0RWwuaGFzTG9hZGVkKSB7XG4gICAgICByZXR1cm4gdGFyZ2V0RWwuYWRkRXZlbnRMaXN0ZW5lcignbG9hZGVkJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBzZWxmLmJlZ2luVHJhY2tpbmcodGFyZ2V0RWwpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBzZWxmLmJlZ2luVHJhY2tpbmcodGFyZ2V0RWwpO1xuICB9LFxuXG4gIHRpY2s6IGZ1bmN0aW9uICh0KSB7XG4gICAgLy8gVHJhY2sgdGFyZ2V0IG9iamVjdCBwb3NpdGlvbi4gRGVwZW5kcyBvbiBwYXJlbnQgb2JqZWN0IGtlZXBpbmcgZ2xvYmFsIHRyYW5zZm9ybXMgdXBcbiAgICAvLyB0byBzdGF0ZSB3aXRoIHVwZGF0ZU1hdHJpeFdvcmxkKCkuIEluIHByYWN0aWNlLCB0aGlzIGlzIGhhbmRsZWQgYnkgdGhlIHJlbmRlcmVyLlxuICAgIHZhciB0YXJnZXQzRCA9IHRoaXMudGFyZ2V0M0Q7XG4gICAgaWYgKHRhcmdldDNEKSB7XG4gICAgICB2YXIgdmVjdG9yID0gdGhpcy5lbC5vYmplY3QzRC5wYXJlbnQud29ybGRUb0xvY2FsKHRhcmdldDNELmdldFdvcmxkUG9zaXRpb24oKSk7XG4gICAgICByZXR1cm4gdGhpcy5lbC5vYmplY3QzRC5sb29rQXQodmVjdG9yKTtcbiAgICB9XG4gIH0sXG5cbiAgYmVnaW5UcmFja2luZzogZnVuY3Rpb24gKHRhcmdldEVsKSB7XG4gICAgdGhpcy50YXJnZXQzRCA9IHRhcmdldEVsLm9iamVjdDNEO1xuICB9XG59KTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vYWZyYW1lLWxvb2stYXQtY29tcG9uZW50L2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvYWZyYW1lLWxvb2stYXQtY29tcG9uZW50L2luZGV4LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/aframe-particle-system-component/index.js":
/* unknown exports provided */
/* all exports used */
/*!******************************************************!*\
  !*** ../~/aframe-particle-system-component/index.js ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Particles component for A-Frame.\n *\n * ShaderParticleEngine by Squarefeet (https://github.com/squarefeet).\n */\n\nvar SPE = __webpack_require__(/*! ./lib/SPE.js */ \"../node_modules/aframe-particle-system-component/lib/SPE.js\");\n\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\nAFRAME.registerComponent('particle-system', {\n\n    schema: {\n        preset: {\n            type: 'string',\n            default: '',\n            oneOf: ['default', 'dust', 'snow', 'rain']\n        },\n        maxAge: {\n            type: 'number'\n        },\n        positionSpread: {\n            type: 'vec3'\n        },\n        type: {\n            type: 'number'\n        },\n        rotationAxis: {\n            type: 'string'\n        },\n        rotationAngle: {\n            type: 'number'\n        },\n        accelerationValue: {\n            type: 'vec3'\n        },\n        accelerationSpread: {\n            type: 'vec3'\n        },\n        velocityValue: {\n            type: 'vec3'\n        },\n        velocitySpread: {\n            type: 'vec3'\n        },\n        color: {\n            type: 'array'\n        },\n        size: {\n            type: 'number'\n        },\n        direction: {\n            type: 'number'\n        },\n        duration: {\n            type: 'number'\n        },\n        particleCount: {\n            type: 'number'\n        },\n        texture: {\n            type: 'asset'\n        },\n        randomize: {\n            type: 'boolean'\n        },\n        opacity: {\n          type: 'number',\n        },\n        maxParticleCount: {\n            type: 'number',\n            default: 250000\n        },\n        blending: {\n            type: 'number',\n            default: THREE.AdditiveBlending,\n            oneOf: [THREE.NoBlending,THREE.NormalBlending,THREE.AdditiveBlending,THREE.SubtractiveBlending,THREE.MultiplyBlending]\n        }\n    },\n\n\n    init: function() {\n\n        this.presets = [];\n\n        /* preset settings can be overwritten */\n\n        this.presets['default'] = {\n            maxAge: (this.data.maxAge!==0?this.data.maxAge:6),\n            positionSpread: (this.data.positionSpread.x!==0||this.data.positionSpread.y!==0||this.data.positionSpread.z!==0?this.data.positionSpread:{x:0,y:0,z:0}),\n            type: (this.data.type!==0?this.data.type:SPE.distributions.BOX), /* SPE.distributions.SPHERE, SPE.distributions.DISC */\n            rotationAxis: (this.data.rotationAxis!==''?this.data.rotationAxis:'x'),\n            rotationAngle: (this.data.rotationAngle!==0?this.data.rotationAngle:0),\n            accelerationValue: (this.data.accelerationValue.x!==0||this.data.accelerationValue.y!==0||this.data.accelerationValue.z!==0?this.data.accelerationValue:{x: 0, y: -10, z: 0}),\n            accelerationSpread: (this.data.accelerationSpread.x!==0||this.data.accelerationSpread.y!==0||this.data.accelerationSpread.z!==0?this.data.accelerationSpread:{x: 10, y: 0, z: 10}),\n            velocityValue: (this.data.velocityValue.x!==0||this.data.velocityValue.y!==0||this.data.velocityValue.z!==0?this.data.velocityValue:{x: 0, y: 25, z: 0}),\n            velocitySpread: (this.data.velocitySpread.x!==0||this.data.velocitySpread.y!==0||this.data.velocitySpread.z!==0?this.data.velocitySpread:{x: 10, y: 7.5, z: 10}),\n            color: (this.data.color.length?this.data.color:['#0000FF','#FF0000']),\n            size: (this.data.size!==0?this.data.size:1),\n            opacity: { value: (this.data.opacity!=0?this.data.opacity:1) },\n            direction: (this.data.direction!==0?this.data.direction:1),\n            duration: (this.data.duration!=0?this.data.duration:null),\n            particleCount: (this.data.particleCount!==0?this.data.particleCount:1000),\n            texture: (this.data.texture!==''?this.data.texture:'https://cdn.rawgit.com/IdeaSpaceVR/aframe-particle-system-component/master/dist/images/star2.png'),\n            randomize: false\n        };\n\n\n        this.presets['dust'] = {\n            maxAge: (this.data.maxAge!==0?this.data.maxAge:20),\n            positionSpread: (this.data.positionSpread.x!==0||this.data.positionSpread.y!==0||this.data.positionSpread.z!==0?this.data.positionSpread:{x:100,y:100,z:100}),\n            type: (this.data.type!==0?this.data.type:SPE.distributions.BOX), /* SPE.distributions.SPHERE, SPE.distributions.DISC */\n            rotationAxis: (this.data.rotationAxis!==''?this.data.rotationAxis:'x'),\n            rotationAngle: (this.data.rotationAngle!==0?this.data.rotationAngle:3.14),\n            accelerationValue: (this.data.accelerationValue.x!==0||this.data.accelerationValue.y!==0||this.data.accelerationValue.z!==0?this.data.accelerationValue:{x: 0, y: 0, z: 0}),\n            accelerationSpread: (this.data.accelerationSpread.x!==0||this.data.accelerationSpread.y!==0||this.data.accelerationSpread.z!==0?this.data.accelerationSpread:{x: 0, y: 0, z: 0}),\n            velocityValue: (this.data.velocityValue.x!==0||this.data.velocityValue.y!==0||this.data.velocityValue.z!==0?this.data.velocityValue:{x: 1, y: 0.3, z: 1}),\n            velocitySpread: (this.data.velocitySpread.x!==0||this.data.velocitySpread.y!==0||this.data.velocitySpread.z!==0?this.data.velocitySpread:{x: 0.5, y: 1, z: 0.5}),\n            color: (this.data.color.length?this.data.color:['#FFFFFF']),\n            size: (this.data.size!==0?this.data.size:1),\n            opacity: { value: (this.data.opacity!=0?this.data.opacity:1) },\n            direction: (this.data.direction!==0?this.data.direction:1),\n            duration: (this.data.duration!=0?this.data.duration:null),\n            particleCount: (this.data.particleCount!==0?this.data.particleCount:100),\n            texture: (this.data.texture!==''?this.data.texture:'https://cdn.rawgit.com/IdeaSpaceVR/aframe-particle-system-component/master/dist/images/smokeparticle.png'),\n            randomize: false\n        };\n\n\n        this.presets['snow'] = {\n            maxAge: (this.data.maxAge!==0?this.data.maxAge:20),\n            positionSpread: (this.data.positionSpread.x!==0||this.data.positionSpread.y!==0||this.data.positionSpread.z!==0?this.data.positionSpread:{x:100,y:100,z:100}),\n            type: (this.data.type!==0?this.data.type:SPE.distributions.BOX), /* SPE.distributions.SPHERE, SPE.distributions.DISC */\n            rotationAxis: (this.data.rotationAxis!==''?this.data.rotationAxis:'x'),\n            rotationAngle: (this.data.rotationAngle!==0?this.data.rotationAngle:3.14),\n            accelerationValue: (this.data.accelerationValue.x!==0||this.data.accelerationValue.y!==0||this.data.accelerationValue.z!==0?this.data.accelerationValue:{x: 0, y: 0, z: 0}),\n            accelerationSpread: (this.data.accelerationSpread.x!==0||this.data.accelerationSpread.y!==0||this.data.accelerationSpread.z!==0?this.data.accelerationSpread:{x: 0.2, y: 0, z: 0.2}),\n            velocityValue: (this.data.velocityValue.x!==0||this.data.velocityValue.y!==0||this.data.velocityValue.z!==0?this.data.velocityValue:{x: 0, y: 8, z: 0}),\n            velocitySpread: (this.data.velocitySpread.x!==0||this.data.velocitySpread.y!==0||this.data.velocitySpread.z!==0?this.data.velocitySpread:{x: 2, y: 0, z: 2}),\n            color: (this.data.color.length?this.data.color:['#FFFFFF']),\n            size: (this.data.size!==0?this.data.size:1),\n            opacity: { value: (this.data.opacity!=0?this.data.opacity:1) },\n            direction: (this.data.direction!==0?this.data.direction:1),\n            duration: (this.data.duration!=0?this.data.duration:null),\n            particleCount: (this.data.particleCount!==0?this.data.particleCount:200),\n            texture: (this.data.texture!==''?this.data.texture:'https://cdn.rawgit.com/IdeaSpaceVR/aframe-particle-system-component/master/dist/images/smokeparticle.png'),\n            randomize: false\n        };\n\n\n        this.presets['rain'] = {\n            maxAge: (this.data.maxAge!==0?this.data.maxAge:1),\n            positionSpread: (this.data.positionSpread.x!==0||this.data.positionSpread.y!==0||this.data.positionSpread.z!==0?this.data.positionSpread:{x:100,y:100,z:100}),\n            type: (this.data.type!==0?this.data.type:SPE.distributions.BOX), /* SPE.distributions.SPHERE, SPE.distributions.DISC */\n            rotationAxis: (this.data.rotationAxis!==''?this.data.rotationAxis:'x'),\n            rotationAngle: (this.data.rotationAngle!==0?this.data.rotationAngle:3.14),\n            accelerationValue: (this.data.accelerationValue.x!==0||this.data.accelerationValue.y!==0||this.data.accelerationValue.z!==0?this.data.accelerationValue:{x: 0, y: 3, z: 0}),\n            accelerationSpread: (this.data.accelerationSpread.x!==0||this.data.accelerationSpread.y!==0||this.data.accelerationSpread.z!==0?this.data.accelerationSpread:{x: 2, y: 1, z: 2}),\n            velocityValue: (this.data.velocityValue.x!==0||this.data.velocityValue.y!==0||this.data.velocityValue.z!==0?this.data.velocityValue:{x: 0, y: 75, z: 0}),\n            velocitySpread: (this.data.velocitySpread.x!==0||this.data.velocitySpread.y!==0||this.data.velocitySpread.z!==0?this.data.velocitySpread:{x: 10, y: 50, z: 10}),\n            color: (this.data.color.length?this.data.color:['#FFFFFF']),\n            size: (this.data.size!==0?this.data.size:0.4),\n            opacity: { value: (this.data.opacity!=0?this.data.opacity:1) },\n            direction: (this.data.direction!==0?this.data.direction:1),\n            duration: (this.data.duration!=0?this.data.duration:null),\n            particleCount: (this.data.particleCount!==0?this.data.particleCount:1000),\n            texture: (this.data.texture!==''?this.data.texture:'https://cdn.rawgit.com/IdeaSpaceVR/aframe-particle-system-component/master/dist/images/raindrop.png'),\n            randomize: false\n        };\n\n\n    },\n\n\n    update: function (oldData) {\n\n        // Remove old particle group.\n        if (this.particleGroup) {\n            this.el.removeObject3D('particle-system');\n        }\n\n        if (this.data.preset != '' && this.data.preset in this.presets) {\n\n            this.initParticleSystem(this.presets[this.data.preset]);\n\n        } else {\n\n            this.initParticleSystem(this.presets['default']);\n        }\n\n    },\n\n\n    tick: function(time, dt) {\n\n        this.particleGroup.tick(dt / 1000);\n    },\n\n\n    remove: function() {\n\n        // Remove particle system.\n        if (!this.particleGroup) { return; }\n        this.el.removeObject3D('particle-system');\n    },\n\n\n    initParticleSystem: function(settings) {\n\n        var loader = new THREE.TextureLoader();\n        var particle_texture = loader.load(\n            settings.texture,\n            function (texture) {\n                return texture;\n            },\n            function (xhr) {\n              console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n            },\n            function (xhr) {\n              console.log('An error occurred');\n            }\n        );\n\n        this.particleGroup = new SPE.Group({\n            texture: {\n                value: particle_texture\n            },\n            maxParticleCount: this.data.maxParticleCount,\n            blending: this.data.blending\n        });\n\n        var emitter = new SPE.Emitter({\n            maxAge: {\n                value: settings.maxAge\n            },\n            type: {\n                value: settings.type\n            },\n            position: {\n                value: this.el.object3D.position,\n                spread: new THREE.Vector3(settings.positionSpread.x, settings.positionSpread.y, settings.positionSpread.z),\n                randomize: settings.randomize\n                //spreadClamp: new THREE.Vector3( 2, 2, 2 ),\n                //radius: 4\n            },\n            rotation: {\n                axis: (settings.rotationAxis=='x'?new THREE.Vector3(1, 0, 0):(settings.rotationAxis=='y'?new THREE.Vector3(0, 1, 0):(settings.rotationAxis=='z'?new THREE.Vector3(0, 0, 1):new THREE.Vector3(0, 1, 0)))),\n                angle: settings.rotationAngle,\n                static: true\n            },\n            acceleration: {\n                value: new THREE.Vector3(settings.accelerationValue.x, settings.accelerationValue.y, settings.accelerationValue.z),\n                spread: new THREE.Vector3(settings.accelerationSpread.x, settings.accelerationSpread.y, settings.accelerationSpread.z)\n            },\n            velocity: {\n                value: new THREE.Vector3(settings.velocityValue.x, settings.velocityValue.y, settings.velocityValue.z),\n                spread: new THREE.Vector3(settings.velocitySpread.x, settings.velocitySpread.y, settings.velocitySpread.z)\n            },\n            color: {\n                value: settings.color.map(function(c) { return new THREE.Color(c); })\n            },\n            size: {\n                value: settings.size\n            },\n            /*wiggle: { value: 4, spread: 2 }, //settings.wiggle,*/\n            /*drag: {\n                value: settings.drag\n            },*/\n            direction: {\n                value: settings.direction\n            },\n            duration: settings.duration,\n            opacity: settings.opacity,\n            particleCount: settings.particleCount\n        });\n\n        this.particleGroup.addEmitter(emitter);\n        this.particleGroup.mesh.frustumCulled = false;\n        this.el.setObject3D('particle-system', this.particleGroup.mesh);\n    }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ "../node_modules/aframe-particle-system-component/lib/SPE.js":
/* unknown exports provided */
/* all exports used */
/*!********************************************************!*\
  !*** ../~/aframe-particle-system-component/lib/SPE.js ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/* shader-particle-engine 1.0.5\n * \n * (c) 2015 Luke Moody (http://www.github.com/squarefeet)\n *     Originally based on Lee Stemkoski's original work (https://github.com/stemkoski/stemkoski.github.com/blob/master/Three.js/js/ParticleEngine.js).\n *\n * shader-particle-engine may be freely distributed under the MIT license (See LICENSE at root of this repository.)\n */\n/**\n * @typedef {Number} distribution\n * @property {Number} SPE.distributions.BOX Values will be distributed within a box.\n * @property {Number} SPE.distributions.SPHERE Values will be distributed within a sphere.\n * @property {Number} SPE.distributions.DISC Values will be distributed within a 2D disc.\n */\n\n/**\n * Namespace for Shader Particle Engine.\n *\n * All SPE-related code sits under this namespace.\n *\n * @type {Object}\n * @namespace\n */\nvar SPE = {\n\n    /**\n     * A map of supported distribution types used\n     * by SPE.Emitter instances.\n     *\n     * These distribution types can be applied to\n     * an emitter globally, which will affect the\n     * `position`, `velocity`, and `acceleration`\n     * value calculations for an emitter, or they\n     * can be applied on a per-property basis.\n     *\n     * @enum {Number}\n     */\n    distributions: {\n        /**\n         * Values will be distributed within a box.\n         * @type {Number}\n         */\n        BOX: 1,\n\n        /**\n         * Values will be distributed on a sphere.\n         * @type {Number}\n         */\n        SPHERE: 2,\n\n        /**\n         * Values will be distributed on a 2d-disc shape.\n         * @type {Number}\n         */\n        DISC: 3,\n    },\n\n\n    /**\n     * Set this value to however many 'steps' you\n     * want value-over-lifetime properties to have.\n     *\n     * It's adjustable to fix an interpolation problem:\n     *\n     * Assuming you specify an opacity value as [0, 1, 0]\n     *      and the `valueOverLifetimeLength` is 4, then the\n     *      opacity value array will be reinterpolated to\n     *      be [0, 0.66, 0.66, 0].\n     *   This isn't ideal, as particles would never reach\n     *   full opacity.\n     *\n     * NOTE:\n     *     This property affects the length of ALL\n     *       value-over-lifetime properties for ALL\n     *       emitters and ALL groups.\n     *\n     *     Only values >= 3 && <= 4 are allowed.\n     *\n     * @type {Number}\n     */\n    valueOverLifetimeLength: 4\n};\n\n// Module loader support:\nif ( true ) {\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (SPE),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\nelse if ( typeof exports !== 'undefined' && typeof module !== 'undefined' ) {\n    module.exports = SPE;\n}\n\n/**\n * A helper class for TypedArrays.\n *\n * Allows for easy resizing, assignment of various component-based\n * types (Vector2s, Vector3s, Vector4s, Mat3s, Mat4s),\n * as well as Colors (where components are `r`, `g`, `b`),\n * Numbers, and setting from other TypedArrays.\n *\n * @author Luke Moody\n * @constructor\n * @param {Function} TypedArrayConstructor The constructor to use (Float32Array, Uint8Array, etc.)\n * @param {Number} size                 The size of the array to create\n * @param {Number} componentSize        The number of components per-value (ie. 3 for a vec3, 9 for a Mat3, etc.)\n * @param {Number} indexOffset          The index in the array from which to start assigning values. Default `0` if none provided\n */\nSPE.TypedArrayHelper = function( TypedArrayConstructor, size, componentSize, indexOffset ) {\n    'use strict';\n\n    this.componentSize = componentSize || 1;\n    this.size = ( size || 1 );\n    this.TypedArrayConstructor = TypedArrayConstructor || Float32Array;\n    this.array = new TypedArrayConstructor( size * this.componentSize );\n    this.indexOffset = indexOffset || 0;\n};\n\nSPE.TypedArrayHelper.constructor = SPE.TypedArrayHelper;\n\n/**\n * Sets the size of the internal array.\n *\n * Delegates to `this.shrink` or `this.grow` depending on size\n * argument's relation to the current size of the internal array.\n *\n * Note that if the array is to be shrunk, data will be lost.\n *\n * @param {Number} size The new size of the array.\n */\nSPE.TypedArrayHelper.prototype.setSize = function( size, noComponentMultiply ) {\n    'use strict';\n\n    var currentArraySize = this.array.length;\n\n    if ( !noComponentMultiply ) {\n        size = size * this.componentSize;\n    }\n\n    if ( size < currentArraySize ) {\n        return this.shrink( size );\n    }\n    else if ( size > currentArraySize ) {\n        return this.grow( size );\n    }\n    else {\n        console.info( 'TypedArray is already of size:', size + '.', 'Will not resize.' );\n    }\n};\n\n/**\n * Shrinks the internal array.\n *\n * @param  {Number} size The new size of the typed array. Must be smaller than `this.array.length`.\n * @return {SPE.TypedArrayHelper}      Instance of this class.\n */\nSPE.TypedArrayHelper.prototype.shrink = function( size ) {\n    'use strict';\n\n    this.array = this.array.subarray( 0, size );\n    this.size = size;\n    return this;\n};\n\n/**\n * Grows the internal array.\n * @param  {Number} size The new size of the typed array. Must be larger than `this.array.length`.\n * @return {SPE.TypedArrayHelper}      Instance of this class.\n */\nSPE.TypedArrayHelper.prototype.grow = function( size ) {\n    'use strict';\n\n    var existingArray = this.array,\n        newArray = new this.TypedArrayConstructor( size );\n\n    newArray.set( existingArray );\n    this.array = newArray;\n    this.size = size;\n\n    return this;\n};\n\n\n/**\n * Perform a splice operation on this array's buffer.\n * @param  {Number} start The start index of the splice. Will be multiplied by the number of components for this attribute.\n * @param  {Number} end The end index of the splice. Will be multiplied by the number of components for this attribute.\n * @returns {Object} The SPE.TypedArrayHelper instance.\n */\nSPE.TypedArrayHelper.prototype.splice = function( start, end ) {\n    'use strict';\n    start *= this.componentSize;\n    end *= this.componentSize;\n\n    var data = [],\n        array = this.array,\n        size = array.length;\n\n    for ( var i = 0; i < size; ++i ) {\n        if ( i < start || i >= end ) {\n            data.push( array[ i ] );\n        }\n        // array[ i ] = 0;\n    }\n\n    this.setFromArray( 0, data );\n\n    return this;\n};\n\n\n/**\n * Copies from the given TypedArray into this one, using the index argument\n * as the start position. Alias for `TypedArray.set`. Will automatically resize\n * if the given source array is of a larger size than the internal array.\n *\n * @param {Number} index      The start position from which to copy into this array.\n * @param {TypedArray} array The array from which to copy; the source array.\n * @return {SPE.TypedArrayHelper} Instance of this class.\n */\nSPE.TypedArrayHelper.prototype.setFromArray = function( index, array ) {\n    'use strict';\n\n    var sourceArraySize = array.length,\n        newSize = index + sourceArraySize;\n\n    if ( newSize > this.array.length ) {\n        this.grow( newSize );\n    }\n    else if ( newSize < this.array.length ) {\n        this.shrink( newSize );\n    }\n\n    this.array.set( array, this.indexOffset + index );\n\n    return this;\n};\n\n/**\n * Set a Vector2 value at `index`.\n *\n * @param {Number} index The index at which to set the vec2 values from.\n * @param {Vector2} vec2  Any object that has `x` and `y` properties.\n * @return {SPE.TypedArrayHelper} Instance of this class.\n */\nSPE.TypedArrayHelper.prototype.setVec2 = function( index, vec2 ) {\n    'use strict';\n\n    return this.setVec2Components( index, vec2.x, vec2.y );\n};\n\n/**\n * Set a Vector2 value using raw components.\n *\n * @param {Number} index The index at which to set the vec2 values from.\n * @param {Number} x     The Vec2's `x` component.\n * @param {Number} y     The Vec2's `y` component.\n * @return {SPE.TypedArrayHelper} Instance of this class.\n */\nSPE.TypedArrayHelper.prototype.setVec2Components = function( index, x, y ) {\n    'use strict';\n\n    var array = this.array,\n        i = this.indexOffset + ( index * this.componentSize );\n\n    array[ i ] = x;\n    array[ i + 1 ] = y;\n    return this;\n};\n\n/**\n * Set a Vector3 value at `index`.\n *\n * @param {Number} index The index at which to set the vec3 values from.\n * @param {Vector3} vec2  Any object that has `x`, `y`, and `z` properties.\n * @return {SPE.TypedArrayHelper} Instance of this class.\n */\nSPE.TypedArrayHelper.prototype.setVec3 = function( index, vec3 ) {\n    'use strict';\n\n    return this.setVec3Components( index, vec3.x, vec3.y, vec3.z );\n};\n\n/**\n * Set a Vector3 value using raw components.\n *\n * @param {Number} index The index at which to set the vec3 values from.\n * @param {Number} x     The Vec3's `x` component.\n * @param {Number} y     The Vec3's `y` component.\n * @param {Number} z     The Vec3's `z` component.\n * @return {SPE.TypedArrayHelper} Instance of this class.\n */\nSPE.TypedArrayHelper.prototype.setVec3Components = function( index, x, y, z ) {\n    'use strict';\n\n    var array = this.array,\n        i = this.indexOffset + ( index * this.componentSize );\n\n    array[ i ] = x;\n    array[ i + 1 ] = y;\n    array[ i + 2 ] = z;\n    return this;\n};\n\n/**\n * Set a Vector4 value at `index`.\n *\n * @param {Number} index The index at which to set the vec4 values from.\n * @param {Vector4} vec2  Any object that has `x`, `y`, `z`, and `w` properties.\n * @return {SPE.TypedArrayHelper} Instance of this class.\n */\nSPE.TypedArrayHelper.prototype.setVec4 = function( index, vec4 ) {\n    'use strict';\n\n    return this.setVec4Components( index, vec4.x, vec4.y, vec4.z, vec4.w );\n};\n\n/**\n * Set a Vector4 value using raw components.\n *\n * @param {Number} index The index at which to set the vec4 values from.\n * @param {Number} x     The Vec4's `x` component.\n * @param {Number} y     The Vec4's `y` component.\n * @param {Number} z     The Vec4's `z` component.\n * @param {Number} w     The Vec4's `w` component.\n * @return {SPE.TypedArrayHelper} Instance of this class.\n */\nSPE.TypedArrayHelper.prototype.setVec4Components = function( index, x, y, z, w ) {\n    'use strict';\n\n    var array = this.array,\n        i = this.indexOffset + ( index * this.componentSize );\n\n    array[ i ] = x;\n    array[ i + 1 ] = y;\n    array[ i + 2 ] = z;\n    array[ i + 3 ] = w;\n    return this;\n};\n\n/**\n * Set a Matrix3 value at `index`.\n *\n * @param {Number} index The index at which to set the matrix values from.\n * @param {Matrix3} mat3 The 3x3 matrix to set from. Must have a TypedArray property named `elements` to copy from.\n * @return {SPE.TypedArrayHelper} Instance of this class.\n */\nSPE.TypedArrayHelper.prototype.setMat3 = function( index, mat3 ) {\n    'use strict';\n\n    return this.setFromArray( this.indexOffset + ( index * this.componentSize ), mat3.elements );\n};\n\n/**\n * Set a Matrix4 value at `index`.\n *\n * @param {Number} index The index at which to set the matrix values from.\n * @param {Matrix4} mat3 The 4x4 matrix to set from. Must have a TypedArray property named `elements` to copy from.\n * @return {SPE.TypedArrayHelper} Instance of this class.\n */\nSPE.TypedArrayHelper.prototype.setMat4 = function( index, mat4 ) {\n    'use strict';\n\n    return this.setFromArray( this.indexOffset + ( index * this.componentSize ), mat4.elements );\n};\n\n/**\n * Set a Color value at `index`.\n *\n * @param {Number} index The index at which to set the vec3 values from.\n * @param {Color} color  Any object that has `r`, `g`, and `b` properties.\n * @return {SPE.TypedArrayHelper} Instance of this class.\n */\nSPE.TypedArrayHelper.prototype.setColor = function( index, color ) {\n    'use strict';\n\n    return this.setVec3Components( index, color.r, color.g, color.b );\n};\n\n/**\n * Set a Number value at `index`.\n *\n * @param {Number} index The index at which to set the vec3 values from.\n * @param {Number} numericValue  The number to assign to this index in the array.\n * @return {SPE.TypedArrayHelper} Instance of this class.\n */\nSPE.TypedArrayHelper.prototype.setNumber = function( index, numericValue ) {\n    'use strict';\n\n    this.array[ this.indexOffset + ( index * this.componentSize ) ] = numericValue;\n    return this;\n};\n\n/**\n * Returns the value of the array at the given index, taking into account\n * the `indexOffset` property of this class.\n *\n * Note that this function ignores the component size and will just return a\n * single value.\n *\n * @param  {Number} index The index in the array to fetch.\n * @return {Number}       The value at the given index.\n */\nSPE.TypedArrayHelper.prototype.getValueAtIndex = function( index ) {\n    'use strict';\n\n    return this.array[ this.indexOffset + index ];\n};\n\n/**\n * Returns the component value of the array at the given index, taking into account\n * the `indexOffset` property of this class.\n *\n * If the componentSize is set to 3, then it will return a new TypedArray\n * of length 3.\n *\n * @param  {Number} index The index in the array to fetch.\n * @return {TypedArray}       The component value at the given index.\n */\nSPE.TypedArrayHelper.prototype.getComponentValueAtIndex = function( index ) {\n    'use strict';\n\n    return this.array.subarray( this.indexOffset + ( index * this.componentSize ) );\n};\n\n/**\n * A helper to handle creating and updating a THREE.BufferAttribute instance.\n *\n * @author  Luke Moody\n * @constructor\n * @param {String} type          The buffer attribute type. See SPE.ShaderAttribute.typeSizeMap for valid values.\n * @param {Boolean=} dynamicBuffer Whether this buffer attribute should be marked as dynamic or not.\n * @param {Function=} arrayType     A reference to a TypedArray constructor. Defaults to Float32Array if none provided.\n */\nSPE.ShaderAttribute = function( type, dynamicBuffer, arrayType ) {\n    'use strict';\n\n    var typeMap = SPE.ShaderAttribute.typeSizeMap;\n\n    this.type = typeof type === 'string' && typeMap.hasOwnProperty( type ) ? type : 'f';\n    this.componentSize = typeMap[ this.type ];\n    this.arrayType = arrayType || Float32Array;\n    this.typedArray = null;\n    this.bufferAttribute = null;\n    this.dynamicBuffer = !!dynamicBuffer;\n\n    this.updateMin = 0;\n    this.updateMax = 0;\n};\n\nSPE.ShaderAttribute.constructor = SPE.ShaderAttribute;\n\n/**\n * A map of uniform types to their component size.\n * @enum {Number}\n */\nSPE.ShaderAttribute.typeSizeMap = {\n    /**\n     * Float\n     * @type {Number}\n     */\n    f: 1,\n\n    /**\n     * Vec2\n     * @type {Number}\n     */\n    v2: 2,\n\n    /**\n     * Vec3\n     * @type {Number}\n     */\n    v3: 3,\n\n    /**\n     * Vec4\n     * @type {Number}\n     */\n    v4: 4,\n\n    /**\n     * Color\n     * @type {Number}\n     */\n    c: 3,\n\n    /**\n     * Mat3\n     * @type {Number}\n     */\n    m3: 9,\n\n    /**\n     * Mat4\n     * @type {Number}\n     */\n    m4: 16\n};\n\n/**\n * Calculate the minimum and maximum update range for this buffer attribute using\n * component size independant min and max values.\n *\n * @param {Number} min The start of the range to mark as needing an update.\n * @param {Number} max The end of the range to mark as needing an update.\n */\nSPE.ShaderAttribute.prototype.setUpdateRange = function( min, max ) {\n    'use strict';\n\n    this.updateMin = Math.min( min * this.componentSize, this.updateMin * this.componentSize );\n    this.updateMax = Math.max( max * this.componentSize, this.updateMax * this.componentSize );\n};\n\n/**\n * Calculate the number of indices that this attribute should mark as needing\n * updating. Also marks the attribute as needing an update.\n */\nSPE.ShaderAttribute.prototype.flagUpdate = function() {\n    'use strict';\n\n    var attr = this.bufferAttribute,\n        range = attr.updateRange;\n\n    range.offset = this.updateMin;\n    range.count = Math.min( ( this.updateMax - this.updateMin ) + this.componentSize, this.typedArray.array.length );\n    // console.log( range.offset, range.count, this.typedArray.array.length );\n    // console.log( 'flagUpdate:', range.offset, range.count );\n    attr.needsUpdate = true;\n};\n\n\n\n/**\n * Reset the index update counts for this attribute\n */\nSPE.ShaderAttribute.prototype.resetUpdateRange = function() {\n    'use strict';\n\n    this.updateMin = 0;\n    this.updateMax = 0;\n};\n\nSPE.ShaderAttribute.prototype.resetDynamic = function() {\n    'use strict';\n    this.bufferAttribute.dynamic = this.dynamicBuffer;\n};\n\n/**\n * Perform a splice operation on this attribute's buffer.\n * @param  {Number} start The start index of the splice. Will be multiplied by the number of components for this attribute.\n * @param  {Number} end The end index of the splice. Will be multiplied by the number of components for this attribute.\n */\nSPE.ShaderAttribute.prototype.splice = function( start, end ) {\n    'use strict';\n\n    this.typedArray.splice( start, end );\n\n    // Reset the reference to the attribute's typed array\n    // since it has probably changed.\n    this.forceUpdateAll();\n};\n\nSPE.ShaderAttribute.prototype.forceUpdateAll = function() {\n    'use strict';\n\n    this.bufferAttribute.array = this.typedArray.array;\n    this.bufferAttribute.updateRange.offset = 0;\n    this.bufferAttribute.updateRange.count = -1;\n    this.bufferAttribute.dynamic = false;\n    this.bufferAttribute.needsUpdate = true;\n};\n\n/**\n * Make sure this attribute has a typed array associated with it.\n *\n * If it does, then it will ensure the typed array is of the correct size.\n *\n * If not, a new SPE.TypedArrayHelper instance will be created.\n *\n * @param  {Number} size The size of the typed array to create or update to.\n */\nSPE.ShaderAttribute.prototype._ensureTypedArray = function( size ) {\n    'use strict';\n\n    // Condition that's most likely to be true at the top: no change.\n    if ( this.typedArray !== null && this.typedArray.size === size * this.componentSize ) {\n        return;\n    }\n\n    // Resize the array if we need to, telling the TypedArrayHelper to\n    // ignore it's component size when evaluating size.\n    else if ( this.typedArray !== null && this.typedArray.size !== size ) {\n        this.typedArray.setSize( size );\n    }\n\n    // This condition should only occur once in an attribute's lifecycle.\n    else if ( this.typedArray === null ) {\n        this.typedArray = new SPE.TypedArrayHelper( this.arrayType, size, this.componentSize );\n    }\n};\n\n\n/**\n * Creates a THREE.BufferAttribute instance if one doesn't exist already.\n *\n * Ensures a typed array is present by calling _ensureTypedArray() first.\n *\n * If a buffer attribute exists already, then it will be marked as needing an update.\n *\n * @param  {Number} size The size of the typed array to create if one doesn't exist, or resize existing array to.\n */\nSPE.ShaderAttribute.prototype._createBufferAttribute = function( size ) {\n    'use strict';\n\n    // Make sure the typedArray is present and correct.\n    this._ensureTypedArray( size );\n\n    // Don't create it if it already exists, but do\n    // flag that it needs updating on the next render\n    // cycle.\n    if ( this.bufferAttribute !== null ) {\n        this.bufferAttribute.array = this.typedArray.array;\n        this.bufferAttribute.needsUpdate = true;\n        return;\n    }\n\n    this.bufferAttribute = new THREE.BufferAttribute( this.typedArray.array, this.componentSize );\n    this.bufferAttribute.dynamic = this.dynamicBuffer;\n};\n\n/**\n * Returns the length of the typed array associated with this attribute.\n * @return {Number} The length of the typed array. Will be 0 if no typed array has been created yet.\n */\nSPE.ShaderAttribute.prototype.getLength = function() {\n    'use strict';\n\n    if ( this.typedArray === null ) {\n        return 0;\n    }\n\n    return this.typedArray.array.length;\n};\n\nSPE.shaderChunks = {\n    // Register color-packing define statements.\n    defines: [\n        '#define PACKED_COLOR_SIZE 256.0',\n        '#define PACKED_COLOR_DIVISOR 255.0'\n    ].join( '\\n' ),\n\n    // All uniforms used by vertex / fragment shaders\n    uniforms: [\n        'uniform float deltaTime;',\n        'uniform float runTime;',\n        'uniform sampler2D texture;',\n        'uniform vec4 textureAnimation;',\n        'uniform float scale;',\n    ].join( '\\n' ),\n\n    // All attributes used by the vertex shader.\n    //\n    // Note that some attributes are squashed into other ones:\n    //\n    // * Drag is acceleration.w\n    attributes: [\n        'attribute vec4 acceleration;',\n        'attribute vec3 velocity;',\n        'attribute vec4 rotation;',\n        'attribute vec3 rotationCenter;',\n        'attribute vec4 params;',\n        'attribute vec4 size;',\n        'attribute vec4 angle;',\n        'attribute vec4 color;',\n        'attribute vec4 opacity;'\n    ].join( '\\n' ),\n\n    //\n    varyings: [\n        'varying vec4 vColor;',\n        '#ifdef SHOULD_ROTATE_TEXTURE',\n        '    varying float vAngle;',\n        '#endif',\n\n        '#ifdef SHOULD_CALCULATE_SPRITE',\n        '    varying vec4 vSpriteSheet;',\n        '#endif'\n    ].join( '\\n' ),\n\n\n    // Branch-avoiding comparison fns\n    // - http://theorangeduck.com/page/avoiding-shader-conditionals\n    branchAvoidanceFunctions: [\n        'float when_gt(float x, float y) {',\n        '    return max(sign(x - y), 0.0);',\n        '}',\n\n        'float when_lt(float x, float y) {',\n        '    return min( max(1.0 - sign(x - y), 0.0), 1.0 );',\n        '}',\n\n        'float when_eq( float x, float y ) {',\n        '    return 1.0 - abs( sign( x - y ) );',\n        '}',\n\n        'float when_ge(float x, float y) {',\n        '  return 1.0 - when_lt(x, y);',\n        '}',\n\n        'float when_le(float x, float y) {',\n        '  return 1.0 - when_gt(x, y);',\n        '}',\n\n        // Branch-avoiding logical operators\n        // (to be used with above comparison fns)\n        'float and(float a, float b) {',\n        '    return a * b;',\n        '}',\n\n        'float or(float a, float b) {',\n        '    return min(a + b, 1.0);',\n        '}',\n    ].join( '\\n' ),\n\n\n    // From:\n    // - http://stackoverflow.com/a/12553149\n    // - https://stackoverflow.com/questions/22895237/hexadecimal-to-rgb-values-in-webgl-shader\n    unpackColor: [\n        'vec3 unpackColor( in float hex ) {',\n        '   vec3 c = vec3( 0.0 );',\n\n        '   float r = mod( (hex / PACKED_COLOR_SIZE / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );',\n        '   float g = mod( (hex / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );',\n        '   float b = mod( hex, PACKED_COLOR_SIZE );',\n\n        '   c.r = r / PACKED_COLOR_DIVISOR;',\n        '   c.g = g / PACKED_COLOR_DIVISOR;',\n        '   c.b = b / PACKED_COLOR_DIVISOR;',\n\n        '   return c;',\n        '}',\n    ].join( '\\n' ),\n\n    unpackRotationAxis: [\n        'vec3 unpackRotationAxis( in float hex ) {',\n        '   vec3 c = vec3( 0.0 );',\n\n        '   float r = mod( (hex / PACKED_COLOR_SIZE / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );',\n        '   float g = mod( (hex / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );',\n        '   float b = mod( hex, PACKED_COLOR_SIZE );',\n\n        '   c.r = r / PACKED_COLOR_DIVISOR;',\n        '   c.g = g / PACKED_COLOR_DIVISOR;',\n        '   c.b = b / PACKED_COLOR_DIVISOR;',\n\n        '   c *= vec3( 2.0 );',\n        '   c -= vec3( 1.0 );',\n\n        '   return c;',\n        '}',\n    ].join( '\\n' ),\n\n    floatOverLifetime: [\n        'float getFloatOverLifetime( in float positionInTime, in vec4 attr ) {',\n        '    highp float value = 0.0;',\n        '    float deltaAge = positionInTime * float( VALUE_OVER_LIFETIME_LENGTH - 1 );',\n        '    float fIndex = 0.0;',\n        '    float shouldApplyValue = 0.0;',\n\n        // This might look a little odd, but it's faster in the testing I've done than using branches.\n        // Uses basic maths to avoid branching.\n        //\n        // Take a look at the branch-avoidance functions defined above,\n        // and be sure to check out The Orange Duck site where I got this\n        // from (link above).\n\n        // Fix for static emitters (age is always zero).\n        '    value += attr[ 0 ] * when_eq( deltaAge, 0.0 );',\n        '',\n        '    for( int i = 0; i < VALUE_OVER_LIFETIME_LENGTH - 1; ++i ) {',\n        '       fIndex = float( i );',\n        '       shouldApplyValue = and( when_gt( deltaAge, fIndex ), when_le( deltaAge, fIndex + 1.0 ) );',\n        '       value += shouldApplyValue * mix( attr[ i ], attr[ i + 1 ], deltaAge - fIndex );',\n        '    }',\n        '',\n        '    return value;',\n        '}',\n    ].join( '\\n' ),\n\n    colorOverLifetime: [\n        'vec3 getColorOverLifetime( in float positionInTime, in vec3 color1, in vec3 color2, in vec3 color3, in vec3 color4 ) {',\n        '    vec3 value = vec3( 0.0 );',\n        '    value.x = getFloatOverLifetime( positionInTime, vec4( color1.x, color2.x, color3.x, color4.x ) );',\n        '    value.y = getFloatOverLifetime( positionInTime, vec4( color1.y, color2.y, color3.y, color4.y ) );',\n        '    value.z = getFloatOverLifetime( positionInTime, vec4( color1.z, color2.z, color3.z, color4.z ) );',\n        '    return value;',\n        '}',\n    ].join( '\\n' ),\n\n    paramFetchingFunctions: [\n        'float getAlive() {',\n        '   return params.x;',\n        '}',\n\n        'float getAge() {',\n        '   return params.y;',\n        '}',\n\n        'float getMaxAge() {',\n        '   return params.z;',\n        '}',\n\n        'float getWiggle() {',\n        '   return params.w;',\n        '}',\n    ].join( '\\n' ),\n\n    forceFetchingFunctions: [\n        'vec4 getPosition( in float age ) {',\n        '   return modelViewMatrix * vec4( position, 1.0 );',\n        '}',\n\n        'vec3 getVelocity( in float age ) {',\n        '   return velocity * age;',\n        '}',\n\n        'vec3 getAcceleration( in float age ) {',\n        '   return acceleration.xyz * age;',\n        '}',\n    ].join( '\\n' ),\n\n\n    rotationFunctions: [\n        // Huge thanks to:\n        // - http://www.neilmendoza.com/glsl-rotation-about-an-arbitrary-axis/\n        '#ifdef SHOULD_ROTATE_PARTICLES',\n        '   mat4 getRotationMatrix( in vec3 axis, in float angle) {',\n        '       axis = normalize(axis);',\n        '       float s = sin(angle);',\n        '       float c = cos(angle);',\n        '       float oc = 1.0 - c;',\n        '',\n        '       return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,',\n        '                   oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,',\n        '                   oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,',\n        '                   0.0,                                0.0,                                0.0,                                1.0);',\n        '   }',\n        '',\n        '   vec3 getRotation( in vec3 pos, in float positionInTime ) {',\n        '      if( rotation.y == 0.0 ) {',\n        '           return pos;',\n        '      }',\n        '',\n        '      vec3 axis = unpackRotationAxis( rotation.x );',\n        '      vec3 center = rotationCenter;',\n        '      vec3 translated;',\n        '      mat4 rotationMatrix;',\n\n        '      float angle = 0.0;',\n        '      angle += when_eq( rotation.z, 0.0 ) * rotation.y;',\n        '      angle += when_gt( rotation.z, 0.0 ) * mix( 0.0, rotation.y, positionInTime );',\n        '      translated = rotationCenter - pos;',\n        '      rotationMatrix = getRotationMatrix( axis, angle );',\n        '      return center - vec3( rotationMatrix * vec4( translated, 0.0 ) );',\n        '   }',\n        '#endif'\n    ].join( '\\n' ),\n\n\n    // Fragment chunks\n    rotateTexture: [\n        '    vec2 vUv = vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y );',\n        '',\n        '    #ifdef SHOULD_ROTATE_TEXTURE',\n        '       float x = gl_PointCoord.x - 0.5;',\n        '       float y = 1.0 - gl_PointCoord.y - 0.5;',\n        '       float c = cos( -vAngle );',\n        '       float s = sin( -vAngle );',\n\n        '       vUv = vec2( c * x + s * y + 0.5, c * y - s * x + 0.5 );',\n        '    #endif',\n        '',\n\n        // Spritesheets overwrite angle calculations.\n        '    #ifdef SHOULD_CALCULATE_SPRITE',\n        '        float framesX = vSpriteSheet.x;',\n        '        float framesY = vSpriteSheet.y;',\n        '        float columnNorm = vSpriteSheet.z;',\n        '        float rowNorm = vSpriteSheet.w;',\n\n        '        vUv.x = gl_PointCoord.x * framesX + columnNorm;',\n        '        vUv.y = 1.0 - (gl_PointCoord.y * framesY + rowNorm);',\n        '    #endif',\n\n        '',\n        '    vec4 rotatedTexture = texture2D( texture, vUv );',\n    ].join( '\\n' )\n};\n\nSPE.shaders = {\n    vertex: [\n        SPE.shaderChunks.defines,\n        SPE.shaderChunks.uniforms,\n        SPE.shaderChunks.attributes,\n        SPE.shaderChunks.varyings,\n\n        THREE.ShaderChunk.common,\n        THREE.ShaderChunk.logdepthbuf_pars_vertex,\n\n        SPE.shaderChunks.branchAvoidanceFunctions,\n        SPE.shaderChunks.unpackColor,\n        SPE.shaderChunks.unpackRotationAxis,\n        SPE.shaderChunks.floatOverLifetime,\n        SPE.shaderChunks.colorOverLifetime,\n        SPE.shaderChunks.paramFetchingFunctions,\n        SPE.shaderChunks.forceFetchingFunctions,\n        SPE.shaderChunks.rotationFunctions,\n\n\n        'void main() {',\n\n\n        //\n        // Setup...\n        //\n        '    highp float age = getAge();',\n        '    highp float alive = getAlive();',\n        '    highp float maxAge = getMaxAge();',\n        '    highp float positionInTime = (age / maxAge);',\n        '    highp float isAlive = when_gt( alive, 0.0 );',\n\n        '    #ifdef SHOULD_WIGGLE_PARTICLES',\n        '        float wiggleAmount = positionInTime * getWiggle();',\n        '        float wiggleSin = isAlive * sin( wiggleAmount );',\n        '        float wiggleCos = isAlive * cos( wiggleAmount );',\n        '    #endif',\n\n        //\n        // Forces\n        //\n\n        // Get forces & position\n        '    vec3 vel = getVelocity( age );',\n        '    vec3 accel = getAcceleration( age );',\n        '    vec3 force = vec3( 0.0 );',\n        '    vec3 pos = vec3( position );',\n\n        // Calculate the required drag to apply to the forces.\n        '    float drag = 1.0 - (positionInTime * 0.5) * acceleration.w;',\n\n        // Integrate forces...\n        '    force += vel;',\n        '    force *= drag;',\n        '    force += accel * age;',\n        '    pos += force;',\n\n\n        // Wiggly wiggly wiggle!\n        '    #ifdef SHOULD_WIGGLE_PARTICLES',\n        '        pos.x += wiggleSin;',\n        '        pos.y += wiggleCos;',\n        '        pos.z += wiggleSin;',\n        '    #endif',\n\n\n        // Rotate the emitter around it's central point\n        '    #ifdef SHOULD_ROTATE_PARTICLES',\n        '        pos = getRotation( pos, positionInTime );',\n        '    #endif',\n\n        // Convert pos to a world-space value\n        '    vec4 mvPos = modelViewMatrix * vec4( pos, 1.0 );',\n\n        // Determine point size.\n        '    highp float pointSize = getFloatOverLifetime( positionInTime, size ) * isAlive;',\n\n        // Determine perspective\n        '    #ifdef HAS_PERSPECTIVE',\n        '        float perspective = scale / length( mvPos.xyz );',\n        '    #else',\n        '        float perspective = 1.0;',\n        '    #endif',\n\n        // Apply perpective to pointSize value\n        '    float pointSizePerspective = pointSize * perspective;',\n\n\n        //\n        // Appearance\n        //\n\n        // Determine color and opacity for this particle\n        '    #ifdef COLORIZE',\n        '       vec3 c = isAlive * getColorOverLifetime(',\n        '           positionInTime,',\n        '           unpackColor( color.x ),',\n        '           unpackColor( color.y ),',\n        '           unpackColor( color.z ),',\n        '           unpackColor( color.w )',\n        '       );',\n        '    #else',\n        '       vec3 c = vec3(1.0);',\n        '    #endif',\n\n        '    float o = isAlive * getFloatOverLifetime( positionInTime, opacity );',\n\n        // Assign color to vColor varying.\n        '    vColor = vec4( c, o );',\n\n        // Determine angle\n        '    #ifdef SHOULD_ROTATE_TEXTURE',\n        '        vAngle = isAlive * getFloatOverLifetime( positionInTime, angle );',\n        '    #endif',\n\n        // If this particle is using a sprite-sheet as a texture, we'll have to figure out\n        // what frame of the texture the particle is using at it's current position in time.\n        '    #ifdef SHOULD_CALCULATE_SPRITE',\n        '        float framesX = textureAnimation.x;',\n        '        float framesY = textureAnimation.y;',\n        '        float loopCount = textureAnimation.w;',\n        '        float totalFrames = textureAnimation.z;',\n        '        float frameNumber = mod( (positionInTime * loopCount) * totalFrames, totalFrames );',\n\n        '        float column = floor(mod( frameNumber, framesX ));',\n        '        float row = floor( (frameNumber - column) / framesX );',\n\n        '        float columnNorm = column / framesX;',\n        '        float rowNorm = row / framesY;',\n\n        '        vSpriteSheet.x = 1.0 / framesX;',\n        '        vSpriteSheet.y = 1.0 / framesY;',\n        '        vSpriteSheet.z = columnNorm;',\n        '        vSpriteSheet.w = rowNorm;',\n        '    #endif',\n\n        //\n        // Write values\n        //\n\n        // Set PointSize according to size at current point in time.\n        '    gl_PointSize = pointSizePerspective;',\n        '    gl_Position = projectionMatrix * mvPos;',\n\n        THREE.ShaderChunk.logdepthbuf_vertex,\n\n        '}'\n    ].join( '\\n' ),\n\n    fragment: [\n        SPE.shaderChunks.uniforms,\n\n        THREE.ShaderChunk.common,\n        THREE.ShaderChunk.fog_pars_fragment,\n        THREE.ShaderChunk.logdepthbuf_pars_fragment,\n\n        SPE.shaderChunks.varyings,\n\n        SPE.shaderChunks.branchAvoidanceFunctions,\n\n        'void main() {',\n        '    vec3 outgoingLight = vColor.xyz;',\n        '    ',\n        '    #ifdef ALPHATEST',\n        '       if ( vColor.w < float(ALPHATEST) ) discard;',\n        '    #endif',\n\n        SPE.shaderChunks.rotateTexture,\n\n        THREE.ShaderChunk.logdepthbuf_fragment,\n\n        '    outgoingLight = vColor.xyz * rotatedTexture.xyz;',\n\n        THREE.ShaderChunk.fog_fragment,\n\n        '    gl_FragColor = vec4( outgoingLight.xyz, rotatedTexture.w * vColor.w );',\n        '}'\n    ].join( '\\n' )\n};\n\n/**\n * A bunch of utility functions used throughout the library.\n * @namespace\n * @type {Object}\n */\nSPE.utils = {\n    /**\n     * A map of types used by `SPE.utils.ensureTypedArg` and\n     * `SPE.utils.ensureArrayTypedArg` to compare types against.\n     *\n     * @enum {String}\n     */\n    types: {\n        /**\n         * Boolean type.\n         * @type {String}\n         */\n        BOOLEAN: 'boolean',\n\n        /**\n         * String type.\n         * @type {String}\n         */\n        STRING: 'string',\n\n        /**\n         * Number type.\n         * @type {String}\n         */\n        NUMBER: 'number',\n\n        /**\n         * Object type.\n         * @type {String}\n         */\n        OBJECT: 'object'\n    },\n\n    /**\n     * Given a value, a type, and a default value to fallback to,\n     * ensure the given argument adheres to the type requesting,\n     * returning the default value if type check is false.\n     *\n     * @param  {(boolean|string|number|object)} arg          The value to perform a type-check on.\n     * @param  {String} type         The type the `arg` argument should adhere to.\n     * @param  {(boolean|string|number|object)} defaultValue A default value to fallback on if the type check fails.\n     * @return {(boolean|string|number|object)}              The given value if type check passes, or the default value if it fails.\n     */\n    ensureTypedArg: function( arg, type, defaultValue ) {\n        'use strict';\n\n        if ( typeof arg === type ) {\n            return arg;\n        }\n        else {\n            return defaultValue;\n        }\n    },\n\n    /**\n     * Given an array of values, a type, and a default value,\n     * ensure the given array's contents ALL adhere to the provided type,\n     * returning the default value if type check fails.\n     *\n     * If the given value to check isn't an Array, delegates to SPE.utils.ensureTypedArg.\n     *\n     * @param  {Array|boolean|string|number|object} arg          The array of values to check type of.\n     * @param  {String} type         The type that should be adhered to.\n     * @param  {(boolean|string|number|object)} defaultValue A default fallback value.\n     * @return {(boolean|string|number|object)}              The given value if type check passes, or the default value if it fails.\n     */\n    ensureArrayTypedArg: function( arg, type, defaultValue ) {\n        'use strict';\n\n        // If the argument being checked is an array, loop through\n        // it and ensure all the values are of the correct type,\n        // falling back to the defaultValue if any aren't.\n        if ( Array.isArray( arg ) ) {\n            for ( var i = arg.length - 1; i >= 0; --i ) {\n                if ( typeof arg[ i ] !== type ) {\n                    return defaultValue;\n                }\n            }\n\n            return arg;\n        }\n\n        // If the arg isn't an array then just fallback to\n        // checking the type.\n        return this.ensureTypedArg( arg, type, defaultValue );\n    },\n\n    /**\n     * Ensures the given value is an instance of a constructor function.\n     *\n     * @param  {Object} arg          The value to check instance of.\n     * @param  {Function} instance     The constructor of the instance to check against.\n     * @param  {Object} defaultValue A default fallback value if instance check fails\n     * @return {Object}              The given value if type check passes, or the default value if it fails.\n     */\n    ensureInstanceOf: function( arg, instance, defaultValue ) {\n        'use strict';\n\n        if ( instance !== undefined && arg instanceof instance ) {\n            return arg;\n        }\n        else {\n            return defaultValue;\n        }\n    },\n\n    /**\n     * Given an array of values, ensure the instances of all items in the array\n     * matches the given instance constructor falling back to a default value if\n     * the check fails.\n     *\n     * If given value isn't an Array, delegates to `SPE.utils.ensureInstanceOf`.\n     *\n     * @param  {Array|Object} arg          The value to perform the instanceof check on.\n     * @param  {Function} instance     The constructor of the instance to check against.\n     * @param  {Object} defaultValue A default fallback value if instance check fails\n     * @return {Object}              The given value if type check passes, or the default value if it fails.\n     */\n    ensureArrayInstanceOf: function( arg, instance, defaultValue ) {\n        'use strict';\n\n        // If the argument being checked is an array, loop through\n        // it and ensure all the values are of the correct type,\n        // falling back to the defaultValue if any aren't.\n        if ( Array.isArray( arg ) ) {\n            for ( var i = arg.length - 1; i >= 0; --i ) {\n                if ( instance !== undefined && arg[ i ] instanceof instance === false ) {\n                    return defaultValue;\n                }\n            }\n\n            return arg;\n        }\n\n        // If the arg isn't an array then just fallback to\n        // checking the type.\n        return this.ensureInstanceOf( arg, instance, defaultValue );\n    },\n\n    /**\n     * Ensures that any \"value-over-lifetime\" properties of an emitter are\n     * of the correct length (as dictated by `SPE.valueOverLifetimeLength`).\n     *\n     * Delegates to `SPE.utils.interpolateArray` for array resizing.\n     *\n     * If properties aren't arrays, then property values are put into one.\n     *\n     * @param  {Object} property  The property of an SPE.Emitter instance to check compliance of.\n     * @param  {Number} minLength The minimum length of the array to create.\n     * @param  {Number} maxLength The maximum length of the array to create.\n     */\n    ensureValueOverLifetimeCompliance: function( property, minLength, maxLength ) {\n        'use strict';\n\n        minLength = minLength || 3;\n        maxLength = maxLength || 3;\n\n        // First, ensure both properties are arrays.\n        if ( Array.isArray( property._value ) === false ) {\n            property._value = [ property._value ];\n        }\n\n        if ( Array.isArray( property._spread ) === false ) {\n            property._spread = [ property._spread ];\n        }\n\n        var valueLength = this.clamp( property._value.length, minLength, maxLength ),\n            spreadLength = this.clamp( property._spread.length, minLength, maxLength ),\n            desiredLength = Math.max( valueLength, spreadLength );\n\n        if ( property._value.length !== desiredLength ) {\n            property._value = this.interpolateArray( property._value, desiredLength );\n        }\n\n        if ( property._spread.length !== desiredLength ) {\n            property._spread = this.interpolateArray( property._spread, desiredLength );\n        }\n    },\n\n    /**\n     * Performs linear interpolation (lerp) on an array.\n     *\n     * For example, lerping [1, 10], with a `newLength` of 10 will produce [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].\n     *\n     * Delegates to `SPE.utils.lerpTypeAgnostic` to perform the actual\n     * interpolation.\n     *\n     * @param  {Array} srcArray  The array to lerp.\n     * @param  {Number} newLength The length the array should be interpolated to.\n     * @return {Array}           The interpolated array.\n     */\n    interpolateArray: function( srcArray, newLength ) {\n        'use strict';\n\n        var sourceLength = srcArray.length,\n            newArray = [ typeof srcArray[ 0 ].clone === 'function' ? srcArray[ 0 ].clone() : srcArray[ 0 ] ],\n            factor = ( sourceLength - 1 ) / ( newLength - 1 );\n\n\n        for ( var i = 1; i < newLength - 1; ++i ) {\n            var f = i * factor,\n                before = Math.floor( f ),\n                after = Math.ceil( f ),\n                delta = f - before;\n\n            newArray[ i ] = this.lerpTypeAgnostic( srcArray[ before ], srcArray[ after ], delta );\n        }\n\n        newArray.push(\n            typeof srcArray[ sourceLength - 1 ].clone === 'function' ?\n            srcArray[ sourceLength - 1 ].clone() :\n            srcArray[ sourceLength - 1 ]\n        );\n\n        return newArray;\n    },\n\n    /**\n     * Clamp a number to between the given min and max values.\n     * @param  {Number} value The number to clamp.\n     * @param  {Number} min   The minimum value.\n     * @param  {Number} max   The maximum value.\n     * @return {Number}       The clamped number.\n     */\n    clamp: function( value, min, max ) {\n        'use strict';\n\n        return Math.max( min, Math.min( value, max ) );\n    },\n\n    /**\n     * If the given value is less than the epsilon value, then return\n     * a randomised epsilon value if specified, or just the epsilon value if not.\n     * Works for negative numbers as well as positive.\n     *\n     * @param  {Number} value     The value to perform the operation on.\n     * @param  {Boolean} randomise Whether the value should be randomised.\n     * @return {Number}           The result of the operation.\n     */\n    zeroToEpsilon: function( value, randomise ) {\n        'use strict';\n\n        var epsilon = 0.00001,\n            result = value;\n\n        result = randomise ? Math.random() * epsilon * 10 : epsilon;\n\n        if ( value < 0 && value > -epsilon ) {\n            result = -result;\n        }\n\n        // if ( value === 0 ) {\n        //     result = randomise ? Math.random() * epsilon * 10 : epsilon;\n        // }\n        // else if ( value > 0 && value < epsilon ) {\n        //     result = randomise ? Math.random() * epsilon * 10 : epsilon;\n        // }\n        // else if ( value < 0 && value > -epsilon ) {\n        //     result = -( randomise ? Math.random() * epsilon * 10 : epsilon );\n        // }\n\n        return result;\n    },\n\n    /**\n     * Linearly interpolates two values of various types. The given values\n     * must be of the same type for the interpolation to work.\n     * @param  {(number|Object)} start The start value of the lerp.\n     * @param  {(number|object)} end   The end value of the lerp.\n     * @param  {Number} delta The delta posiiton of the lerp operation. Ideally between 0 and 1 (inclusive).\n     * @return {(number|object|undefined)}       The result of the operation. Result will be undefined if\n     *                                               the start and end arguments aren't a supported type, or\n     *                                               if their types do not match.\n     */\n    lerpTypeAgnostic: function( start, end, delta ) {\n        'use strict';\n\n        var types = this.types,\n            out;\n\n        if ( typeof start === types.NUMBER && typeof end === types.NUMBER ) {\n            return start + ( ( end - start ) * delta );\n        }\n        else if ( start instanceof THREE.Vector2 && end instanceof THREE.Vector2 ) {\n            out = start.clone();\n            out.x = this.lerp( start.x, end.x, delta );\n            out.y = this.lerp( start.y, end.y, delta );\n            return out;\n        }\n        else if ( start instanceof THREE.Vector3 && end instanceof THREE.Vector3 ) {\n            out = start.clone();\n            out.x = this.lerp( start.x, end.x, delta );\n            out.y = this.lerp( start.y, end.y, delta );\n            out.z = this.lerp( start.z, end.z, delta );\n            return out;\n        }\n        else if ( start instanceof THREE.Vector4 && end instanceof THREE.Vector4 ) {\n            out = start.clone();\n            out.x = this.lerp( start.x, end.x, delta );\n            out.y = this.lerp( start.y, end.y, delta );\n            out.z = this.lerp( start.z, end.z, delta );\n            out.w = this.lerp( start.w, end.w, delta );\n            return out;\n        }\n        else if ( start instanceof THREE.Color && end instanceof THREE.Color ) {\n            out = start.clone();\n            out.r = this.lerp( start.r, end.r, delta );\n            out.g = this.lerp( start.g, end.g, delta );\n            out.b = this.lerp( start.b, end.b, delta );\n            return out;\n        }\n        else {\n            console.warn( 'Invalid argument types, or argument types do not match:', start, end );\n        }\n    },\n\n    /**\n     * Perform a linear interpolation operation on two numbers.\n     * @param  {Number} start The start value.\n     * @param  {Number} end   The end value.\n     * @param  {Number} delta The position to interpolate to.\n     * @return {Number}       The result of the lerp operation.\n     */\n    lerp: function( start, end, delta ) {\n        'use strict';\n        return start + ( ( end - start ) * delta );\n    },\n\n    /**\n     * Rounds a number to a nearest multiple.\n     *\n     * @param  {Number} n        The number to round.\n     * @param  {Number} multiple The multiple to round to.\n     * @return {Number}          The result of the round operation.\n     */\n    roundToNearestMultiple: function( n, multiple ) {\n        'use strict';\n\n        var remainder = 0;\n\n        if ( multiple === 0 ) {\n            return n;\n        }\n\n        remainder = Math.abs( n ) % multiple;\n\n        if ( remainder === 0 ) {\n            return n;\n        }\n\n        if ( n < 0 ) {\n            return -( Math.abs( n ) - remainder );\n        }\n\n        return n + multiple - remainder;\n    },\n\n    /**\n     * Check if all items in an array are equal. Uses strict equality.\n     *\n     * @param  {Array} array The array of values to check equality of.\n     * @return {Boolean}       Whether the array's values are all equal or not.\n     */\n    arrayValuesAreEqual: function( array ) {\n        'use strict';\n\n        for ( var i = 0; i < array.length - 1; ++i ) {\n            if ( array[ i ] !== array[ i + 1 ] ) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    // colorsAreEqual: function() {\n    //     var colors = Array.prototype.slice.call( arguments ),\n    //         numColors = colors.length;\n\n    //     for ( var i = 0, color1, color2; i < numColors - 1; ++i ) {\n    //         color1 = colors[ i ];\n    //         color2 = colors[ i + 1 ];\n\n    //         if (\n    //             color1.r !== color2.r ||\n    //             color1.g !== color2.g ||\n    //             color1.b !== color2.b\n    //         ) {\n    //             return false\n    //         }\n    //     }\n\n    //     return true;\n    // },\n\n\n    /**\n     * Given a start value and a spread value, create and return a random\n     * number.\n     * @param  {Number} base   The start value.\n     * @param  {Number} spread The size of the random variance to apply.\n     * @return {Number}        A randomised number.\n     */\n    randomFloat: function( base, spread ) {\n        'use strict';\n        return base + spread * ( Math.random() - 0.5 );\n    },\n\n\n\n    /**\n     * Given an SPE.ShaderAttribute instance, and various other settings,\n     * assign values to the attribute's array in a `vec3` format.\n     *\n     * @param  {Object} attribute   The instance of SPE.ShaderAttribute to save the result to.\n     * @param  {Number} index       The offset in the attribute's TypedArray to save the result from.\n     * @param  {Object} base        THREE.Vector3 instance describing the start value.\n     * @param  {Object} spread      THREE.Vector3 instance describing the random variance to apply to the start value.\n     * @param  {Object} spreadClamp THREE.Vector3 instance describing the multiples to clamp the randomness to.\n     */\n    randomVector3: function( attribute, index, base, spread, spreadClamp ) {\n        'use strict';\n\n        var x = base.x + ( Math.random() * spread.x - ( spread.x * 0.5 ) ),\n            y = base.y + ( Math.random() * spread.y - ( spread.y * 0.5 ) ),\n            z = base.z + ( Math.random() * spread.z - ( spread.z * 0.5 ) );\n\n        // var x = this.randomFloat( base.x, spread.x ),\n        // y = this.randomFloat( base.y, spread.y ),\n        // z = this.randomFloat( base.z, spread.z );\n\n        if ( spreadClamp ) {\n            x = -spreadClamp.x * 0.5 + this.roundToNearestMultiple( x, spreadClamp.x );\n            y = -spreadClamp.y * 0.5 + this.roundToNearestMultiple( y, spreadClamp.y );\n            z = -spreadClamp.z * 0.5 + this.roundToNearestMultiple( z, spreadClamp.z );\n        }\n\n        attribute.typedArray.setVec3Components( index, x, y, z );\n    },\n\n    /**\n     * Given an SPE.Shader attribute instance, and various other settings,\n     * assign Color values to the attribute.\n     * @param  {Object} attribute The instance of SPE.ShaderAttribute to save the result to.\n     * @param  {Number} index     The offset in the attribute's TypedArray to save the result from.\n     * @param  {Object} base      THREE.Color instance describing the start color.\n     * @param  {Object} spread    THREE.Vector3 instance describing the random variance to apply to the start color.\n     */\n    randomColor: function( attribute, index, base, spread ) {\n        'use strict';\n\n        var r = base.r + ( Math.random() * spread.x ),\n            g = base.g + ( Math.random() * spread.y ),\n            b = base.b + ( Math.random() * spread.z );\n\n        r = this.clamp( r, 0, 1 );\n        g = this.clamp( g, 0, 1 );\n        b = this.clamp( b, 0, 1 );\n\n\n        attribute.typedArray.setVec3Components( index, r, g, b );\n    },\n\n\n    randomColorAsHex: ( function() {\n        'use strict';\n\n        var workingColor = new THREE.Color();\n\n        /**\n         * Assigns a random color value, encoded as a hex value in decimal\n         * format, to a SPE.ShaderAttribute instance.\n         * @param  {Object} attribute The instance of SPE.ShaderAttribute to save the result to.\n         * @param  {Number} index     The offset in the attribute's TypedArray to save the result from.\n         * @param  {Object} base      THREE.Color instance describing the start color.\n         * @param  {Object} spread    THREE.Vector3 instance describing the random variance to apply to the start color.\n         */\n        return function( attribute, index, base, spread ) {\n            var numItems = base.length,\n                colors = [];\n\n            for ( var i = 0; i < numItems; ++i ) {\n                var spreadVector = spread[ i ];\n\n                workingColor.copy( base[ i ] );\n\n                workingColor.r += ( Math.random() * spreadVector.x ) - ( spreadVector.x * 0.5 );\n                workingColor.g += ( Math.random() * spreadVector.y ) - ( spreadVector.y * 0.5 );\n                workingColor.b += ( Math.random() * spreadVector.z ) - ( spreadVector.z * 0.5 );\n\n                workingColor.r = this.clamp( workingColor.r, 0, 1 );\n                workingColor.g = this.clamp( workingColor.g, 0, 1 );\n                workingColor.b = this.clamp( workingColor.b, 0, 1 );\n\n                colors.push( workingColor.getHex() );\n            }\n\n            attribute.typedArray.setVec4Components( index, colors[ 0 ], colors[ 1 ], colors[ 2 ], colors[ 3 ] );\n        };\n    }() ),\n\n    /**\n     * Assigns a random vector 3 value to an SPE.ShaderAttribute instance, projecting the\n     * given values onto a sphere.\n     *\n     * @param  {Object} attribute The instance of SPE.ShaderAttribute to save the result to.\n     * @param  {Number} index     The offset in the attribute's TypedArray to save the result from.\n     * @param  {Object} base              THREE.Vector3 instance describing the origin of the transform.\n     * @param  {Number} radius            The radius of the sphere to project onto.\n     * @param  {Number} radiusSpread      The amount of randomness to apply to the projection result\n     * @param  {Object} radiusScale       THREE.Vector3 instance describing the scale of each axis of the sphere.\n     * @param  {Number} radiusSpreadClamp What numeric multiple the projected value should be clamped to.\n     */\n    randomVector3OnSphere: function(\n        attribute, index, base, radius, radiusSpread, radiusScale, radiusSpreadClamp, distributionClamp\n    ) {\n        'use strict';\n\n        var depth = 2 * Math.random() - 1,\n            t = 6.2832 * Math.random(),\n            r = Math.sqrt( 1 - depth * depth ),\n            rand = this.randomFloat( radius, radiusSpread ),\n            x = 0,\n            y = 0,\n            z = 0;\n\n\n        if ( radiusSpreadClamp ) {\n            rand = Math.round( rand / radiusSpreadClamp ) * radiusSpreadClamp;\n        }\n\n\n\n        // Set position on sphere\n        x = r * Math.cos( t ) * rand;\n        y = r * Math.sin( t ) * rand;\n        z = depth * rand;\n\n        // Apply radius scale to this position\n        x *= radiusScale.x;\n        y *= radiusScale.y;\n        z *= radiusScale.z;\n\n        // Translate to the base position.\n        x += base.x;\n        y += base.y;\n        z += base.z;\n\n        // Set the values in the typed array.\n        attribute.typedArray.setVec3Components( index, x, y, z );\n    },\n\n    seededRandom: function( seed ) {\n        var x = Math.sin( seed ) * 10000;\n        return x - ( x | 0 );\n    },\n\n\n\n    /**\n     * Assigns a random vector 3 value to an SPE.ShaderAttribute instance, projecting the\n     * given values onto a 2d-disc.\n     *\n     * @param  {Object} attribute The instance of SPE.ShaderAttribute to save the result to.\n     * @param  {Number} index     The offset in the attribute's TypedArray to save the result from.\n     * @param  {Object} base              THREE.Vector3 instance describing the origin of the transform.\n     * @param  {Number} radius            The radius of the sphere to project onto.\n     * @param  {Number} radiusSpread      The amount of randomness to apply to the projection result\n     * @param  {Object} radiusScale       THREE.Vector3 instance describing the scale of each axis of the disc. The z-component is ignored.\n     * @param  {Number} radiusSpreadClamp What numeric multiple the projected value should be clamped to.\n     */\n    randomVector3OnDisc: function( attribute, index, base, radius, radiusSpread, radiusScale, radiusSpreadClamp ) {\n        'use strict';\n\n        var t = 6.2832 * Math.random(),\n            rand = Math.abs( this.randomFloat( radius, radiusSpread ) ),\n            x = 0,\n            y = 0,\n            z = 0;\n\n        if ( radiusSpreadClamp ) {\n            rand = Math.round( rand / radiusSpreadClamp ) * radiusSpreadClamp;\n        }\n\n        // Set position on sphere\n        x = Math.cos( t ) * rand;\n        y = Math.sin( t ) * rand;\n\n        // Apply radius scale to this position\n        x *= radiusScale.x;\n        y *= radiusScale.y;\n\n        // Translate to the base position.\n        x += base.x;\n        y += base.y;\n        z += base.z;\n\n        // Set the values in the typed array.\n        attribute.typedArray.setVec3Components( index, x, y, z );\n    },\n\n    randomDirectionVector3OnSphere: ( function() {\n        'use strict';\n\n        var v = new THREE.Vector3();\n\n        /**\n         * Given an SPE.ShaderAttribute instance, create a direction vector from the given\n         * position, using `speed` as the magnitude. Values are saved to the attribute.\n         *\n         * @param  {Object} attribute       The instance of SPE.ShaderAttribute to save the result to.\n         * @param  {Number} index           The offset in the attribute's TypedArray to save the result from.\n         * @param  {Number} posX            The particle's x coordinate.\n         * @param  {Number} posY            The particle's y coordinate.\n         * @param  {Number} posZ            The particle's z coordinate.\n         * @param  {Object} emitterPosition THREE.Vector3 instance describing the emitter's base position.\n         * @param  {Number} speed           The magnitude to apply to the vector.\n         * @param  {Number} speedSpread     The amount of randomness to apply to the magnitude.\n         */\n        return function( attribute, index, posX, posY, posZ, emitterPosition, speed, speedSpread ) {\n            v.copy( emitterPosition );\n\n            v.x -= posX;\n            v.y -= posY;\n            v.z -= posZ;\n\n            v.normalize().multiplyScalar( -this.randomFloat( speed, speedSpread ) );\n\n            attribute.typedArray.setVec3Components( index, v.x, v.y, v.z );\n        };\n    }() ),\n\n\n    randomDirectionVector3OnDisc: ( function() {\n        'use strict';\n\n        var v = new THREE.Vector3();\n\n        /**\n         * Given an SPE.ShaderAttribute instance, create a direction vector from the given\n         * position, using `speed` as the magnitude. Values are saved to the attribute.\n         *\n         * @param  {Object} attribute       The instance of SPE.ShaderAttribute to save the result to.\n         * @param  {Number} index           The offset in the attribute's TypedArray to save the result from.\n         * @param  {Number} posX            The particle's x coordinate.\n         * @param  {Number} posY            The particle's y coordinate.\n         * @param  {Number} posZ            The particle's z coordinate.\n         * @param  {Object} emitterPosition THREE.Vector3 instance describing the emitter's base position.\n         * @param  {Number} speed           The magnitude to apply to the vector.\n         * @param  {Number} speedSpread     The amount of randomness to apply to the magnitude.\n         */\n        return function( attribute, index, posX, posY, posZ, emitterPosition, speed, speedSpread ) {\n            v.copy( emitterPosition );\n\n            v.x -= posX;\n            v.y -= posY;\n            v.z -= posZ;\n\n            v.normalize().multiplyScalar( -this.randomFloat( speed, speedSpread ) );\n\n            attribute.typedArray.setVec3Components( index, v.x, v.y, 0 );\n        };\n    }() ),\n\n    getPackedRotationAxis: ( function() {\n        'use strict';\n\n        var v = new THREE.Vector3(),\n            vSpread = new THREE.Vector3(),\n            c = new THREE.Color(),\n            addOne = new THREE.Vector3( 1, 1, 1 );\n\n        /**\n         * Given a rotation axis, and a rotation axis spread vector,\n         * calculate a randomised rotation axis, and pack it into\n         * a hexadecimal value represented in decimal form.\n         * @param  {Object} axis       THREE.Vector3 instance describing the rotation axis.\n         * @param  {Object} axisSpread THREE.Vector3 instance describing the amount of randomness to apply to the rotation axis.\n         * @return {Number}            The packed rotation axis, with randomness.\n         */\n        return function( axis, axisSpread ) {\n            v.copy( axis ).normalize();\n            vSpread.copy( axisSpread ).normalize();\n\n            v.x += ( -axisSpread.x * 0.5 ) + ( Math.random() * axisSpread.x );\n            v.y += ( -axisSpread.y * 0.5 ) + ( Math.random() * axisSpread.y );\n            v.z += ( -axisSpread.z * 0.5 ) + ( Math.random() * axisSpread.z );\n\n            // v.x = Math.abs( v.x );\n            // v.y = Math.abs( v.y );\n            // v.z = Math.abs( v.z );\n\n            v.normalize().add( addOne ).multiplyScalar( 0.5 );\n\n            c.setRGB( v.x, v.y, v.z );\n\n            return c.getHex();\n        };\n    }() )\n};\n\n/**\n * An SPE.Group instance.\n * @typedef {Object} Group\n * @see SPE.Group\n */\n\n/**\n * A map of options to configure an SPE.Group instance.\n * @typedef {Object} GroupOptions\n *\n * @property {Object} texture An object describing the texture used by the group.\n *\n * @property {Object} texture.value An instance of THREE.Texture.\n *\n * @property {Object=} texture.frames A THREE.Vector2 instance describing the number\n *                                    of frames on the x- and y-axis of the given texture.\n *                                    If not provided, the texture will NOT be treated as\n *                                    a sprite-sheet and as such will NOT be animated.\n *\n * @property {Number} [texture.frameCount=texture.frames.x * texture.frames.y] The total number of frames in the sprite-sheet.\n *                                                                   Allows for sprite-sheets that don't fill the entire\n *                                                                   texture.\n *\n * @property {Number} texture.loop The number of loops through the sprite-sheet that should\n *                                 be performed over the course of a single particle's lifetime.\n *\n * @property {Number} fixedTimeStep If no `dt` (or `deltaTime`) value is passed to this group's\n *                                  `tick()` function, this number will be used to move the particle\n *                                  simulation forward. Value in SECONDS.\n *\n * @property {Boolean} hasPerspective Whether the distance a particle is from the camera should affect\n *                                    the particle's size.\n *\n * @property {Boolean} colorize Whether the particles in this group should be rendered with color, or\n *                              whether the only color of particles will come from the provided texture.\n *\n * @property {Number} blending One of Three.js's blending modes to apply to this group's `ShaderMaterial`.\n *\n * @property {Boolean} transparent Whether these particle's should be rendered with transparency.\n *\n * @property {Number} alphaTest Sets the alpha value to be used when running an alpha test on the `texture.value` property. Value between 0 and 1.\n *\n * @property {Boolean} depthWrite Whether rendering the group has any effect on the depth buffer.\n *\n * @property {Boolean} depthTest Whether to have depth test enabled when rendering this group.\n *\n * @property {Boolean} fog Whether this group's particles should be affected by their scene's fog.\n *\n * @property {Number} scale The scale factor to apply to this group's particle sizes. Useful for\n *                          setting particle sizes to be relative to renderer size.\n */\n\n\n/**\n * The SPE.Group class. Creates a new group, containing a material, geometry, and mesh.\n *\n * @constructor\n * @param {GroupOptions} options A map of options to configure the group instance.\n */\nSPE.Group = function( options ) {\n    'use strict';\n\n    var utils = SPE.utils,\n        types = utils.types;\n\n    // Ensure we have a map of options to play with\n    options = utils.ensureTypedArg( options, types.OBJECT, {} );\n    options.texture = utils.ensureTypedArg( options.texture, types.OBJECT, {} );\n\n    // Assign a UUID to this instance\n    this.uuid = THREE.Math.generateUUID();\n\n    // If no `deltaTime` value is passed to the `SPE.Group.tick` function,\n    // the value of this property will be used to advance the simulation.\n    this.fixedTimeStep = utils.ensureTypedArg( options.fixedTimeStep, types.NUMBER, 0.016 );\n\n    // Set properties used in the uniforms map, starting with the\n    // texture stuff.\n    this.texture = utils.ensureInstanceOf( options.texture.value, THREE.Texture, null );\n    this.textureFrames = utils.ensureInstanceOf( options.texture.frames, THREE.Vector2, new THREE.Vector2( 1, 1 ) );\n    this.textureFrameCount = utils.ensureTypedArg( options.texture.frameCount, types.NUMBER, this.textureFrames.x * this.textureFrames.y );\n    this.textureLoop = utils.ensureTypedArg( options.texture.loop, types.NUMBER, 1 );\n    this.textureFrames.max( new THREE.Vector2( 1, 1 ) );\n\n    this.hasPerspective = utils.ensureTypedArg( options.hasPerspective, types.BOOLEAN, true );\n    this.colorize = utils.ensureTypedArg( options.colorize, types.BOOLEAN, true );\n\n    this.maxParticleCount = utils.ensureTypedArg( options.maxParticleCount, types.NUMBER, null );\n\n\n    // Set properties used to define the ShaderMaterial's appearance.\n    this.blending = utils.ensureTypedArg( options.blending, types.NUMBER, THREE.AdditiveBlending );\n    this.transparent = utils.ensureTypedArg( options.transparent, types.BOOLEAN, true );\n    this.alphaTest = parseFloat( utils.ensureTypedArg( options.alphaTest, types.NUMBER, 0.0 ) );\n    this.depthWrite = utils.ensureTypedArg( options.depthWrite, types.BOOLEAN, false );\n    this.depthTest = utils.ensureTypedArg( options.depthTest, types.BOOLEAN, true );\n    this.fog = utils.ensureTypedArg( options.fog, types.BOOLEAN, true );\n    this.scale = utils.ensureTypedArg( options.scale, types.NUMBER, 300 );\n\n    // Where emitter's go to curl up in a warm blanket and live\n    // out their days.\n    this.emitters = [];\n    this.emitterIDs = [];\n\n    // Create properties for use by the emitter pooling functions.\n    this._pool = [];\n    this._poolCreationSettings = null;\n    this._createNewWhenPoolEmpty = 0;\n\n    // Whether all attributes should be forced to updated\n    // their entire buffer contents on the next tick.\n    //\n    // Used when an emitter is removed.\n    this._attributesNeedRefresh = false;\n    this._attributesNeedDynamicReset = false;\n\n    this.particleCount = 0;\n\n\n    // Map of uniforms to be applied to the ShaderMaterial instance.\n    this.uniforms = {\n        texture: {\n            type: 't',\n            value: this.texture\n        },\n        textureAnimation: {\n            type: 'v4',\n            value: new THREE.Vector4(\n                this.textureFrames.x,\n                this.textureFrames.y,\n                this.textureFrameCount,\n                Math.max( Math.abs( this.textureLoop ), 1.0 )\n            )\n        },\n        fogColor: {\n            type: 'c',\n            value: null\n        },\n        fogNear: {\n            type: 'f',\n            value: 10\n        },\n        fogFar: {\n            type: 'f',\n            value: 200\n        },\n        fogDensity: {\n            type: 'f',\n            value: 0.5\n        },\n        deltaTime: {\n            type: 'f',\n            value: 0\n        },\n        runTime: {\n            type: 'f',\n            value: 0\n        },\n        scale: {\n            type: 'f',\n            value: this.scale\n        }\n    };\n\n    // Add some defines into the mix...\n    this.defines = {\n        HAS_PERSPECTIVE: this.hasPerspective,\n        COLORIZE: this.colorize,\n        VALUE_OVER_LIFETIME_LENGTH: SPE.valueOverLifetimeLength,\n\n        SHOULD_ROTATE_TEXTURE: false,\n        SHOULD_ROTATE_PARTICLES: false,\n        SHOULD_WIGGLE_PARTICLES: false,\n\n        SHOULD_CALCULATE_SPRITE: this.textureFrames.x > 1 || this.textureFrames.y > 1\n    };\n\n    // Map of all attributes to be applied to the particles.\n    //\n    // See SPE.ShaderAttribute for a bit more info on this bit.\n    this.attributes = {\n        position: new SPE.ShaderAttribute( 'v3', true ),\n        acceleration: new SPE.ShaderAttribute( 'v4', true ), // w component is drag\n        velocity: new SPE.ShaderAttribute( 'v3', true ),\n        rotation: new SPE.ShaderAttribute( 'v4', true ),\n        rotationCenter: new SPE.ShaderAttribute( 'v3', true ),\n        params: new SPE.ShaderAttribute( 'v4', true ), // Holds (alive, age, delay, wiggle)\n        size: new SPE.ShaderAttribute( 'v4', true ),\n        angle: new SPE.ShaderAttribute( 'v4', true ),\n        color: new SPE.ShaderAttribute( 'v4', true ),\n        opacity: new SPE.ShaderAttribute( 'v4', true )\n    };\n\n    this.attributeKeys = Object.keys( this.attributes );\n    this.attributeCount = this.attributeKeys.length;\n\n    // Create the ShaderMaterial instance that'll help render the\n    // particles.\n    this.material = new THREE.ShaderMaterial( {\n        uniforms: this.uniforms,\n        vertexShader: SPE.shaders.vertex,\n        fragmentShader: SPE.shaders.fragment,\n        blending: this.blending,\n        transparent: this.transparent,\n        alphaTest: this.alphaTest,\n        depthWrite: this.depthWrite,\n        depthTest: this.depthTest,\n        defines: this.defines,\n        fog: this.fog\n    } );\n\n    // Create the BufferGeometry and Points instances, ensuring\n    // the geometry and material are given to the latter.\n    this.geometry = new THREE.BufferGeometry();\n    this.mesh = new THREE.Points( this.geometry, this.material );\n\n    if ( this.maxParticleCount === null ) {\n        console.warn( 'SPE.Group: No maxParticleCount specified. Adding emitters after rendering will probably cause errors.' );\n    }\n};\n\nSPE.Group.constructor = SPE.Group;\n\n\nSPE.Group.prototype._updateDefines = function() {\n    'use strict';\n\n    var emitters = this.emitters,\n        i = emitters.length - 1,\n        emitter,\n        defines = this.defines;\n\n    for ( i; i >= 0; --i ) {\n        emitter = emitters[ i ];\n\n        // Only do angle calculation if there's no spritesheet defined.\n        //\n        // Saves calculations being done and then overwritten in the shaders.\n        if ( !defines.SHOULD_CALCULATE_SPRITE ) {\n            defines.SHOULD_ROTATE_TEXTURE = defines.SHOULD_ROTATE_TEXTURE || !!Math.max(\n                Math.max.apply( null, emitter.angle.value ),\n                Math.max.apply( null, emitter.angle.spread )\n            );\n        }\n\n        defines.SHOULD_ROTATE_PARTICLES = defines.SHOULD_ROTATE_PARTICLES || !!Math.max(\n            emitter.rotation.angle,\n            emitter.rotation.angleSpread\n        );\n\n        defines.SHOULD_WIGGLE_PARTICLES = defines.SHOULD_WIGGLE_PARTICLES || !!Math.max(\n            emitter.wiggle.value,\n            emitter.wiggle.spread\n        );\n    }\n\n    this.material.needsUpdate = true;\n};\n\nSPE.Group.prototype._applyAttributesToGeometry = function() {\n    'use strict';\n\n    var attributes = this.attributes,\n        geometry = this.geometry,\n        geometryAttributes = geometry.attributes,\n        attribute,\n        geometryAttribute;\n\n    // Loop through all the shader attributes and assign (or re-assign)\n    // typed array buffers to each one.\n    for ( var attr in attributes ) {\n        if ( attributes.hasOwnProperty( attr ) ) {\n            attribute = attributes[ attr ];\n            geometryAttribute = geometryAttributes[ attr ];\n\n            // Update the array if this attribute exists on the geometry.\n            //\n            // This needs to be done because the attribute's typed array might have\n            // been resized and reinstantiated, and might now be looking at a\n            // different ArrayBuffer, so reference needs updating.\n            if ( geometryAttribute ) {\n                geometryAttribute.array = attribute.typedArray.array;\n            }\n\n            // // Add the attribute to the geometry if it doesn't already exist.\n            else {\n                geometry.addAttribute( attr, attribute.bufferAttribute );\n            }\n\n            // Mark the attribute as needing an update the next time a frame is rendered.\n            attribute.bufferAttribute.needsUpdate = true;\n        }\n    }\n\n    // Mark the draw range on the geometry. This will ensure\n    // only the values in the attribute buffers that are\n    // associated with a particle will be used in THREE's\n    // render cycle.\n    this.geometry.setDrawRange( 0, this.particleCount );\n};\n\n/**\n * Adds an SPE.Emitter instance to this group, creating particle values and\n * assigning them to this group's shader attributes.\n *\n * @param {Emitter} emitter The emitter to add to this group.\n */\nSPE.Group.prototype.addEmitter = function( emitter ) {\n    'use strict';\n\n    // Ensure an actual emitter instance is passed here.\n    //\n    // Decided not to throw here, just in case a scene's\n    // rendering would be paused. Logging an error instead\n    // of stopping execution if exceptions aren't caught.\n    if ( emitter instanceof SPE.Emitter === false ) {\n        console.error( '`emitter` argument must be instance of SPE.Emitter. Was provided with:', emitter );\n        return;\n    }\n\n    // If the emitter already exists as a member of this group, then\n    // stop here, we don't want to add it again.\n    else if ( this.emitterIDs.indexOf( emitter.uuid ) > -1 ) {\n        console.error( 'Emitter already exists in this group. Will not add again.' );\n        return;\n    }\n\n    // And finally, if the emitter is a member of another group,\n    // don't add it to this group.\n    else if ( emitter.group !== null ) {\n        console.error( 'Emitter already belongs to another group. Will not add to requested group.' );\n        return;\n    }\n\n    var attributes = this.attributes,\n        start = this.particleCount,\n        end = start + emitter.particleCount;\n\n    // Update this group's particle count.\n    this.particleCount = end;\n\n    // Emit a warning if the emitter being added will exceed the buffer sizes specified.\n    if ( this.maxParticleCount !== null && this.particleCount > this.maxParticleCount ) {\n        console.warn( 'SPE.Group: maxParticleCount exceeded. Requesting', this.particleCount, 'particles, can support only', this.maxParticleCount );\n    }\n\n\n    // Set the `particlesPerSecond` value (PPS) on the emitter.\n    // It's used to determine how many particles to release\n    // on a per-frame basis.\n    emitter._calculatePPSValue( emitter.maxAge._value + emitter.maxAge._spread );\n    emitter._setBufferUpdateRanges( this.attributeKeys );\n\n    // Store the offset value in the TypedArray attributes for this emitter.\n    emitter._setAttributeOffset( start );\n\n    // Save a reference to this group on the emitter so it knows\n    // where it belongs.\n    emitter.group = this;\n\n    // Store reference to the attributes on the emitter for\n    // easier access during the emitter's tick function.\n    emitter.attributes = this.attributes;\n\n\n\n    // Ensure the attributes and their BufferAttributes exist, and their\n    // TypedArrays are of the correct size.\n    for ( var attr in attributes ) {\n        if ( attributes.hasOwnProperty( attr ) ) {\n            // When creating a buffer, pass through the maxParticle count\n            // if one is specified.\n            attributes[ attr ]._createBufferAttribute(\n                this.maxParticleCount !== null ?\n                this.maxParticleCount :\n                this.particleCount\n            );\n        }\n    }\n\n    // Loop through each particle this emitter wants to have, and create the attributes values,\n    // storing them in the TypedArrays that each attribute holds.\n    for ( var i = start; i < end; ++i ) {\n        emitter._assignPositionValue( i );\n        emitter._assignForceValue( i, 'velocity' );\n        emitter._assignForceValue( i, 'acceleration' );\n        emitter._assignAbsLifetimeValue( i, 'opacity' );\n        emitter._assignAbsLifetimeValue( i, 'size' );\n        emitter._assignAngleValue( i );\n        emitter._assignRotationValue( i );\n        emitter._assignParamsValue( i );\n        emitter._assignColorValue( i );\n    }\n\n    // Update the geometry and make sure the attributes are referencing\n    // the typed arrays properly.\n    this._applyAttributesToGeometry();\n\n    // Store this emitter in this group's emitter's store.\n    this.emitters.push( emitter );\n    this.emitterIDs.push( emitter.uuid );\n\n    // Update certain flags to enable shader calculations only if they're necessary.\n    this._updateDefines( emitter );\n\n    // Update the material since defines might have changed\n    this.material.needsUpdate = true;\n    this.geometry.needsUpdate = true;\n    this._attributesNeedRefresh = true;\n\n    // Return the group to enable chaining.\n    return this;\n};\n\n/**\n * Removes an SPE.Emitter instance from this group. When called,\n * all particle's belonging to the given emitter will be instantly\n * removed from the scene.\n *\n * @param {Emitter} emitter The emitter to add to this group.\n */\nSPE.Group.prototype.removeEmitter = function( emitter ) {\n    'use strict';\n\n    var emitterIndex = this.emitterIDs.indexOf( emitter.uuid );\n\n    // Ensure an actual emitter instance is passed here.\n    //\n    // Decided not to throw here, just in case a scene's\n    // rendering would be paused. Logging an error instead\n    // of stopping execution if exceptions aren't caught.\n    if ( emitter instanceof SPE.Emitter === false ) {\n        console.error( '`emitter` argument must be instance of SPE.Emitter. Was provided with:', emitter );\n        return;\n    }\n\n    // Issue an error if the emitter isn't a member of this group.\n    else if ( emitterIndex === -1 ) {\n        console.error( 'Emitter does not exist in this group. Will not remove.' );\n        return;\n    }\n\n    // Kill all particles by marking them as dead\n    // and their age as 0.\n    var start = emitter.attributeOffset,\n        end = start + emitter.particleCount,\n        params = this.attributes.params.typedArray;\n\n    // Set alive and age to zero.\n    for ( var i = start; i < end; ++i ) {\n        params.array[ i * 4 ] = 0.0;\n        params.array[ i * 4 + 1 ] = 0.0;\n    }\n\n    // Remove the emitter from this group's \"store\".\n    this.emitters.splice( emitterIndex, 1 );\n    this.emitterIDs.splice( emitterIndex, 1 );\n\n    // Remove this emitter's attribute values from all shader attributes.\n    // The `.splice()` call here also marks each attribute's buffer\n    // as needing to update it's entire contents.\n    for ( var attr in this.attributes ) {\n        if ( this.attributes.hasOwnProperty( attr ) ) {\n            this.attributes[ attr ].splice( start, end );\n        }\n    }\n\n    // Ensure this group's particle count is correct.\n    this.particleCount -= emitter.particleCount;\n\n    // Call the emitter's remove method.\n    emitter._onRemove();\n\n    // Set a flag to indicate that the attribute buffers should\n    // be updated in their entirety on the next frame.\n    this._attributesNeedRefresh = true;\n};\n\n\n/**\n * Fetch a single emitter instance from the pool.\n * If there are no objects in the pool, a new emitter will be\n * created if specified.\n *\n * @return {Emitter|null}\n */\nSPE.Group.prototype.getFromPool = function() {\n    'use strict';\n\n    var pool = this._pool,\n        createNew = this._createNewWhenPoolEmpty;\n\n    if ( pool.length ) {\n        return pool.pop();\n    }\n    else if ( createNew ) {\n        return new SPE.Emitter( this._poolCreationSettings );\n    }\n\n    return null;\n};\n\n\n/**\n * Release an emitter into the pool.\n *\n * @param  {ShaderParticleEmitter} emitter\n * @return {Group} This group instance.\n */\nSPE.Group.prototype.releaseIntoPool = function( emitter ) {\n    'use strict';\n\n    if ( emitter instanceof SPE.Emitter === false ) {\n        console.error( 'Argument is not instanceof SPE.Emitter:', emitter );\n        return;\n    }\n\n    emitter.reset();\n    this._pool.unshift( emitter );\n\n    return this;\n};\n\n\n/**\n * Get the pool array\n *\n * @return {Array}\n */\nSPE.Group.prototype.getPool = function() {\n    'use strict';\n    return this._pool;\n};\n\n\n/**\n * Add a pool of emitters to this particle group\n *\n * @param {Number} numEmitters      The number of emitters to add to the pool.\n * @param {EmitterOptions|Array} emitterOptions  An object, or array of objects, describing the options to pass to each emitter.\n * @param {Boolean} createNew       Should a new emitter be created if the pool runs out?\n * @return {Group} This group instance.\n */\nSPE.Group.prototype.addPool = function( numEmitters, emitterOptions, createNew ) {\n    'use strict';\n\n    var emitter;\n\n    // Save relevant settings and flags.\n    this._poolCreationSettings = emitterOptions;\n    this._createNewWhenPoolEmpty = !!createNew;\n\n    // Create the emitters, add them to this group and the pool.\n    for ( var i = 0; i < numEmitters; ++i ) {\n        if ( Array.isArray( emitterOptions ) ) {\n            emitter = new SPE.Emitter( emitterOptions[ i ] );\n        }\n        else {\n            emitter = new SPE.Emitter( emitterOptions );\n        }\n        this.addEmitter( emitter );\n        this.releaseIntoPool( emitter );\n    }\n\n    return this;\n};\n\n\n\nSPE.Group.prototype._triggerSingleEmitter = function( pos ) {\n    'use strict';\n\n    var emitter = this.getFromPool(),\n        self = this;\n\n    if ( emitter === null ) {\n        console.log( 'SPE.Group pool ran out.' );\n        return;\n    }\n\n    // TODO:\n    // - Make sure buffers are update with thus new position.\n    if ( pos instanceof THREE.Vector3 ) {\n        emitter.position.value.copy( pos );\n\n        // Trigger the setter for this property to force an\n        // update to the emitter's position attribute.\n        emitter.position.value = emitter.position.value;\n    }\n\n    emitter.enable();\n\n    setTimeout( function() {\n        emitter.disable();\n        self.releaseIntoPool( emitter );\n    }, ( Math.max( emitter.duration, ( emitter.maxAge.value + emitter.maxAge.spread ) ) ) * 1000 );\n\n    return this;\n};\n\n\n/**\n * Set a given number of emitters as alive, with an optional position\n * vector3 to move them to.\n *\n * @param  {Number} numEmitters The number of emitters to activate\n * @param  {Object} [position=undefined] A THREE.Vector3 instance describing the position to activate the emitter(s) at.\n * @return {Group} This group instance.\n */\nSPE.Group.prototype.triggerPoolEmitter = function( numEmitters, position ) {\n    'use strict';\n\n    if ( typeof numEmitters === 'number' && numEmitters > 1 ) {\n        for ( var i = 0; i < numEmitters; ++i ) {\n            this._triggerSingleEmitter( position );\n        }\n    }\n    else {\n        this._triggerSingleEmitter( position );\n    }\n\n    return this;\n};\n\n\n\nSPE.Group.prototype._updateUniforms = function( dt ) {\n    'use strict';\n\n    this.uniforms.runTime.value += dt;\n    this.uniforms.deltaTime.value = dt;\n};\n\nSPE.Group.prototype._resetBufferRanges = function() {\n    'use strict';\n\n    var keys = this.attributeKeys,\n        i = this.attributeCount - 1,\n        attrs = this.attributes;\n\n    for ( i; i >= 0; --i ) {\n        attrs[ keys[ i ] ].resetUpdateRange();\n    }\n};\n\n\nSPE.Group.prototype._updateBuffers = function( emitter ) {\n    'use strict';\n\n    var keys = this.attributeKeys,\n        i = this.attributeCount - 1,\n        attrs = this.attributes,\n        emitterRanges = emitter.bufferUpdateRanges,\n        key,\n        emitterAttr,\n        attr;\n\n    for ( i; i >= 0; --i ) {\n        key = keys[ i ];\n        emitterAttr = emitterRanges[ key ];\n        attr = attrs[ key ];\n        attr.setUpdateRange( emitterAttr.min, emitterAttr.max );\n        attr.flagUpdate();\n    }\n};\n\n\n/**\n * Simulate all the emitter's belonging to this group, updating\n * attribute values along the way.\n * @param  {Number} [dt=Group's `fixedTimeStep` value] The number of seconds to simulate the group's emitters for (deltaTime)\n */\nSPE.Group.prototype.tick = function( dt ) {\n    'use strict';\n\n    var emitters = this.emitters,\n        numEmitters = emitters.length,\n        deltaTime = dt || this.fixedTimeStep,\n        keys = this.attributeKeys,\n        i,\n        attrs = this.attributes;\n\n    // Update uniform values.\n    this._updateUniforms( deltaTime );\n\n    // Reset buffer update ranges on the shader attributes.\n    this._resetBufferRanges();\n\n\n    // If nothing needs updating, then stop here.\n    if (\n        numEmitters === 0 &&\n        this._attributesNeedRefresh === false &&\n        this._attributesNeedDynamicReset === false\n    ) {\n        return;\n    }\n\n    // Loop through each emitter in this group and\n    // simulate it, then update the shader attribute\n    // buffers.\n    for ( var i = 0, emitter; i < numEmitters; ++i ) {\n        emitter = emitters[ i ];\n        emitter.tick( deltaTime );\n        this._updateBuffers( emitter );\n    }\n\n    // If the shader attributes have been refreshed,\n    // then the dynamic properties of each buffer\n    // attribute will need to be reset back to\n    // what they should be.\n    if ( this._attributesNeedDynamicReset === true ) {\n        i = this.attributeCount - 1;\n\n        for ( i; i >= 0; --i ) {\n            attrs[ keys[ i ] ].resetDynamic();\n        }\n\n        this._attributesNeedDynamicReset = false;\n    }\n\n    // If this group's shader attributes need a full refresh\n    // then mark each attribute's buffer attribute as\n    // needing so.\n    if ( this._attributesNeedRefresh === true ) {\n        i = this.attributeCount - 1;\n\n        for ( i; i >= 0; --i ) {\n            attrs[ keys[ i ] ].forceUpdateAll();\n        }\n\n        this._attributesNeedRefresh = false;\n        this._attributesNeedDynamicReset = true;\n    }\n};\n\n\n/**\n * Dipose the geometry and material for the group.\n *\n * @return {Group} Group instance.\n */\nSPE.Group.prototype.dispose = function() {\n    'use strict';\n    this.geometry.dispose();\n    this.material.dispose();\n    return this;\n};\n\n/**\n * An SPE.Emitter instance.\n * @typedef {Object} Emitter\n * @see SPE.Emitter\n */\n\n/**\n * A map of options to configure an SPE.Emitter instance.\n *\n * @typedef {Object} EmitterOptions\n *\n * @property {distribution} [type=BOX] The default distribution this emitter should use to control\n *                         its particle's spawn position and force behaviour.\n *                         Must be an SPE.distributions.* value.\n *\n *\n * @property {Number} [particleCount=100] The total number of particles this emitter will hold. NOTE: this is not the number\n *                                  of particles emitted in a second, or anything like that. The number of particles\n *                                  emitted per-second is calculated by particleCount / maxAge (approximately!)\n *\n * @property {Number|null} [duration=null] The duration in seconds that this emitter should live for. If not specified, the emitter\n *                                         will emit particles indefinitely.\n *                                         NOTE: When an emitter is older than a specified duration, the emitter is NOT removed from\n *                                         it's group, but rather is just marked as dead, allowing it to be reanimated at a later time\n *                                         using `SPE.Emitter.prototype.enable()`.\n *\n * @property {Boolean} [isStatic=false] Whether this emitter should be not be simulated (true).\n * @property {Boolean} [activeMultiplier=1] A value between 0 and 1 describing what percentage of this emitter's particlesPerSecond should be\n *                                          emitted, where 0 is 0%, and 1 is 100%.\n *                                          For example, having an emitter with 100 particles, a maxAge of 2, yields a particlesPerSecond\n *                                          value of 50. Setting `activeMultiplier` to 0.5, then, will only emit 25 particles per second (0.5 = 50%).\n *                                          Values greater than 1 will emulate a burst of particles, causing the emitter to run out of particles\n *                                          before it's next activation cycle.\n *\n * @property {Boolean} [direction=1] The direction of the emitter. If value is `1`, emitter will start at beginning of particle's lifecycle.\n *                                   If value is `-1`, emitter will start at end of particle's lifecycle and work it's way backwards.\n *\n * @property {Object} [maxAge={}] An object describing the particle's maximum age in seconds.\n * @property {Number} [maxAge.value=2] A number between 0 and 1 describing the amount of maxAge to apply to all particles.\n * @property {Number} [maxAge.spread=0] A number describing the maxAge variance on a per-particle basis.\n *\n *\n * @property {Object} [position={}] An object describing this emitter's position.\n * @property {Object} [position.value=new THREE.Vector3()] A THREE.Vector3 instance describing this emitter's base position.\n * @property {Object} [position.spread=new THREE.Vector3()] A THREE.Vector3 instance describing this emitter's position variance on a per-particle basis.\n *                                                          Note that when using a SPHERE or DISC distribution, only the x-component\n *                                                          of this vector is used.\n * @property {Object} [position.spreadClamp=new THREE.Vector3()] A THREE.Vector3 instance describing the numeric multiples the particle's should\n *                                                               be spread out over.\n *                                                               Note that when using a SPHERE or DISC distribution, only the x-component\n *                                                               of this vector is used.\n * @property {Number} [position.radius=10] This emitter's base radius.\n * @property {Object} [position.radiusScale=new THREE.Vector3()] A THREE.Vector3 instance describing the radius's scale in all three axes. Allows a SPHERE or DISC to be squashed or stretched.\n * @property {distribution} [position.distribution=value of the `type` option.] A specific distribution to use when radiusing particles. Overrides the `type` option.\n * @property {Boolean} [position.randomise=false] When a particle is re-spawned, whether it's position should be re-randomised or not. Can incur a performance hit.\n *\n *\n * @property {Object} [velocity={}] An object describing this particle velocity.\n * @property {Object} [velocity.value=new THREE.Vector3()] A THREE.Vector3 instance describing this emitter's base velocity.\n * @property {Object} [velocity.spread=new THREE.Vector3()] A THREE.Vector3 instance describing this emitter's velocity variance on a per-particle basis.\n *                                                          Note that when using a SPHERE or DISC distribution, only the x-component\n *                                                          of this vector is used.\n * @property {distribution} [velocity.distribution=value of the `type` option.] A specific distribution to use when calculating a particle's velocity. Overrides the `type` option.\n * @property {Boolean} [velocity.randomise=false] When a particle is re-spawned, whether it's velocity should be re-randomised or not. Can incur a performance hit.\n *\n *\n * @property {Object} [acceleration={}] An object describing this particle's acceleration.\n * @property {Object} [acceleration.value=new THREE.Vector3()] A THREE.Vector3 instance describing this emitter's base acceleration.\n * @property {Object} [acceleration.spread=new THREE.Vector3()] A THREE.Vector3 instance describing this emitter's acceleration variance on a per-particle basis.\n *                           Note that when using a SPHERE or DISC distribution, only the x-component\n *                           of this vector is used.\n * @property {distribution} [acceleration.distribution=value of the `type` option.] A specific distribution to use when calculating a particle's acceleration. Overrides the `type` option.\n * @property {Boolean} [acceleration.randomise=false] When a particle is re-spawned, whether it's acceleration should be re-randomised or not. Can incur a performance hit.\n *\n *\n * @property {Object} [drag={}] An object describing this particle drag. Drag is applied to both velocity and acceleration values.\n * @property {Number} [drag.value=0] A number between 0 and 1 describing the amount of drag to apply to all particles.\n * @property {Number} [drag.spread=0] A number describing the drag variance on a per-particle basis.\n * @property {Boolean} [drag.randomise=false] When a particle is re-spawned, whether it's drag should be re-randomised or not. Can incur a performance hit.\n *\n *\n * @property {Object} [wiggle={}] This is quite a fun one! The values of this object will determine whether a particle will wiggle, or jiggle, or wave,\n *                                or shimmy, or waggle, or... Well you get the idea. The wiggle is calculated over-time, meaning that a particle will\n *                                start off with no wiggle, and end up wiggling about with the distance of the `value` specified by the time it dies.\n *                                It's quite handy to simulate fire embers, or similar effects where the particle's position should slightly change over\n *                                time, and such change isn't easily controlled by rotation, velocity, or acceleration. The wiggle is a combination of sin and cos calculations, so is circular in nature.\n * @property {Number} [wiggle.value=0] A number describing the amount of wiggle to apply to all particles. It's measured in distance.\n * @property {Number} [wiggle.spread=0] A number describing the wiggle variance on a per-particle basis.\n *\n *\n * @property {Object} [rotation={}] An object describing this emitter's rotation. It can either be static, or set to rotate from 0radians to the value of `rotation.value`\n *                                  over a particle's lifetime. Rotation values affect both a particle's position and the forces applied to it.\n * @property {Object} [rotation.axis=new THREE.Vector3(0, 1, 0)] A THREE.Vector3 instance describing this emitter's axis of rotation.\n * @property {Object} [rotation.axisSpread=new THREE.Vector3()] A THREE.Vector3 instance describing the amount of variance to apply to the axis of rotation on\n *                                                              a per-particle basis.\n * @property {Number} [rotation.angle=0] The angle of rotation, given in radians. If `rotation.static` is true, the emitter will start off rotated at this angle, and stay as such.\n *                                       Otherwise, the particles will rotate from 0radians to this value over their lifetimes.\n * @property {Number} [rotation.angleSpread=0] The amount of variance in each particle's rotation angle.\n * @property {Boolean} [rotation.static=false] Whether the rotation should be static or not.\n * @property {Object} [rotation.center=The value of `position.value`] A THREE.Vector3 instance describing the center point of rotation.\n * @property {Boolean} [rotation.randomise=false] When a particle is re-spawned, whether it's rotation should be re-randomised or not. Can incur a performance hit.\n *\n *\n * @property {Object} [color={}] An object describing a particle's color. This property is a \"value-over-lifetime\" property, meaning an array of values and spreads can be\n *                               given to describe specific value changes over a particle's lifetime.\n *                               Depending on the value of SPE.valueOverLifetimeLength, if arrays of THREE.Color instances are given, then the array will be interpolated to\n *                               have a length matching the value of SPE.valueOverLifetimeLength.\n * @property {Object} [color.value=new THREE.Color()] Either a single THREE.Color instance, or an array of THREE.Color instances to describe the color of a particle over it's lifetime.\n * @property {Object} [color.spread=new THREE.Vector3()] Either a single THREE.Vector3 instance, or an array of THREE.Vector3 instances to describe the color variance of a particle over it's lifetime.\n * @property {Boolean} [color.randomise=false] When a particle is re-spawned, whether it's color should be re-randomised or not. Can incur a performance hit.\n *\n *\n * @property {Object} [opacity={}] An object describing a particle's opacity. This property is a \"value-over-lifetime\" property, meaning an array of values and spreads can be\n *                               given to describe specific value changes over a particle's lifetime.\n *                               Depending on the value of SPE.valueOverLifetimeLength, if arrays of numbers are given, then the array will be interpolated to\n *                               have a length matching the value of SPE.valueOverLifetimeLength.\n * @property {Number} [opacity.value=1] Either a single number, or an array of numbers to describe the opacity of a particle over it's lifetime.\n * @property {Number} [opacity.spread=0] Either a single number, or an array of numbers to describe the opacity variance of a particle over it's lifetime.\n * @property {Boolean} [opacity.randomise=false] When a particle is re-spawned, whether it's opacity should be re-randomised or not. Can incur a performance hit.\n *\n *\n * @property {Object} [size={}] An object describing a particle's size. This property is a \"value-over-lifetime\" property, meaning an array of values and spreads can be\n *                               given to describe specific value changes over a particle's lifetime.\n *                               Depending on the value of SPE.valueOverLifetimeLength, if arrays of numbers are given, then the array will be interpolated to\n *                               have a length matching the value of SPE.valueOverLifetimeLength.\n * @property {Number} [size.value=1] Either a single number, or an array of numbers to describe the size of a particle over it's lifetime.\n * @property {Number} [size.spread=0] Either a single number, or an array of numbers to describe the size variance of a particle over it's lifetime.\n * @property {Boolean} [size.randomise=false] When a particle is re-spawned, whether it's size should be re-randomised or not. Can incur a performance hit.\n *\n *\n * @property {Object} [angle={}] An object describing a particle's angle. The angle is a 2d-rotation, measured in radians, applied to the particle's texture.\n *                               NOTE: if a particle's texture is a sprite-sheet, this value IS IGNORED.\n *                               This property is a \"value-over-lifetime\" property, meaning an array of values and spreads can be\n *                               given to describe specific value changes over a particle's lifetime.\n *                               Depending on the value of SPE.valueOverLifetimeLength, if arrays of numbers are given, then the array will be interpolated to\n *                               have a length matching the value of SPE.valueOverLifetimeLength.\n * @property {Number} [angle.value=0] Either a single number, or an array of numbers to describe the angle of a particle over it's lifetime.\n * @property {Number} [angle.spread=0] Either a single number, or an array of numbers to describe the angle variance of a particle over it's lifetime.\n * @property {Boolean} [angle.randomise=false] When a particle is re-spawned, whether it's angle should be re-randomised or not. Can incur a performance hit.\n *\n */\n\n/**\n * The SPE.Emitter class.\n *\n * @constructor\n *\n * @param {EmitterOptions} options A map of options to configure the emitter.\n */\nSPE.Emitter = function( options ) {\n    'use strict';\n\n    var utils = SPE.utils,\n        types = utils.types,\n        lifetimeLength = SPE.valueOverLifetimeLength;\n\n    // Ensure we have a map of options to play with,\n    // and that each option is in the correct format.\n    options = utils.ensureTypedArg( options, types.OBJECT, {} );\n    options.position = utils.ensureTypedArg( options.position, types.OBJECT, {} );\n    options.velocity = utils.ensureTypedArg( options.velocity, types.OBJECT, {} );\n    options.acceleration = utils.ensureTypedArg( options.acceleration, types.OBJECT, {} );\n    options.radius = utils.ensureTypedArg( options.radius, types.OBJECT, {} );\n    options.drag = utils.ensureTypedArg( options.drag, types.OBJECT, {} );\n    options.rotation = utils.ensureTypedArg( options.rotation, types.OBJECT, {} );\n    options.color = utils.ensureTypedArg( options.color, types.OBJECT, {} );\n    options.opacity = utils.ensureTypedArg( options.opacity, types.OBJECT, {} );\n    options.size = utils.ensureTypedArg( options.size, types.OBJECT, {} );\n    options.angle = utils.ensureTypedArg( options.angle, types.OBJECT, {} );\n    options.wiggle = utils.ensureTypedArg( options.wiggle, types.OBJECT, {} );\n    options.maxAge = utils.ensureTypedArg( options.maxAge, types.OBJECT, {} );\n\n    if ( options.onParticleSpawn ) {\n        console.warn( 'onParticleSpawn has been removed. Please set properties directly to alter values at runtime.' );\n    }\n\n    this.uuid = THREE.Math.generateUUID();\n\n    this.type = utils.ensureTypedArg( options.type, types.NUMBER, SPE.distributions.BOX );\n\n    // Start assigning properties...kicking it off with props that DON'T support values over\n    // lifetimes.\n    //\n    // Btw, values over lifetimes are just the new way of referring to *Start, *Middle, and *End.\n    this.position = {\n        _value: utils.ensureInstanceOf( options.position.value, THREE.Vector3, new THREE.Vector3() ),\n        _spread: utils.ensureInstanceOf( options.position.spread, THREE.Vector3, new THREE.Vector3() ),\n        _spreadClamp: utils.ensureInstanceOf( options.position.spreadClamp, THREE.Vector3, new THREE.Vector3() ),\n        _distribution: utils.ensureTypedArg( options.position.distribution, types.NUMBER, this.type ),\n        _randomise: utils.ensureTypedArg( options.position.randomise, types.BOOLEAN, false ),\n        _radius: utils.ensureTypedArg( options.position.radius, types.NUMBER, 10 ),\n        _radiusScale: utils.ensureInstanceOf( options.position.radiusScale, THREE.Vector3, new THREE.Vector3( 1, 1, 1 ) ),\n        _distributionClamp: utils.ensureTypedArg( options.position.distributionClamp, types.NUMBER, 0 ),\n    };\n\n    this.velocity = {\n        _value: utils.ensureInstanceOf( options.velocity.value, THREE.Vector3, new THREE.Vector3() ),\n        _spread: utils.ensureInstanceOf( options.velocity.spread, THREE.Vector3, new THREE.Vector3() ),\n        _distribution: utils.ensureTypedArg( options.velocity.distribution, types.NUMBER, this.type ),\n        _randomise: utils.ensureTypedArg( options.position.randomise, types.BOOLEAN, false )\n    };\n\n    this.acceleration = {\n        _value: utils.ensureInstanceOf( options.acceleration.value, THREE.Vector3, new THREE.Vector3() ),\n        _spread: utils.ensureInstanceOf( options.acceleration.spread, THREE.Vector3, new THREE.Vector3() ),\n        _distribution: utils.ensureTypedArg( options.acceleration.distribution, types.NUMBER, this.type ),\n        _randomise: utils.ensureTypedArg( options.position.randomise, types.BOOLEAN, false )\n    };\n\n    this.drag = {\n        _value: utils.ensureTypedArg( options.drag.value, types.NUMBER, 0 ),\n        _spread: utils.ensureTypedArg( options.drag.spread, types.NUMBER, 0 ),\n        _randomise: utils.ensureTypedArg( options.position.randomise, types.BOOLEAN, false )\n    };\n\n    this.wiggle = {\n        _value: utils.ensureTypedArg( options.wiggle.value, types.NUMBER, 0 ),\n        _spread: utils.ensureTypedArg( options.wiggle.spread, types.NUMBER, 0 )\n    };\n\n    this.rotation = {\n        _axis: utils.ensureInstanceOf( options.rotation.axis, THREE.Vector3, new THREE.Vector3( 0.0, 1.0, 0.0 ) ),\n        _axisSpread: utils.ensureInstanceOf( options.rotation.axisSpread, THREE.Vector3, new THREE.Vector3() ),\n        _angle: utils.ensureTypedArg( options.rotation.angle, types.NUMBER, 0 ),\n        _angleSpread: utils.ensureTypedArg( options.rotation.angleSpread, types.NUMBER, 0 ),\n        _static: utils.ensureTypedArg( options.rotation.static, types.BOOLEAN, false ),\n        _center: utils.ensureInstanceOf( options.rotation.center, THREE.Vector3, this.position._value.clone() ),\n        _randomise: utils.ensureTypedArg( options.position.randomise, types.BOOLEAN, false )\n    };\n\n\n    this.maxAge = {\n        _value: utils.ensureTypedArg( options.maxAge.value, types.NUMBER, 2 ),\n        _spread: utils.ensureTypedArg( options.maxAge.spread, types.NUMBER, 0 )\n    };\n\n\n\n    // The following properties can support either single values, or an array of values that change\n    // the property over a particle's lifetime (value over lifetime).\n    this.color = {\n        _value: utils.ensureArrayInstanceOf( options.color.value, THREE.Color, new THREE.Color() ),\n        _spread: utils.ensureArrayInstanceOf( options.color.spread, THREE.Vector3, new THREE.Vector3() ),\n        _randomise: utils.ensureTypedArg( options.position.randomise, types.BOOLEAN, false )\n    };\n\n    this.opacity = {\n        _value: utils.ensureArrayTypedArg( options.opacity.value, types.NUMBER, 1 ),\n        _spread: utils.ensureArrayTypedArg( options.opacity.spread, types.NUMBER, 0 ),\n        _randomise: utils.ensureTypedArg( options.position.randomise, types.BOOLEAN, false )\n    };\n\n    this.size = {\n        _value: utils.ensureArrayTypedArg( options.size.value, types.NUMBER, 1 ),\n        _spread: utils.ensureArrayTypedArg( options.size.spread, types.NUMBER, 0 ),\n        _randomise: utils.ensureTypedArg( options.position.randomise, types.BOOLEAN, false )\n    };\n\n    this.angle = {\n        _value: utils.ensureArrayTypedArg( options.angle.value, types.NUMBER, 0 ),\n        _spread: utils.ensureArrayTypedArg( options.angle.spread, types.NUMBER, 0 ),\n        _randomise: utils.ensureTypedArg( options.position.randomise, types.BOOLEAN, false )\n    };\n\n\n    // Assign renaining option values.\n    this.particleCount = utils.ensureTypedArg( options.particleCount, types.NUMBER, 100 );\n    this.duration = utils.ensureTypedArg( options.duration, types.NUMBER, null );\n    this.isStatic = utils.ensureTypedArg( options.isStatic, types.BOOLEAN, false );\n    this.activeMultiplier = utils.ensureTypedArg( options.activeMultiplier, types.NUMBER, 1 );\n    this.direction = utils.ensureTypedArg( options.direction, types.NUMBER, 1 );\n\n    // Whether this emitter is alive or not.\n    this.alive = utils.ensureTypedArg( options.alive, types.BOOLEAN, true );\n\n\n    // The following properties are set internally and are not\n    // user-controllable.\n    this.particlesPerSecond = 0;\n\n    // The current particle index for which particles should\n    // be marked as active on the next update cycle.\n    this.activationIndex = 0;\n\n    // The offset in the typed arrays this emitter's\n    // particle's values will start at\n    this.attributeOffset = 0;\n\n    // The end of the range in the attribute buffers\n    this.attributeEnd = 0;\n\n\n\n    // Holds the time the emitter has been alive for.\n    this.age = 0.0;\n\n    // Holds the number of currently-alive particles\n    this.activeParticleCount = 0.0;\n\n    // Holds a reference to this emitter's group once\n    // it's added to one.\n    this.group = null;\n\n    // Holds a reference to this emitter's group's attributes object\n    // for easier access.\n    this.attributes = null;\n\n    // Holds a reference to the params attribute's typed array\n    // for quicker access.\n    this.paramsArray = null;\n\n    // A set of flags to determine whether particular properties\n    // should be re-randomised when a particle is reset.\n    //\n    // If a `randomise` property is given, this is preferred.\n    // Otherwise, it looks at whether a spread value has been\n    // given.\n    //\n    // It allows randomization to be turned off as desired. If\n    // all randomization is turned off, then I'd expect a performance\n    // boost as no attribute buffers (excluding the `params`)\n    // would have to be re-passed to the GPU each frame (since nothing\n    // except the `params` attribute would have changed).\n    this.resetFlags = {\n        // params: utils.ensureTypedArg( options.maxAge.randomise, types.BOOLEAN, !!options.maxAge.spread ) ||\n        //     utils.ensureTypedArg( options.wiggle.randomise, types.BOOLEAN, !!options.wiggle.spread ),\n        position: utils.ensureTypedArg( options.position.randomise, types.BOOLEAN, false ) ||\n            utils.ensureTypedArg( options.radius.randomise, types.BOOLEAN, false ),\n        velocity: utils.ensureTypedArg( options.velocity.randomise, types.BOOLEAN, false ),\n        acceleration: utils.ensureTypedArg( options.acceleration.randomise, types.BOOLEAN, false ) ||\n            utils.ensureTypedArg( options.drag.randomise, types.BOOLEAN, false ),\n        rotation: utils.ensureTypedArg( options.rotation.randomise, types.BOOLEAN, false ),\n        rotationCenter: utils.ensureTypedArg( options.rotation.randomise, types.BOOLEAN, false ),\n        size: utils.ensureTypedArg( options.size.randomise, types.BOOLEAN, false ),\n        color: utils.ensureTypedArg( options.color.randomise, types.BOOLEAN, false ),\n        opacity: utils.ensureTypedArg( options.opacity.randomise, types.BOOLEAN, false ),\n        angle: utils.ensureTypedArg( options.angle.randomise, types.BOOLEAN, false )\n    };\n\n    this.updateFlags = {};\n    this.updateCounts = {};\n\n    // A map to indicate which emitter parameters should update\n    // which attribute.\n    this.updateMap = {\n        maxAge: 'params',\n        position: 'position',\n        velocity: 'velocity',\n        acceleration: 'acceleration',\n        drag: 'acceleration',\n        wiggle: 'params',\n        rotation: 'rotation',\n        size: 'size',\n        color: 'color',\n        opacity: 'opacity',\n        angle: 'angle'\n    };\n\n    for ( var i in this.updateMap ) {\n        if ( this.updateMap.hasOwnProperty( i ) ) {\n            this.updateCounts[ this.updateMap[ i ] ] = 0.0;\n            this.updateFlags[ this.updateMap[ i ] ] = false;\n            this._createGetterSetters( this[ i ], i );\n        }\n    }\n\n    this.bufferUpdateRanges = {};\n    this.attributeKeys = null;\n    this.attributeCount = 0;\n\n\n    // Ensure that the value-over-lifetime property objects above\n    // have value and spread properties that are of the same length.\n    //\n    // Also, for now, make sure they have a length of 3 (min/max arguments here).\n    utils.ensureValueOverLifetimeCompliance( this.color, lifetimeLength, lifetimeLength );\n    utils.ensureValueOverLifetimeCompliance( this.opacity, lifetimeLength, lifetimeLength );\n    utils.ensureValueOverLifetimeCompliance( this.size, lifetimeLength, lifetimeLength );\n    utils.ensureValueOverLifetimeCompliance( this.angle, lifetimeLength, lifetimeLength );\n};\n\nSPE.Emitter.constructor = SPE.Emitter;\n\nSPE.Emitter.prototype._createGetterSetters = function( propObj, propName ) {\n    'use strict';\n\n    var self = this;\n\n    for ( var i in propObj ) {\n        if ( propObj.hasOwnProperty( i ) ) {\n\n            var name = i.replace( '_', '' );\n\n            Object.defineProperty( propObj, name, {\n                get: ( function( prop ) {\n                    return function() {\n                        return this[ prop ];\n                    };\n                }( i ) ),\n\n                set: ( function( prop ) {\n                    return function( value ) {\n                        var mapName = self.updateMap[ propName ],\n                            prevValue = this[ prop ],\n                            length = SPE.valueOverLifetimeLength;\n\n                        if ( prop === '_rotationCenter' ) {\n                            self.updateFlags.rotationCenter = true;\n                            self.updateCounts.rotationCenter = 0.0;\n                        }\n                        else if ( prop === '_randomise' ) {\n                            self.resetFlags[ mapName ] = value;\n                        }\n                        else {\n                            self.updateFlags[ mapName ] = true;\n                            self.updateCounts[ mapName ] = 0.0;\n                        }\n\n                        self.group._updateDefines();\n\n                        this[ prop ] = value;\n\n                        // If the previous value was an array, then make\n                        // sure the provided value is interpolated correctly.\n                        if ( Array.isArray( prevValue ) ) {\n                            SPE.utils.ensureValueOverLifetimeCompliance( self[ propName ], length, length );\n                        }\n                    };\n                }( i ) )\n            } );\n        }\n    }\n};\n\nSPE.Emitter.prototype._setBufferUpdateRanges = function( keys ) {\n    'use strict';\n\n    this.attributeKeys = keys;\n    this.attributeCount = keys.length;\n\n    for ( var i = this.attributeCount - 1; i >= 0; --i ) {\n        this.bufferUpdateRanges[ keys[ i ] ] = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n    }\n};\n\nSPE.Emitter.prototype._calculatePPSValue = function( groupMaxAge ) {\n    'use strict';\n\n    var particleCount = this.particleCount;\n\n\n    // Calculate the `particlesPerSecond` value for this emitter. It's used\n    // when determining which particles should die and which should live to\n    // see another day. Or be born, for that matter. The \"God\" property.\n    if ( this.duration ) {\n        this.particlesPerSecond = particleCount / ( groupMaxAge < this.duration ? groupMaxAge : this.duration );\n    }\n    else {\n        this.particlesPerSecond = particleCount / groupMaxAge;\n    }\n};\n\nSPE.Emitter.prototype._setAttributeOffset = function( startIndex ) {\n    this.attributeOffset = startIndex;\n    this.activationIndex = startIndex;\n    this.activationEnd = startIndex + this.particleCount;\n};\n\n\nSPE.Emitter.prototype._assignValue = function( prop, index ) {\n    'use strict';\n\n    switch ( prop ) {\n        case 'position':\n            this._assignPositionValue( index );\n            break;\n\n        case 'velocity':\n        case 'acceleration':\n            this._assignForceValue( index, prop );\n            break;\n\n        case 'size':\n        case 'opacity':\n            this._assignAbsLifetimeValue( index, prop );\n            break;\n\n        case 'angle':\n            this._assignAngleValue( index );\n            break;\n\n        case 'params':\n            this._assignParamsValue( index );\n            break;\n\n        case 'rotation':\n            this._assignRotationValue( index );\n            break;\n\n        case 'color':\n            this._assignColorValue( index );\n            break;\n    }\n};\n\nSPE.Emitter.prototype._assignPositionValue = function( index ) {\n    'use strict';\n\n    var distributions = SPE.distributions,\n        utils = SPE.utils,\n        prop = this.position,\n        attr = this.attributes.position,\n        value = prop._value,\n        spread = prop._spread,\n        distribution = prop._distribution;\n\n    switch ( distribution ) {\n        case distributions.BOX:\n            utils.randomVector3( attr, index, value, spread, prop._spreadClamp );\n            break;\n\n        case distributions.SPHERE:\n            utils.randomVector3OnSphere( attr, index, value, prop._radius, prop._spread.x, prop._radiusScale, prop._spreadClamp.x, prop._distributionClamp || this.particleCount );\n            break;\n\n        case distributions.DISC:\n            utils.randomVector3OnDisc( attr, index, value, prop._radius, prop._spread.x, prop._radiusScale, prop._spreadClamp.x );\n            break;\n    }\n};\n\nSPE.Emitter.prototype._assignForceValue = function( index, attrName ) {\n    'use strict';\n\n    var distributions = SPE.distributions,\n        utils = SPE.utils,\n        prop = this[ attrName ],\n        value = prop._value,\n        spread = prop._spread,\n        distribution = prop._distribution,\n        pos,\n        positionX,\n        positionY,\n        positionZ,\n        i;\n\n    switch ( distribution ) {\n        case distributions.BOX:\n            utils.randomVector3( this.attributes[ attrName ], index, value, spread );\n            break;\n\n        case distributions.SPHERE:\n            pos = this.attributes.position.typedArray.array;\n            i = index * 3;\n\n            // Ensure position values aren't zero, otherwise no force will be\n            // applied.\n            // positionX = utils.zeroToEpsilon( pos[ i ], true );\n            // positionY = utils.zeroToEpsilon( pos[ i + 1 ], true );\n            // positionZ = utils.zeroToEpsilon( pos[ i + 2 ], true );\n            positionX = pos[ i ];\n            positionY = pos[ i + 1 ];\n            positionZ = pos[ i + 2 ];\n\n            utils.randomDirectionVector3OnSphere(\n                this.attributes[ attrName ], index,\n                positionX, positionY, positionZ,\n                this.position._value,\n                prop._value.x,\n                prop._spread.x\n            );\n            break;\n\n        case distributions.DISC:\n            pos = this.attributes.position.typedArray.array;\n            i = index * 3;\n\n            // Ensure position values aren't zero, otherwise no force will be\n            // applied.\n            // positionX = utils.zeroToEpsilon( pos[ i ], true );\n            // positionY = utils.zeroToEpsilon( pos[ i + 1 ], true );\n            // positionZ = utils.zeroToEpsilon( pos[ i + 2 ], true );\n            positionX = pos[ i ];\n            positionY = pos[ i + 1 ];\n            positionZ = pos[ i + 2 ];\n\n            utils.randomDirectionVector3OnDisc(\n                this.attributes[ attrName ], index,\n                positionX, positionY, positionZ,\n                this.position._value,\n                prop._value.x,\n                prop._spread.x\n            );\n            break;\n    }\n\n    if ( attrName === 'acceleration' ) {\n        var drag = utils.clamp( utils.randomFloat( this.drag._value, this.drag._spread ), 0, 1 );\n        this.attributes.acceleration.typedArray.array[ index * 4 + 3 ] = drag;\n    }\n};\n\nSPE.Emitter.prototype._assignAbsLifetimeValue = function( index, propName ) {\n    'use strict';\n\n    var array = this.attributes[ propName ].typedArray,\n        prop = this[ propName ],\n        utils = SPE.utils,\n        value;\n\n    if ( utils.arrayValuesAreEqual( prop._value ) && utils.arrayValuesAreEqual( prop._spread ) ) {\n        value = Math.abs( utils.randomFloat( prop._value[ 0 ], prop._spread[ 0 ] ) );\n        array.setVec4Components( index, value, value, value, value );\n    }\n    else {\n        array.setVec4Components( index,\n            Math.abs( utils.randomFloat( prop._value[ 0 ], prop._spread[ 0 ] ) ),\n            Math.abs( utils.randomFloat( prop._value[ 1 ], prop._spread[ 1 ] ) ),\n            Math.abs( utils.randomFloat( prop._value[ 2 ], prop._spread[ 2 ] ) ),\n            Math.abs( utils.randomFloat( prop._value[ 3 ], prop._spread[ 3 ] ) )\n        );\n    }\n};\n\nSPE.Emitter.prototype._assignAngleValue = function( index ) {\n    'use strict';\n\n    var array = this.attributes.angle.typedArray,\n        prop = this.angle,\n        utils = SPE.utils,\n        value;\n\n    if ( utils.arrayValuesAreEqual( prop._value ) && utils.arrayValuesAreEqual( prop._spread ) ) {\n        value = utils.randomFloat( prop._value[ 0 ], prop._spread[ 0 ] );\n        array.setVec4Components( index, value, value, value, value );\n    }\n    else {\n        array.setVec4Components( index,\n            utils.randomFloat( prop._value[ 0 ], prop._spread[ 0 ] ),\n            utils.randomFloat( prop._value[ 1 ], prop._spread[ 1 ] ),\n            utils.randomFloat( prop._value[ 2 ], prop._spread[ 2 ] ),\n            utils.randomFloat( prop._value[ 3 ], prop._spread[ 3 ] )\n        );\n    }\n};\n\nSPE.Emitter.prototype._assignParamsValue = function( index ) {\n    'use strict';\n\n    this.attributes.params.typedArray.setVec4Components( index,\n        this.isStatic ? 1 : 0,\n        0.0,\n        Math.abs( SPE.utils.randomFloat( this.maxAge._value, this.maxAge._spread ) ),\n        SPE.utils.randomFloat( this.wiggle._value, this.wiggle._spread )\n    );\n};\n\nSPE.Emitter.prototype._assignRotationValue = function( index ) {\n    'use strict';\n\n    this.attributes.rotation.typedArray.setVec3Components( index,\n        SPE.utils.getPackedRotationAxis( this.rotation._axis, this.rotation._axisSpread ),\n        SPE.utils.randomFloat( this.rotation._angle, this.rotation._angleSpread ),\n        this.rotation._static ? 0 : 1\n    );\n\n    this.attributes.rotationCenter.typedArray.setVec3( index, this.rotation._center );\n};\n\nSPE.Emitter.prototype._assignColorValue = function( index ) {\n    'use strict';\n    SPE.utils.randomColorAsHex( this.attributes.color, index, this.color._value, this.color._spread );\n};\n\nSPE.Emitter.prototype._resetParticle = function( index ) {\n    'use strict';\n\n    var resetFlags = this.resetFlags,\n        updateFlags = this.updateFlags,\n        updateCounts = this.updateCounts,\n        keys = this.attributeKeys,\n        key,\n        updateFlag;\n\n    for ( var i = this.attributeCount - 1; i >= 0; --i ) {\n        key = keys[ i ];\n        updateFlag = updateFlags[ key ];\n\n        if ( resetFlags[ key ] === true || updateFlag === true ) {\n            this._assignValue( key, index );\n            this._updateAttributeUpdateRange( key, index );\n\n            if ( updateFlag === true && updateCounts[ key ] === this.particleCount ) {\n                updateFlags[ key ] = false;\n                updateCounts[ key ] = 0.0;\n            }\n            else if ( updateFlag == true ) {\n                ++updateCounts[ key ];\n            }\n        }\n    }\n};\n\nSPE.Emitter.prototype._updateAttributeUpdateRange = function( attr, i ) {\n    'use strict';\n\n    var ranges = this.bufferUpdateRanges[ attr ];\n\n    ranges.min = Math.min( i, ranges.min );\n    ranges.max = Math.max( i, ranges.max );\n};\n\nSPE.Emitter.prototype._resetBufferRanges = function() {\n    'use strict';\n\n    var ranges = this.bufferUpdateRanges,\n        keys = this.bufferUpdateKeys,\n        i = this.bufferUpdateCount - 1,\n        key;\n\n    for ( i; i >= 0; --i ) {\n        key = keys[ i ];\n        ranges[ key ].min = Number.POSITIVE_INFINITY;\n        ranges[ key ].max = Number.NEGATIVE_INFINITY;\n    }\n};\n\nSPE.Emitter.prototype._onRemove = function() {\n    'use strict';\n    // Reset any properties of the emitter that were set by\n    // a group when it was added.\n    this.particlesPerSecond = 0;\n    this.attributeOffset = 0;\n    this.activationIndex = 0;\n    this.activeParticleCount = 0;\n    this.group = null;\n    this.attributes = null;\n    this.paramsArray = null;\n    this.age = 0.0;\n};\n\nSPE.Emitter.prototype._decrementParticleCount = function() {\n    'use strict';\n    --this.activeParticleCount;\n\n    // TODO:\n    //  - Trigger event if count === 0.\n};\n\nSPE.Emitter.prototype._incrementParticleCount = function() {\n    'use strict';\n    ++this.activeParticleCount;\n\n    // TODO:\n    //  - Trigger event if count === this.particleCount.\n};\n\nSPE.Emitter.prototype._checkParticleAges = function( start, end, params, dt ) {\n    'use strict';\n    for ( var i = end - 1, index, maxAge, age, alive; i >= start; --i ) {\n        index = i * 4;\n\n        alive = params[ index ];\n\n        if ( alive === 0.0 ) {\n            continue;\n        }\n\n        // Increment age\n        age = params[ index + 1 ];\n        maxAge = params[ index + 2 ];\n\n        if ( this.direction === 1 ) {\n            age += dt;\n\n            if ( age >= maxAge ) {\n                age = 0.0;\n                alive = 0.0;\n                this._decrementParticleCount();\n            }\n        }\n        else {\n            age -= dt;\n\n            if ( age <= 0.0 ) {\n                age = maxAge;\n                alive = 0.0;\n                this._decrementParticleCount();\n            }\n        }\n\n        params[ index ] = alive;\n        params[ index + 1 ] = age;\n\n        this._updateAttributeUpdateRange( 'params', i );\n    }\n};\n\nSPE.Emitter.prototype._activateParticles = function( activationStart, activationEnd, params, dtPerParticle ) {\n    'use strict';\n    var direction = this.direction;\n\n    for ( var i = activationStart, index, dtValue; i < activationEnd; ++i ) {\n        index = i * 4;\n\n        // Don't re-activate particles that aren't dead yet.\n        // if ( params[ index ] !== 0.0 && ( this.particleCount !== 1 || this.activeMultiplier !== 1 ) ) {\n        //     continue;\n        // }\n\n        if ( params[ index ] != 0.0 && this.particleCount !== 1 ) {\n            continue;\n        }\n\n        // Increment the active particle count.\n        this._incrementParticleCount();\n\n        // Mark the particle as alive.\n        params[ index ] = 1.0;\n\n        // Reset the particle\n        this._resetParticle( i );\n\n        // Move each particle being activated to\n        // it's actual position in time.\n        //\n        // This stops particles being 'clumped' together\n        // when frame rates are on the lower side of 60fps\n        // or not constant (a very real possibility!)\n        dtValue = dtPerParticle * ( i - activationStart )\n        params[ index + 1 ] = direction === -1 ? params[ index + 2 ] - dtValue : dtValue;\n\n        this._updateAttributeUpdateRange( 'params', i );\n    }\n};\n\n/**\n * Simulates one frame's worth of particles, updating particles\n * that are already alive, and marking ones that are currently dead\n * but should be alive as alive.\n *\n * If the emitter is marked as static, then this function will do nothing.\n *\n * @param  {Number} dt The number of seconds to simulate (deltaTime)\n */\nSPE.Emitter.prototype.tick = function( dt ) {\n    'use strict';\n\n    if ( this.isStatic ) {\n        return;\n    }\n\n    if ( this.paramsArray === null ) {\n        this.paramsArray = this.attributes.params.typedArray.array;\n    }\n\n    var start = this.attributeOffset,\n        end = start + this.particleCount,\n        params = this.paramsArray, // vec3( alive, age, maxAge, wiggle )\n        ppsDt = this.particlesPerSecond * this.activeMultiplier * dt,\n        activationIndex = this.activationIndex;\n\n    // Reset the buffer update indices.\n    this._resetBufferRanges();\n\n    // Increment age for those particles that are alive,\n    // and kill off any particles whose age is over the limit.\n    this._checkParticleAges( start, end, params, dt );\n\n    // If the emitter is dead, reset the age of the emitter to zero,\n    // ready to go again if required\n    if ( this.alive === false ) {\n        this.age = 0.0;\n        return;\n    }\n\n    // If the emitter has a specified lifetime and we've exceeded it,\n    // mark the emitter as dead.\n    if ( this.duration !== null && this.age > this.duration ) {\n        this.alive = false;\n        this.age = 0.0;\n        return;\n    }\n\n\n    var activationStart = this.particleCount === 1 ? activationIndex : ( activationIndex | 0 ),\n        activationEnd = Math.min( activationStart + ppsDt, this.activationEnd ),\n        activationCount = activationEnd - this.activationIndex | 0,\n        dtPerParticle = activationCount > 0 ? dt / activationCount : 0;\n\n    this._activateParticles( activationStart, activationEnd, params, dtPerParticle );\n\n    // Move the activation window forward, soldier.\n    this.activationIndex += ppsDt;\n\n    if ( this.activationIndex > end ) {\n        this.activationIndex = start;\n    }\n\n\n    // Increment the age of the emitter.\n    this.age += dt;\n};\n\n/**\n * Resets all the emitter's particles to their start positions\n * and marks the particles as dead if the `force` argument is\n * true.\n *\n * @param  {Boolean} [force=undefined] If true, all particles will be marked as dead instantly.\n * @return {Emitter}       This emitter instance.\n */\nSPE.Emitter.prototype.reset = function( force ) {\n    'use strict';\n\n    this.age = 0.0;\n    this.alive = false;\n\n    if ( force === true ) {\n        var start = this.attributeOffset,\n            end = start + this.particleCount,\n            array = this.paramsArray,\n            attr = this.attributes.params.bufferAttribute;\n\n        for ( var i = end - 1, index; i >= start; --i ) {\n            index = i * 4;\n\n            array[ index ] = 0.0;\n            array[ index + 1 ] = 0.0;\n        }\n\n        attr.updateRange.offset = 0;\n        attr.updateRange.count = -1;\n        attr.needsUpdate = true;\n    }\n\n    return this;\n};\n\n/**\n * Enables the emitter. If not already enabled, the emitter\n * will start emitting particles.\n *\n * @return {Emitter} This emitter instance.\n */\nSPE.Emitter.prototype.enable = function() {\n    'use strict';\n    this.alive = true;\n    return this;\n};\n\n/**\n * Disables th emitter, but does not instantly remove it's\n * particles fromt the scene. When called, the emitter will be\n * 'switched off' and just stop emitting. Any particle's alive will\n * be allowed to finish their lifecycle.\n *\n * @return {Emitter} This emitter instance.\n */\nSPE.Emitter.prototype.disable = function() {\n    'use strict';\n\n    this.alive = false;\n    return this;\n};\n\n/**\n * Remove this emitter from it's parent group (if it has been added to one).\n * Delgates to SPE.group.prototype.removeEmitter().\n *\n * When called, all particle's belonging to this emitter will be instantly\n * removed from the scene.\n *\n * @return {Emitter} This emitter instance.\n *\n * @see SPE.Group.prototype.removeEmitter\n */\nSPE.Emitter.prototype.remove = function() {\n    'use strict';\n    if ( this.group !== null ) {\n        this.group.removeEmitter( this );\n    }\n    else {\n        console.error( 'Emitter does not belong to a group, cannot remove.' );\n    }\n\n    return this;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ "../node_modules/aframe-randomizer-components/index.js":
/* unknown exports provided */
/* all exports used */
/*!**************************************************!*\
  !*** ../~/aframe-randomizer-components/index.js ***!
  \**************************************************/
/***/ (function(module, exports) {

eval("if (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\n/**\n * Set random color within bounds.\n */\nAFRAME.registerComponent('random-color', {\n  schema: {\n    min: {default: {x: 0, y: 0, z: 0}, type: 'vec3'},\n    max: {default: {x: 1, y: 1, z: 1}, type: 'vec3'}\n  },\n\n  update: function () {\n    var data = this.data;\n    var max = data.max;\n    var min = data.min;\n    this.el.setAttribute('material', 'color', '#' + new THREE.Color(\n      Math.random() * max.x + min.x,\n      Math.random() * max.y + min.y,\n      Math.random() * max.z + min.z\n    ).getHexString());\n  }\n});\n\n/**\n * Set random position within bounds.\n */\nAFRAME.registerComponent('random-position', {\n  schema: {\n    min: {default: {x: -10, y: -10, z: -10}, type: 'vec3'},\n    max: {default: {x: 10, y: 10, z: 10}, type: 'vec3'}\n  },\n\n  update: function () {\n    var data = this.data;\n    var max = data.max;\n    var min = data.min;\n    this.el.setAttribute('position', {\n      x: Math.random() * (max.x - min.x) + min.x,\n      y: Math.random() * (max.y - min.y) + min.y,\n      z: Math.random() * (max.z - min.z) + min.z\n    });\n  }\n});\n\n/**\n * Set random position within spherical bounds.\n */\nAFRAME.registerComponent('random-spherical-position', {\n  schema: {\n    radius: {default: 10},\n    startX: {default: 0},\n    lengthX: {default: 360},\n    startY: {default: 0},\n    lengthY: {default: 360}\n  },\n\n  update: function () {\n    var data = this.data;\n\n    var xAngle = THREE.Math.degToRad(Math.random() * data.lengthX + data.startX);\n    var yAngle = THREE.Math.degToRad(Math.random() * data.lengthY + data.startY);\n\n    this.el.setAttribute('position', {\n      x: data.radius * Math.cos(xAngle) * Math.sin(yAngle),\n      y: data.radius * Math.sin(xAngle) * Math.sin(yAngle),\n      z: data.radius * Math.cos(yAngle)\n    });\n  }\n});\n\n/**\n * Set random rotation within bounds.\n */\nAFRAME.registerComponent('random-rotation', {\n  schema: {\n    min: {default: {x: 0, y: 0, z: 0}, type: 'vec3'},\n    max: {default: {x: 360, y: 360, z: 360}, type: 'vec3'}\n  },\n\n  update: function () {\n    var data = this.data;\n    var max = data.max;\n    var min = data.min;\n    this.el.setAttribute('rotation', {\n      x: Math.random() * max.x + min.x,\n      y: Math.random() * max.y + min.y,\n      z: Math.random() * max.z + min.z\n    });\n  }\n});\n\n/**\n * Set random scale within bounds.\n */\nAFRAME.registerComponent('random-scale', {\n  schema: {\n    min: {default: {x: 0, y: 0, z: 0}, type: 'vec3'},\n    max: {default: {x: 2, y: 2, z: 2}, type: 'vec3'}\n  },\n\n  update: function () {\n    var data = this.data;\n    var max = data.max;\n    var min = data.min;\n    this.el.setAttribute('scale', {\n      x: Math.random() * max.x + min.x,\n      y: Math.random() * max.y + min.y,\n      z: Math.random() * max.z + min.z\n    });\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2FmcmFtZS1yYW5kb21pemVyLWNvbXBvbmVudHMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9hZnJhbWUtcmFuZG9taXplci1jb21wb25lbnRzL2luZGV4LmpzP2QxNTciXSwic291cmNlc0NvbnRlbnQiOlsiaWYgKHR5cGVvZiBBRlJBTUUgPT09ICd1bmRlZmluZWQnKSB7XG4gIHRocm93IG5ldyBFcnJvcignQ29tcG9uZW50IGF0dGVtcHRlZCB0byByZWdpc3RlciBiZWZvcmUgQUZSQU1FIHdhcyBhdmFpbGFibGUuJyk7XG59XG5cbi8qKlxuICogU2V0IHJhbmRvbSBjb2xvciB3aXRoaW4gYm91bmRzLlxuICovXG5BRlJBTUUucmVnaXN0ZXJDb21wb25lbnQoJ3JhbmRvbS1jb2xvcicsIHtcbiAgc2NoZW1hOiB7XG4gICAgbWluOiB7ZGVmYXVsdDoge3g6IDAsIHk6IDAsIHo6IDB9LCB0eXBlOiAndmVjMyd9LFxuICAgIG1heDoge2RlZmF1bHQ6IHt4OiAxLCB5OiAxLCB6OiAxfSwgdHlwZTogJ3ZlYzMnfVxuICB9LFxuXG4gIHVwZGF0ZTogZnVuY3Rpb24gKCkge1xuICAgIHZhciBkYXRhID0gdGhpcy5kYXRhO1xuICAgIHZhciBtYXggPSBkYXRhLm1heDtcbiAgICB2YXIgbWluID0gZGF0YS5taW47XG4gICAgdGhpcy5lbC5zZXRBdHRyaWJ1dGUoJ21hdGVyaWFsJywgJ2NvbG9yJywgJyMnICsgbmV3IFRIUkVFLkNvbG9yKFxuICAgICAgTWF0aC5yYW5kb20oKSAqIG1heC54ICsgbWluLngsXG4gICAgICBNYXRoLnJhbmRvbSgpICogbWF4LnkgKyBtaW4ueSxcbiAgICAgIE1hdGgucmFuZG9tKCkgKiBtYXgueiArIG1pbi56XG4gICAgKS5nZXRIZXhTdHJpbmcoKSk7XG4gIH1cbn0pO1xuXG4vKipcbiAqIFNldCByYW5kb20gcG9zaXRpb24gd2l0aGluIGJvdW5kcy5cbiAqL1xuQUZSQU1FLnJlZ2lzdGVyQ29tcG9uZW50KCdyYW5kb20tcG9zaXRpb24nLCB7XG4gIHNjaGVtYToge1xuICAgIG1pbjoge2RlZmF1bHQ6IHt4OiAtMTAsIHk6IC0xMCwgejogLTEwfSwgdHlwZTogJ3ZlYzMnfSxcbiAgICBtYXg6IHtkZWZhdWx0OiB7eDogMTAsIHk6IDEwLCB6OiAxMH0sIHR5cGU6ICd2ZWMzJ31cbiAgfSxcblxuICB1cGRhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZGF0YSA9IHRoaXMuZGF0YTtcbiAgICB2YXIgbWF4ID0gZGF0YS5tYXg7XG4gICAgdmFyIG1pbiA9IGRhdGEubWluO1xuICAgIHRoaXMuZWwuc2V0QXR0cmlidXRlKCdwb3NpdGlvbicsIHtcbiAgICAgIHg6IE1hdGgucmFuZG9tKCkgKiAobWF4LnggLSBtaW4ueCkgKyBtaW4ueCxcbiAgICAgIHk6IE1hdGgucmFuZG9tKCkgKiAobWF4LnkgLSBtaW4ueSkgKyBtaW4ueSxcbiAgICAgIHo6IE1hdGgucmFuZG9tKCkgKiAobWF4LnogLSBtaW4ueikgKyBtaW4uelxuICAgIH0pO1xuICB9XG59KTtcblxuLyoqXG4gKiBTZXQgcmFuZG9tIHBvc2l0aW9uIHdpdGhpbiBzcGhlcmljYWwgYm91bmRzLlxuICovXG5BRlJBTUUucmVnaXN0ZXJDb21wb25lbnQoJ3JhbmRvbS1zcGhlcmljYWwtcG9zaXRpb24nLCB7XG4gIHNjaGVtYToge1xuICAgIHJhZGl1czoge2RlZmF1bHQ6IDEwfSxcbiAgICBzdGFydFg6IHtkZWZhdWx0OiAwfSxcbiAgICBsZW5ndGhYOiB7ZGVmYXVsdDogMzYwfSxcbiAgICBzdGFydFk6IHtkZWZhdWx0OiAwfSxcbiAgICBsZW5ndGhZOiB7ZGVmYXVsdDogMzYwfVxuICB9LFxuXG4gIHVwZGF0ZTogZnVuY3Rpb24gKCkge1xuICAgIHZhciBkYXRhID0gdGhpcy5kYXRhO1xuXG4gICAgdmFyIHhBbmdsZSA9IFRIUkVFLk1hdGguZGVnVG9SYWQoTWF0aC5yYW5kb20oKSAqIGRhdGEubGVuZ3RoWCArIGRhdGEuc3RhcnRYKTtcbiAgICB2YXIgeUFuZ2xlID0gVEhSRUUuTWF0aC5kZWdUb1JhZChNYXRoLnJhbmRvbSgpICogZGF0YS5sZW5ndGhZICsgZGF0YS5zdGFydFkpO1xuXG4gICAgdGhpcy5lbC5zZXRBdHRyaWJ1dGUoJ3Bvc2l0aW9uJywge1xuICAgICAgeDogZGF0YS5yYWRpdXMgKiBNYXRoLmNvcyh4QW5nbGUpICogTWF0aC5zaW4oeUFuZ2xlKSxcbiAgICAgIHk6IGRhdGEucmFkaXVzICogTWF0aC5zaW4oeEFuZ2xlKSAqIE1hdGguc2luKHlBbmdsZSksXG4gICAgICB6OiBkYXRhLnJhZGl1cyAqIE1hdGguY29zKHlBbmdsZSlcbiAgICB9KTtcbiAgfVxufSk7XG5cbi8qKlxuICogU2V0IHJhbmRvbSByb3RhdGlvbiB3aXRoaW4gYm91bmRzLlxuICovXG5BRlJBTUUucmVnaXN0ZXJDb21wb25lbnQoJ3JhbmRvbS1yb3RhdGlvbicsIHtcbiAgc2NoZW1hOiB7XG4gICAgbWluOiB7ZGVmYXVsdDoge3g6IDAsIHk6IDAsIHo6IDB9LCB0eXBlOiAndmVjMyd9LFxuICAgIG1heDoge2RlZmF1bHQ6IHt4OiAzNjAsIHk6IDM2MCwgejogMzYwfSwgdHlwZTogJ3ZlYzMnfVxuICB9LFxuXG4gIHVwZGF0ZTogZnVuY3Rpb24gKCkge1xuICAgIHZhciBkYXRhID0gdGhpcy5kYXRhO1xuICAgIHZhciBtYXggPSBkYXRhLm1heDtcbiAgICB2YXIgbWluID0gZGF0YS5taW47XG4gICAgdGhpcy5lbC5zZXRBdHRyaWJ1dGUoJ3JvdGF0aW9uJywge1xuICAgICAgeDogTWF0aC5yYW5kb20oKSAqIG1heC54ICsgbWluLngsXG4gICAgICB5OiBNYXRoLnJhbmRvbSgpICogbWF4LnkgKyBtaW4ueSxcbiAgICAgIHo6IE1hdGgucmFuZG9tKCkgKiBtYXgueiArIG1pbi56XG4gICAgfSk7XG4gIH1cbn0pO1xuXG4vKipcbiAqIFNldCByYW5kb20gc2NhbGUgd2l0aGluIGJvdW5kcy5cbiAqL1xuQUZSQU1FLnJlZ2lzdGVyQ29tcG9uZW50KCdyYW5kb20tc2NhbGUnLCB7XG4gIHNjaGVtYToge1xuICAgIG1pbjoge2RlZmF1bHQ6IHt4OiAwLCB5OiAwLCB6OiAwfSwgdHlwZTogJ3ZlYzMnfSxcbiAgICBtYXg6IHtkZWZhdWx0OiB7eDogMiwgeTogMiwgejogMn0sIHR5cGU6ICd2ZWMzJ31cbiAgfSxcblxuICB1cGRhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZGF0YSA9IHRoaXMuZGF0YTtcbiAgICB2YXIgbWF4ID0gZGF0YS5tYXg7XG4gICAgdmFyIG1pbiA9IGRhdGEubWluO1xuICAgIHRoaXMuZWwuc2V0QXR0cmlidXRlKCdzY2FsZScsIHtcbiAgICAgIHg6IE1hdGgucmFuZG9tKCkgKiBtYXgueCArIG1pbi54LFxuICAgICAgeTogTWF0aC5yYW5kb20oKSAqIG1heC55ICsgbWluLnksXG4gICAgICB6OiBNYXRoLnJhbmRvbSgpICogbWF4LnogKyBtaW4uelxuICAgIH0pO1xuICB9XG59KTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vYWZyYW1lLXJhbmRvbWl6ZXItY29tcG9uZW50cy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gLi4vbm9kZV9tb2R1bGVzL2FmcmFtZS1yYW5kb21pemVyLWNvbXBvbmVudHMvaW5kZXguanNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/aframe-template-component/index.js":
/* unknown exports provided */
/* all exports used */
/*!***********************************************!*\
  !*** ../~/aframe-template-component/index.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var templateString = __webpack_require__(/*! es6-template-strings */ \"../node_modules/es6-template-strings/index.js\");\n\nvar debug = AFRAME.utils.debug;\nvar extend = AFRAME.utils.extend;\nvar templateCache = {};  // Template cache.\nvar error = debug('template-component:error');\nvar log = debug('template-component:info');\n\nvar HANDLEBARS = 'handlebars';\nvar JADE = 'jade';\nvar MUSTACHE = 'mustache';\nvar NUNJUCKS = 'nunjucks';\nvar HTML = 'html';\n\nvar LIB_LOADED = {};\nLIB_LOADED[HANDLEBARS] = !!window.Handlebars;\nLIB_LOADED[JADE] = !!window.jade;\nLIB_LOADED[MUSTACHE] = !!window.Mustache;\nLIB_LOADED[NUNJUCKS] = !!window.nunjucks;\n\nvar LIB_SRC = {};\nLIB_SRC[HANDLEBARS] = 'https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.5/handlebars.min.js';\nLIB_SRC[JADE] = 'https://cdnjs.cloudflare.com/ajax/libs/jade/1.11.0/jade.min.js';\nLIB_SRC[MUSTACHE] = 'https://cdnjs.cloudflare.com/ajax/libs/mustache.js/2.2.1/mustache.min.js';\nLIB_SRC[NUNJUCKS] = 'https://cdnjs.cloudflare.com/ajax/libs/nunjucks/2.3.0/nunjucks.min.js';\n\nAFRAME.registerComponent('template', {\n  schema: {\n    insert: {\n      // insertAdjacentHTML.\n      default: 'beforeend'\n    },\n    type: {\n      default: ''\n    },\n    src: {\n      // Selector or URL.\n      default: ''\n    },\n    data: {\n      default: ''\n    }\n  },\n\n  update: function (oldData) {\n    var data = this.data;\n    var el = this.el;\n    var fetcher = data.src[0] === '#' ? fetchTemplateFromScriptTag : fetchTemplateFromXHR;\n    var templateCacheItem = templateCache[data.src];\n\n    // Replace children if swapping templates.\n    if (oldData && oldData.src !== data.src) {\n      while (el.firstChild) {\n        el.removeChild(el.firstChild);\n      }\n    }\n\n    if (templateCacheItem) {\n      this.renderTemplate(templateCacheItem);\n      return;\n    }\n\n    fetcher(data.src, data.type).then(this.renderTemplate.bind(this));\n  },\n\n  renderTemplate: function (templateCacheItem) {\n    var el = this.el;\n    var data = this.data;\n    var templateData = {};\n\n    Object.keys(el.dataset).forEach(function convertToData (key) {\n      templateData[key] = el.dataset[key];\n    });\n    if (data.data) {\n      templateData = extend(templateData, el.getAttribute(data.data));\n    }\n\n    var renderedTemplate = renderTemplate(templateCacheItem.template, templateCacheItem.type,\n                                          templateData);\n    el.insertAdjacentHTML(data.insert, renderedTemplate);\n    el.emit('templaterendered');\n  }\n});\n\n/**\n * Helper to compile template, lazy-loading the template engine if needed.\n */\nfunction compileTemplate (src, type, templateStr) {\n  return new Promise(function (resolve) {\n    injectTemplateLib(type).then(function () {\n      templateCache[src] = {\n        template: getCompiler(type)(templateStr.trim()),\n        type: type\n      };\n      resolve(templateCache[src]);\n    });\n  });\n}\n\nfunction renderTemplate (template, type, context) {\n  switch (type) {\n    case HANDLEBARS: {\n      return template(context);\n    }\n    case JADE: {\n      return template(context);\n    }\n    case MUSTACHE: {\n      return Mustache.render(template, context);\n    }\n    case NUNJUCKS: {\n      return template.render(context);\n    }\n    default: {\n      // If type not specified, assume HTML. Add some ES6 template string sugar.\n      return templateString(template, context);\n    }\n  }\n}\n\n/**\n * Cache and compile templates.\n */\nfunction fetchTemplateFromScriptTag (src, type) {\n  var compiler;\n  var scriptEl = document.querySelector(src);\n  var scriptType = scriptEl.getAttribute('type');\n  var templateStr = scriptEl.innerHTML;\n\n  // Try to infer template type from <script type> if type not specified.\n  if (!type) {\n    if (!scriptType) {\n      throw new Error('Must provide `type` attribute for <script> templates (e.g., handlebars, jade, nunjucks, html)');\n    }\n    if (scriptType.indexOf('handlebars') !== -1) {\n      type = HANDLEBARS;\n    } else if (scriptType.indexOf('jade') !== -1) {\n      type = JADE\n    } else if (scriptType.indexOf('mustache') !== -1) {\n      type = MUSTACHE;\n    } else if (scriptType.indexOf('nunjucks') !== -1) {\n      type = NUNJUCKS\n    } else if (scriptType.indexOf('html') !== -1) {\n      type = HTML;\n    } else {\n      error('Template type could not be inferred from the script tag. Please add a type.');\n      return;\n    }\n  }\n\n  return new Promise(function (resolve) {\n    compileTemplate(src, type, templateStr).then(function (template) {\n      resolve(template, type);\n    });\n  });\n}\n\nfunction fetchTemplateFromXHR (src, type) {\n  return new Promise(function (resolve) {\n    var request;\n    request = new XMLHttpRequest();\n    request.addEventListener('load', function () {\n      // Template fetched. Use template.\n      compileTemplate(src, type, request.response).then(function (template) {\n        resolve(template, type);\n      });\n    });\n    request.open('GET', src);\n    request.send();\n  });\n}\n\n/**\n * Get compiler given type.\n */\nfunction getCompiler (type) {\n  switch (type) {\n    case HANDLEBARS: {\n      return compileHandlebarsTemplate;\n    }\n    case JADE: {\n      return compileJadeTemplate;\n    }\n    case MUSTACHE: {\n      return compileHandlebarsTemplate;\n    }\n    case NUNJUCKS: {\n      return compileNunjucksTemplate;\n    }\n    default: {\n      // If type not specified, assume raw HTML and no templating needed.\n      return function (str) { return str; };\n    }\n  }\n}\n\nfunction compileHandlebarsTemplate (templateStr) {\n  return Handlebars.compile(templateStr);\n}\n\nfunction compileJadeTemplate (templateStr) {\n  return jade.compile(templateStr);\n}\n\nfunction compileMustacheTemplate (templateStr) {\n  Mustache.parse(templateStr);\n  return templateStr;\n}\n\nfunction compileNunjucksTemplate (templateStr) {\n  return nunjucks.compile(templateStr);\n}\n\nfunction injectTemplateLib (type) {\n  return new Promise(function (resolve) {\n    // No lib injection required.\n    if (!type || type === 'html') { return resolve(); }\n\n    var scriptEl = LIB_LOADED[type];\n\n    // Engine loaded.\n    if (LIB_LOADED[type] === true) { return resolve(); }\n\n    // Start lazy-loading.\n    if (!scriptEl) {\n      scriptEl = document.createElement('script');\n      LIB_LOADED[type] = scriptEl;\n      scriptEl.setAttribute('src', LIB_SRC[type]);\n      log('Lazy-loading %s engine. Please add <script src=\"%s\"> to your page.',\n          type, LIB_SRC[type]);\n      document.body.appendChild(scriptEl);\n    }\n\n    // Wait for onload, whether just injected or already lazy-loading.\n    var prevOnload = scriptEl.onload || function () {};\n    scriptEl.onload = function () {\n      prevOnload();\n      LIB_LOADED[type] = true;\n      resolve();\n    };\n  });\n};\n\nAFRAME.registerComponent('template-set', {\n  schema: {\n    on: {type: 'string'},\n    src: {type: 'string'},\n    data: {type: 'string'}\n  },\n\n  init: function () {\n    var data = this.data;\n    var el = this.el;\n    el.addEventListener(data.on, function () {\n      el.setAttribute('template', {src: data.src, data: data.data});\n    });\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ "../node_modules/animejs/anime.js":
/* unknown exports provided */
/* all exports used */
/*!*****************************!*\
  !*** ../~/animejs/anime.js ***!
  \*****************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Anime v1.1.3\n * http://anime-js.com\n * JavaScript animation engine\n * Copyright (c) 2016 Julian Garnier\n * http://juliangarnier.com\n * Released under the MIT license\n */\n\n(function (root, factory) {\n  if (true) {\n    // AMD. Register as an anonymous module.\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.anime = factory();\n  }\n}(this, function () {\n\n  var version = '1.1.3';\n\n  // Defaults\n\n  var defaultSettings = {\n    duration: 1000,\n    delay: 0,\n    loop: false,\n    autoplay: true,\n    direction: 'normal',\n    easing: 'easeOutElastic',\n    elasticity: 400,\n    round: false,\n    begin: undefined,\n    update: undefined,\n    complete: undefined\n  }\n\n  // Transforms\n\n  var validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skewX', 'skewY'];\n  var transform, transformStr = 'transform';\n\n  // Utils\n\n  var is = {\n    arr: function(a) { return Array.isArray(a) },\n    obj: function(a) { return Object.prototype.toString.call(a).indexOf('Object') > -1 },\n    svg: function(a) { return a instanceof SVGElement },\n    dom: function(a) { return a.nodeType || is.svg(a) },\n    num: function(a) { return !isNaN(parseInt(a)) },\n    str: function(a) { return typeof a === 'string' },\n    fnc: function(a) { return typeof a === 'function' },\n    und: function(a) { return typeof a === 'undefined' },\n    nul: function(a) { return typeof a === 'null' },\n    hex: function(a) { return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a) },\n    rgb: function(a) { return /^rgb/.test(a) },\n    hsl: function(a) { return /^hsl/.test(a) },\n    col: function(a) { return (is.hex(a) || is.rgb(a) || is.hsl(a)) }\n  }\n\n  // Easings functions adapted from http://jqueryui.com/\n\n  var easings = (function() {\n    var eases = {};\n    var names = ['Quad', 'Cubic', 'Quart', 'Quint', 'Expo'];\n    var functions = {\n      Sine: function(t) { return 1 + Math.sin(Math.PI / 2 * t - Math.PI / 2); },\n      Circ: function(t) { return 1 - Math.sqrt( 1 - t * t ); },\n      Elastic: function(t, m) {\n        if( t === 0 || t === 1 ) return t;\n        var p = (1 - Math.min(m, 998) / 1000), st = t / 1, st1 = st - 1, s = p / ( 2 * Math.PI ) * Math.asin( 1 );\n        return -( Math.pow( 2, 10 * st1 ) * Math.sin( ( st1 - s ) * ( 2 * Math.PI ) / p ) );\n      },\n      Back: function(t) { return t * t * ( 3 * t - 2 ); },\n      Bounce: function(t) {\n        var pow2, bounce = 4;\n        while ( t < ( ( pow2 = Math.pow( 2, --bounce ) ) - 1 ) / 11 ) {}\n        return 1 / Math.pow( 4, 3 - bounce ) - 7.5625 * Math.pow( ( pow2 * 3 - 2 ) / 22 - t, 2 );\n      }\n    }\n    names.forEach(function(name, i) {\n      functions[name] = function(t) {\n        return Math.pow( t, i + 2 );\n      }\n    });\n    Object.keys(functions).forEach(function(name) {\n      var easeIn = functions[name];\n      eases['easeIn' + name] = easeIn;\n      eases['easeOut' + name] = function(t, m) { return 1 - easeIn(1 - t, m); };\n      eases['easeInOut' + name] = function(t, m) { return t < 0.5 ? easeIn(t * 2, m) / 2 : 1 - easeIn(t * -2 + 2, m) / 2; };\n      eases['easeOutIn' + name] = function(t, m) { return t < 0.5 ? (1 - easeIn(1 - 2 * t, m)) / 2 : (easeIn(t * 2 - 1, m) + 1) / 2; };\n    });\n    eases.linear = function(t) { return t; };\n    return eases;\n  })();\n\n  // Strings\n\n  var numberToString = function(val) {\n    return (is.str(val)) ? val : val + '';\n  }\n\n  var stringToHyphens = function(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n\n  var selectString = function(str) {\n    if (is.col(str)) return false;\n    try {\n      var nodes = document.querySelectorAll(str);\n      return nodes;\n    } catch(e) {\n      return false;\n    }\n  }\n\n  // Numbers\n\n  var random = function(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  // Arrays\n\n  var flattenArray = function(arr) {\n    return arr.reduce(function(a, b) {\n      return a.concat(is.arr(b) ? flattenArray(b) : b);\n    }, []);\n  }\n\n  var toArray = function(o) {\n    if (is.arr(o)) return o;\n    if (is.str(o)) o = selectString(o) || o;\n    if (o instanceof NodeList || o instanceof HTMLCollection) return [].slice.call(o);\n    return [o];\n  }\n\n  var arrayContains = function(arr, val) {\n    return arr.some(function(a) { return a === val; });\n  }\n\n  var groupArrayByProps = function(arr, propsArr) {\n    var groups = {};\n    arr.forEach(function(o) {\n      var group = JSON.stringify(propsArr.map(function(p) { return o[p]; }));\n      groups[group] = groups[group] || [];\n      groups[group].push(o);\n    });\n    return Object.keys(groups).map(function(group) {\n      return groups[group];\n    });\n  }\n\n  var removeArrayDuplicates = function(arr) {\n    return arr.filter(function(item, pos, self) {\n      return self.indexOf(item) === pos;\n    });\n  }\n\n  // Objects\n\n  var cloneObject = function(o) {\n    var newObject = {};\n    for (var p in o) newObject[p] = o[p];\n    return newObject;\n  }\n\n  var mergeObjects = function(o1, o2) {\n    for (var p in o2) o1[p] = !is.und(o1[p]) ? o1[p] : o2[p];\n    return o1;\n  }\n\n  // Colors\n\n  var hexToRgb = function(hex) {\n    var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    var hex = hex.replace(rgx, function(m, r, g, b) { return r + r + g + g + b + b; });\n    var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    var r = parseInt(rgb[1], 16);\n    var g = parseInt(rgb[2], 16);\n    var b = parseInt(rgb[3], 16);\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  }\n\n  var hslToRgb = function(hsl) {\n    var hsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(hsl);\n    var h = parseInt(hsl[1]) / 360;\n    var s = parseInt(hsl[2]) / 100;\n    var l = parseInt(hsl[3]) / 100;\n    var hue2rgb = function(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1/6) return p + (q - p) * 6 * t;\n      if (t < 1/2) return q;\n      if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n      return p;\n    }\n    var r, g, b;\n    if (s == 0) {\n      r = g = b = l;\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1/3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1/3);\n    }\n    return 'rgb(' + r * 255 + ',' + g * 255 + ',' + b * 255 + ')';\n  }\n\n  var colorToRgb = function(val) {\n    if (is.rgb(val)) return val;\n    if (is.hex(val)) return hexToRgb(val);\n    if (is.hsl(val)) return hslToRgb(val);\n  }\n\n  // Units\n\n  var getUnit = function(val) {\n    return /([\\+\\-]?[0-9|auto\\.]+)(%|px|pt|em|rem|in|cm|mm|ex|pc|vw|vh|deg)?/.exec(val)[2];\n  }\n\n  var addDefaultTransformUnit = function(prop, val, intialVal) {\n    if (getUnit(val)) return val;\n    if (prop.indexOf('translate') > -1) return getUnit(intialVal) ? val + getUnit(intialVal) : val + 'px';\n    if (prop.indexOf('rotate') > -1 || prop.indexOf('skew') > -1) return val + 'deg';\n    return val;\n  }\n\n  // Values\n\n  var getCSSValue = function(el, prop) {\n    // First check if prop is a valid CSS property\n    if (prop in el.style) {\n      // Then return the property value or fallback to '0' when getPropertyValue fails\n      return getComputedStyle(el).getPropertyValue(stringToHyphens(prop)) || '0';\n    }\n  }\n\n  var getTransformValue = function(el, prop) {\n    var defaultVal = prop.indexOf('scale') > -1 ? 1 : 0;\n    var str = el.style.transform;\n    if (!str) return defaultVal;\n    var rgx = /(\\w+)\\((.+?)\\)/g;\n    var match = [];\n    var props = [];\n    var values = [];\n    while (match = rgx.exec(str)) {\n      props.push(match[1]);\n      values.push(match[2]);\n    }\n    var val = values.filter(function(f, i) { return props[i] === prop; });\n    return val.length ? val[0] : defaultVal;\n  }\n\n  var getAnimationType = function(el, prop) {\n    if ( is.dom(el) && arrayContains(validTransforms, prop)) return 'transform';\n    if ( is.dom(el) && (el.getAttribute(prop) || (is.svg(el) && el[prop]))) return 'attribute';\n    if ( is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) return 'css';\n    if (!is.nul(el[prop]) && !is.und(el[prop])) return 'object';\n  }\n\n  var getInitialTargetValue = function(target, prop) {\n    switch (getAnimationType(target, prop)) {\n      case 'transform': return getTransformValue(target, prop);\n      case 'css': return getCSSValue(target, prop);\n      case 'attribute': return target.getAttribute(prop);\n    }\n    return target[prop] || 0;\n  }\n\n  var getValidValue = function(values, val, originalCSS) {\n    if (is.col(val)) return colorToRgb(val);\n    if (getUnit(val)) return val;\n    var unit = getUnit(values.to) ? getUnit(values.to) : getUnit(values.from);\n    if (!unit && originalCSS) unit = getUnit(originalCSS);\n    return unit ? val + unit : val;\n  }\n\n  var decomposeValue = function(val) {\n    var rgx = /-?\\d*\\.?\\d+/g;\n    return {\n      original: val,\n      numbers: numberToString(val).match(rgx) ? numberToString(val).match(rgx).map(Number) : [0],\n      strings: numberToString(val).split(rgx)\n    }\n  }\n\n  var recomposeValue = function(numbers, strings, initialStrings) {\n    return strings.reduce(function(a, b, i) {\n      var b = (b ? b : initialStrings[i - 1]);\n      return a + numbers[i - 1] + b;\n    });\n  }\n\n  // Animatables\n\n  var getAnimatables = function(targets) {\n    var targets = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : [];\n    return targets.map(function(t, i) {\n      return { target: t, id: i };\n    });\n  }\n\n  // Properties\n\n  var getProperties = function(params, settings) {\n    var props = [];\n    for (var p in params) {\n      if (!defaultSettings.hasOwnProperty(p) && p !== 'targets') {\n        var prop = is.obj(params[p]) ? cloneObject(params[p]) : {value: params[p]};\n        prop.name = p;\n        props.push(mergeObjects(prop, settings));\n      }\n    }\n    return props;\n  }\n\n  var getPropertiesValues = function(target, prop, value, i) {\n    var values = toArray( is.fnc(value) ? value(target, i) : value);\n    return {\n      from: (values.length > 1) ? values[0] : getInitialTargetValue(target, prop),\n      to: (values.length > 1) ? values[1] : values[0]\n    }\n  }\n\n  // Tweens\n\n  var getTweenValues = function(prop, values, type, target) {\n    var valid = {};\n    if (type === 'transform') {\n      valid.from = prop + '(' + addDefaultTransformUnit(prop, values.from, values.to) + ')';\n      valid.to = prop + '(' + addDefaultTransformUnit(prop, values.to) + ')';\n    } else {\n      var originalCSS = (type === 'css') ? getCSSValue(target, prop) : undefined;\n      valid.from = getValidValue(values, values.from, originalCSS);\n      valid.to = getValidValue(values, values.to, originalCSS);\n    }\n    return { from: decomposeValue(valid.from), to: decomposeValue(valid.to) };\n  }\n\n  var getTweensProps = function(animatables, props) {\n    var tweensProps = [];\n    animatables.forEach(function(animatable, i) {\n      var target = animatable.target;\n      return props.forEach(function(prop) {\n        var animType = getAnimationType(target, prop.name);\n        if (animType) {\n          var values = getPropertiesValues(target, prop.name, prop.value, i);\n          var tween = cloneObject(prop);\n          tween.animatables = animatable;\n          tween.type = animType;\n          tween.from = getTweenValues(prop.name, values, tween.type, target).from;\n          tween.to = getTweenValues(prop.name, values, tween.type, target).to;\n          tween.round = (is.col(values.from) || tween.round) ? 1 : 0;\n          tween.delay = (is.fnc(tween.delay) ? tween.delay(target, i, animatables.length) : tween.delay) / animation.speed;\n          tween.duration = (is.fnc(tween.duration) ? tween.duration(target, i, animatables.length) : tween.duration) / animation.speed;\n          tweensProps.push(tween);\n        }\n      });\n    });\n    return tweensProps;\n  }\n\n  var getTweens = function(animatables, props) {\n    var tweensProps = getTweensProps(animatables, props);\n    var splittedProps = groupArrayByProps(tweensProps, ['name', 'from', 'to', 'delay', 'duration']);\n    return splittedProps.map(function(tweenProps) {\n      var tween = cloneObject(tweenProps[0]);\n      tween.animatables = tweenProps.map(function(p) { return p.animatables });\n      tween.totalDuration = tween.delay + tween.duration;\n      return tween;\n    });\n  }\n\n  var reverseTweens = function(anim, delays) {\n    anim.tweens.forEach(function(tween) {\n      var toVal = tween.to;\n      var fromVal = tween.from;\n      var delayVal = anim.duration - (tween.delay + tween.duration);\n      tween.from = toVal;\n      tween.to = fromVal;\n      if (delays) tween.delay = delayVal;\n    });\n    anim.reversed = anim.reversed ? false : true;\n  }\n\n  var getTweensDuration = function(tweens) {\n    return Math.max.apply(Math, tweens.map(function(tween){ return tween.totalDuration; }));\n  }\n\n  var getTweensDelay = function(tweens) {\n    return Math.min.apply(Math, tweens.map(function(tween){ return tween.delay; }));\n  }\n\n  // will-change\n\n  var getWillChange = function(anim) {\n    var props = [];\n    var els = [];\n    anim.tweens.forEach(function(tween) {\n      if (tween.type === 'css' || tween.type === 'transform' ) {\n        props.push(tween.type === 'css' ? stringToHyphens(tween.name) : 'transform');\n        tween.animatables.forEach(function(animatable) { els.push(animatable.target); });\n      }\n    });\n    return {\n      properties: removeArrayDuplicates(props).join(', '),\n      elements: removeArrayDuplicates(els)\n    }\n  }\n\n  var setWillChange = function(anim) {\n    var willChange = getWillChange(anim);\n    willChange.elements.forEach(function(element) {\n      element.style.willChange = willChange.properties;\n    });\n  }\n\n  var removeWillChange = function(anim) {\n    var willChange = getWillChange(anim);\n    willChange.elements.forEach(function(element) {\n      element.style.removeProperty('will-change');\n    });\n  }\n\n  /* Svg path */\n\n  var getPathProps = function(path) {\n    var el = is.str(path) ? selectString(path)[0] : path;\n    return {\n      path: el,\n      value: el.getTotalLength()\n    }\n  }\n\n  var snapProgressToPath = function(tween, progress) {\n    var pathEl = tween.path;\n    var pathProgress = tween.value * progress;\n    var point = function(offset) {\n      var o = offset || 0;\n      var p = progress > 1 ? tween.value + o : pathProgress + o;\n      return pathEl.getPointAtLength(p);\n    }\n    var p = point();\n    var p0 = point(-1);\n    var p1 = point(+1);\n    switch (tween.name) {\n      case 'translateX': return p.x;\n      case 'translateY': return p.y;\n      case 'rotate': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;\n    }\n  }\n\n  // Progress\n\n  var getTweenProgress = function(tween, time) {\n    var elapsed = Math.min(Math.max(time - tween.delay, 0), tween.duration);\n    var percent = elapsed / tween.duration;\n    var progress = tween.to.numbers.map(function(number, p) {\n      var start = tween.from.numbers[p];\n      var eased = easings[tween.easing](percent, tween.elasticity);\n      var val = tween.path ? snapProgressToPath(tween, eased) : start + eased * (number - start);\n      val = tween.round ? Math.round(val * tween.round) / tween.round : val;\n      return val;\n    });\n    return recomposeValue(progress, tween.to.strings, tween.from.strings);\n  }\n\n  var setAnimationProgress = function(anim, time) {\n    var transforms;\n    anim.currentTime = time;\n    anim.progress = (time / anim.duration) * 100;\n    for (var t = 0; t < anim.tweens.length; t++) {\n      var tween = anim.tweens[t];\n      tween.currentValue = getTweenProgress(tween, time);\n      var progress = tween.currentValue;\n      for (var a = 0; a < tween.animatables.length; a++) {\n        var animatable = tween.animatables[a];\n        var id = animatable.id;\n        var target = animatable.target;\n        var name = tween.name;\n        switch (tween.type) {\n          case 'css': target.style[name] = progress; break;\n          case 'attribute': target.setAttribute(name, progress); break;\n          case 'object': target[name] = progress; break;\n          case 'transform':\n          if (!transforms) transforms = {};\n          if (!transforms[id]) transforms[id] = [];\n          transforms[id].push(progress);\n          break;\n        }\n      }\n    }\n    if (transforms) {\n      if (!transform) transform = (getCSSValue(document.body, transformStr) ? '' : '-webkit-') + transformStr;\n      for (var t in transforms) {\n        anim.animatables[t].target.style[transform] = transforms[t].join(' ');\n      }\n    }\n  }\n\n  // Animation\n\n  var createAnimation = function(params) {\n    var anim = {};\n    anim.animatables = getAnimatables(params.targets);\n    anim.settings = mergeObjects(params, defaultSettings);\n    anim.properties = getProperties(params, anim.settings);\n    anim.tweens = getTweens(anim.animatables, anim.properties);\n    anim.duration = anim.tweens.length ? getTweensDuration(anim.tweens) : params.duration;\n    anim.delay = anim.tweens.length ? getTweensDelay(anim.tweens) : params.delay;\n    anim.currentTime = 0;\n    anim.progress = 0;\n    anim.ended = false;\n    return anim;\n  }\n\n  // Public\n\n  var animations = [];\n  var raf = 0;\n\n  var engine = (function() {\n    var play = function() { raf = requestAnimationFrame(step); };\n    var step = function(t) {\n      if (animations.length) {\n        for (var i = 0; i < animations.length; i++) animations[i].tick(t);\n        play();\n      } else {\n        cancelAnimationFrame(raf);\n        raf = 0;\n      }\n    }\n    return play;\n  })();\n\n  var animation = function(params) {\n\n    var anim = createAnimation(params);\n    var time = {};\n\n    anim.tick = function(now) {\n      anim.ended = false;\n      if (!time.start) time.start = now;\n      time.current = Math.min(Math.max(time.last + now - time.start, 0), anim.duration);\n      setAnimationProgress(anim, time.current);\n      var s = anim.settings;\n      if (time.current >= anim.delay) {\n        if (s.begin) s.begin(anim); s.begin = undefined;\n        if (s.update) s.update(anim);\n      }\n      if (time.current >= anim.duration) {\n        if (s.loop) {\n          time.start = now;\n          if (s.direction === 'alternate') reverseTweens(anim, true);\n          if (is.num(s.loop)) s.loop--;\n        } else {\n          anim.ended = true;\n          anim.pause();\n          if (s.complete) s.complete(anim);\n        }\n        time.last = 0;\n      }\n    }\n\n    anim.seek = function(progress) {\n      setAnimationProgress(anim, (progress / 100) * anim.duration);\n    }\n\n    anim.pause = function() {\n      removeWillChange(anim);\n      var i = animations.indexOf(anim);\n      if (i > -1) animations.splice(i, 1);\n    }\n\n    anim.play = function(params) {\n      anim.pause();\n      if (params) anim = mergeObjects(createAnimation(mergeObjects(params, anim.settings)), anim);\n      time.start = 0;\n      time.last = anim.ended ? 0 : anim.currentTime;\n      var s = anim.settings;\n      if (s.direction === 'reverse') reverseTweens(anim);\n      if (s.direction === 'alternate' && !s.loop) s.loop = 1;\n      setWillChange(anim);\n      animations.push(anim);\n      if (!raf) engine();\n    }\n\n    anim.restart = function() {\n      if (anim.reversed) reverseTweens(anim);\n      anim.pause();\n      anim.seek(0);\n      anim.play();\n    }\n\n    if (anim.settings.autoplay) anim.play();\n\n    return anim;\n\n  }\n\n  // Remove one or multiple targets from all active animations.\n\n  var remove = function(elements) {\n    var targets = flattenArray(is.arr(elements) ? elements.map(toArray) : toArray(elements));\n    for (var i = animations.length-1; i >= 0; i--) {\n      var animation = animations[i];\n      var tweens = animation.tweens;\n      for (var t = tweens.length-1; t >= 0; t--) {\n        var animatables = tweens[t].animatables;\n        for (var a = animatables.length-1; a >= 0; a--) {\n          if (arrayContains(targets, animatables[a].target)) {\n            animatables.splice(a, 1);\n            if (!animatables.length) tweens.splice(t, 1);\n            if (!tweens.length) animation.pause();\n          }\n        }\n      }\n    }\n  }\n\n  animation.version = version;\n  animation.speed = 1;\n  animation.list = animations;\n  animation.remove = remove;\n  animation.easings = easings;\n  animation.getValue = getInitialTargetValue;\n  animation.path = getPathProps;\n  animation.random = random;\n\n  return animation;\n\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ "../node_modules/d/index.js":
/* unknown exports provided */
/* all exports used */
/*!***********************!*\
  !*** ../~/d/index.js ***!
  \***********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assign        = __webpack_require__(/*! es5-ext/object/assign */ \"../node_modules/es5-ext/object/assign/index.js\")\n  , normalizeOpts = __webpack_require__(/*! es5-ext/object/normalize-options */ \"../node_modules/es5-ext/object/normalize-options.js\")\n  , isCallable    = __webpack_require__(/*! es5-ext/object/is-callable */ \"../node_modules/es5-ext/object/is-callable.js\")\n  , contains      = __webpack_require__(/*! es5-ext/string/#/contains */ \"../node_modules/es5-ext/string/#/contains/index.js\")\n\n  , d;\n\nd = module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif ((arguments.length < 2) || (typeof dscr !== 'string')) {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (dscr == null) {\n\t\tc = w = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t\tw = contains.call(dscr, 'w');\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== 'string') {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (get == null) {\n\t\tget = undefined;\n\t} else if (!isCallable(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (set == null) {\n\t\tset = undefined;\n\t} else if (!isCallable(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (dscr == null) {\n\t\tc = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2QvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9kL2luZGV4LmpzP2FhZjYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYXNzaWduICAgICAgICA9IHJlcXVpcmUoJ2VzNS1leHQvb2JqZWN0L2Fzc2lnbicpXG4gICwgbm9ybWFsaXplT3B0cyA9IHJlcXVpcmUoJ2VzNS1leHQvb2JqZWN0L25vcm1hbGl6ZS1vcHRpb25zJylcbiAgLCBpc0NhbGxhYmxlICAgID0gcmVxdWlyZSgnZXM1LWV4dC9vYmplY3QvaXMtY2FsbGFibGUnKVxuICAsIGNvbnRhaW5zICAgICAgPSByZXF1aXJlKCdlczUtZXh0L3N0cmluZy8jL2NvbnRhaW5zJylcblxuICAsIGQ7XG5cbmQgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChkc2NyLCB2YWx1ZS8qLCBvcHRpb25zKi8pIHtcblx0dmFyIGMsIGUsIHcsIG9wdGlvbnMsIGRlc2M7XG5cdGlmICgoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHx8ICh0eXBlb2YgZHNjciAhPT0gJ3N0cmluZycpKSB7XG5cdFx0b3B0aW9ucyA9IHZhbHVlO1xuXHRcdHZhbHVlID0gZHNjcjtcblx0XHRkc2NyID0gbnVsbDtcblx0fSBlbHNlIHtcblx0XHRvcHRpb25zID0gYXJndW1lbnRzWzJdO1xuXHR9XG5cdGlmIChkc2NyID09IG51bGwpIHtcblx0XHRjID0gdyA9IHRydWU7XG5cdFx0ZSA9IGZhbHNlO1xuXHR9IGVsc2Uge1xuXHRcdGMgPSBjb250YWlucy5jYWxsKGRzY3IsICdjJyk7XG5cdFx0ZSA9IGNvbnRhaW5zLmNhbGwoZHNjciwgJ2UnKTtcblx0XHR3ID0gY29udGFpbnMuY2FsbChkc2NyLCAndycpO1xuXHR9XG5cblx0ZGVzYyA9IHsgdmFsdWU6IHZhbHVlLCBjb25maWd1cmFibGU6IGMsIGVudW1lcmFibGU6IGUsIHdyaXRhYmxlOiB3IH07XG5cdHJldHVybiAhb3B0aW9ucyA/IGRlc2MgOiBhc3NpZ24obm9ybWFsaXplT3B0cyhvcHRpb25zKSwgZGVzYyk7XG59O1xuXG5kLmdzID0gZnVuY3Rpb24gKGRzY3IsIGdldCwgc2V0LyosIG9wdGlvbnMqLykge1xuXHR2YXIgYywgZSwgb3B0aW9ucywgZGVzYztcblx0aWYgKHR5cGVvZiBkc2NyICE9PSAnc3RyaW5nJykge1xuXHRcdG9wdGlvbnMgPSBzZXQ7XG5cdFx0c2V0ID0gZ2V0O1xuXHRcdGdldCA9IGRzY3I7XG5cdFx0ZHNjciA9IG51bGw7XG5cdH0gZWxzZSB7XG5cdFx0b3B0aW9ucyA9IGFyZ3VtZW50c1szXTtcblx0fVxuXHRpZiAoZ2V0ID09IG51bGwpIHtcblx0XHRnZXQgPSB1bmRlZmluZWQ7XG5cdH0gZWxzZSBpZiAoIWlzQ2FsbGFibGUoZ2V0KSkge1xuXHRcdG9wdGlvbnMgPSBnZXQ7XG5cdFx0Z2V0ID0gc2V0ID0gdW5kZWZpbmVkO1xuXHR9IGVsc2UgaWYgKHNldCA9PSBudWxsKSB7XG5cdFx0c2V0ID0gdW5kZWZpbmVkO1xuXHR9IGVsc2UgaWYgKCFpc0NhbGxhYmxlKHNldCkpIHtcblx0XHRvcHRpb25zID0gc2V0O1xuXHRcdHNldCA9IHVuZGVmaW5lZDtcblx0fVxuXHRpZiAoZHNjciA9PSBudWxsKSB7XG5cdFx0YyA9IHRydWU7XG5cdFx0ZSA9IGZhbHNlO1xuXHR9IGVsc2Uge1xuXHRcdGMgPSBjb250YWlucy5jYWxsKGRzY3IsICdjJyk7XG5cdFx0ZSA9IGNvbnRhaW5zLmNhbGwoZHNjciwgJ2UnKTtcblx0fVxuXG5cdGRlc2MgPSB7IGdldDogZ2V0LCBzZXQ6IHNldCwgY29uZmlndXJhYmxlOiBjLCBlbnVtZXJhYmxlOiBlIH07XG5cdHJldHVybiAhb3B0aW9ucyA/IGRlc2MgOiBhc3NpZ24obm9ybWFsaXplT3B0cyhvcHRpb25zKSwgZGVzYyk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi9kL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvZC9pbmRleC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/es5-ext/array/from/index.js":
/* unknown exports provided */
/* all exports used */
/*!****************************************!*\
  !*** ../~/es5-ext/array/from/index.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = __webpack_require__(/*! ./is-implemented */ \"../node_modules/es5-ext/array/from/is-implemented.js\")()\n\t? Array.from\n\t: __webpack_require__(/*! ./shim */ \"../node_modules/es5-ext/array/from/shim.js\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvYXJyYXkvZnJvbS9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L2VzNS1leHQvYXJyYXkvZnJvbS9pbmRleC5qcz9lOTQ0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2lzLWltcGxlbWVudGVkJykoKVxuXHQ/IEFycmF5LmZyb21cblx0OiByZXF1aXJlKCcuL3NoaW0nKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXM1LWV4dC9hcnJheS9mcm9tL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvZXM1LWV4dC9hcnJheS9mcm9tL2luZGV4LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/es5-ext/array/from/is-implemented.js":
/* unknown exports provided */
/* all exports used */
/*!*************************************************!*\
  !*** ../~/es5-ext/array/from/is-implemented.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function () {\n\tvar from = Array.from, arr, result;\n\tif (typeof from !== 'function') return false;\n\tarr = ['raz', 'dwa'];\n\tresult = from(arr);\n\treturn Boolean(result && (result !== arr) && (result[1] === 'dwa'));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvYXJyYXkvZnJvbS9pcy1pbXBsZW1lbnRlZC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L2VzNS1leHQvYXJyYXkvZnJvbS9pcy1pbXBsZW1lbnRlZC5qcz80YjQ1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cdHZhciBmcm9tID0gQXJyYXkuZnJvbSwgYXJyLCByZXN1bHQ7XG5cdGlmICh0eXBlb2YgZnJvbSAhPT0gJ2Z1bmN0aW9uJykgcmV0dXJuIGZhbHNlO1xuXHRhcnIgPSBbJ3JheicsICdkd2EnXTtcblx0cmVzdWx0ID0gZnJvbShhcnIpO1xuXHRyZXR1cm4gQm9vbGVhbihyZXN1bHQgJiYgKHJlc3VsdCAhPT0gYXJyKSAmJiAocmVzdWx0WzFdID09PSAnZHdhJykpO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXM1LWV4dC9hcnJheS9mcm9tL2lzLWltcGxlbWVudGVkLmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvZXM1LWV4dC9hcnJheS9mcm9tL2lzLWltcGxlbWVudGVkLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/es5-ext/array/from/shim.js":
/* unknown exports provided */
/* all exports used */
/*!***************************************!*\
  !*** ../~/es5-ext/array/from/shim.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar iteratorSymbol = __webpack_require__(/*! es6-symbol */ \"../node_modules/es6-symbol/index.js\").iterator\n  , isArguments    = __webpack_require__(/*! ../../function/is-arguments */ \"../node_modules/es5-ext/function/is-arguments.js\")\n  , isFunction     = __webpack_require__(/*! ../../function/is-function */ \"../node_modules/es5-ext/function/is-function.js\")\n  , toPosInt       = __webpack_require__(/*! ../../number/to-pos-integer */ \"../node_modules/es5-ext/number/to-pos-integer.js\")\n  , callable       = __webpack_require__(/*! ../../object/valid-callable */ \"../node_modules/es5-ext/object/valid-callable.js\")\n  , validValue     = __webpack_require__(/*! ../../object/valid-value */ \"../node_modules/es5-ext/object/valid-value.js\")\n  , isString       = __webpack_require__(/*! ../../string/is-string */ \"../node_modules/es5-ext/string/is-string.js\")\n\n  , isArray = Array.isArray, call = Function.prototype.call\n  , desc = { configurable: true, enumerable: true, writable: true, value: null }\n  , defineProperty = Object.defineProperty;\n\nmodule.exports = function (arrayLike/*, mapFn, thisArg*/) {\n\tvar mapFn = arguments[1], thisArg = arguments[2], Constructor, i, j, arr, l, code, iterator\n\t  , result, getIterator, value;\n\n\tarrayLike = Object(validValue(arrayLike));\n\n\tif (mapFn != null) callable(mapFn);\n\tif (!this || (this === Array) || !isFunction(this)) {\n\t\t// Result: Plain array\n\t\tif (!mapFn) {\n\t\t\tif (isArguments(arrayLike)) {\n\t\t\t\t// Source: Arguments\n\t\t\t\tl = arrayLike.length;\n\t\t\t\tif (l !== 1) return Array.apply(null, arrayLike);\n\t\t\t\tarr = new Array(1);\n\t\t\t\tarr[0] = arrayLike[0];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (isArray(arrayLike)) {\n\t\t\t\t// Source: Array\n\t\t\t\tarr = new Array(l = arrayLike.length);\n\t\t\t\tfor (i = 0; i < l; ++i) arr[i] = arrayLike[i];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t}\n\t\tarr = [];\n\t} else {\n\t\t// Result: Non plain array\n\t\tConstructor = this;\n\t}\n\n\tif (!isArray(arrayLike)) {\n\t\tif ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n\t\t\t// Source: Iterator\n\t\t\titerator = callable(getIterator).call(arrayLike);\n\t\t\tif (Constructor) arr = new Constructor();\n\t\t\tresult = iterator.next();\n\t\t\ti = 0;\n\t\t\twhile (!result.done) {\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n\t\t\t\tif (!Constructor) {\n\t\t\t\t\tarr[i] = value;\n\t\t\t\t} else {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t}\n\t\t\t\tresult = iterator.next();\n\t\t\t\t++i;\n\t\t\t}\n\t\t\tl = i;\n\t\t} else if (isString(arrayLike)) {\n\t\t\t// Source: String\n\t\t\tl = arrayLike.length;\n\t\t\tif (Constructor) arr = new Constructor();\n\t\t\tfor (i = 0, j = 0; i < l; ++i) {\n\t\t\t\tvalue = arrayLike[i];\n\t\t\t\tif ((i + 1) < l) {\n\t\t\t\t\tcode = value.charCodeAt(0);\n\t\t\t\t\tif ((code >= 0xD800) && (code <= 0xDBFF)) value += arrayLike[++i];\n\t\t\t\t}\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n\t\t\t\tif (!Constructor) {\n\t\t\t\t\tarr[j] = value;\n\t\t\t\t} else {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, j, desc);\n\t\t\t\t}\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tl = j;\n\t\t}\n\t}\n\tif (l === undefined) {\n\t\t// Source: array or array-like\n\t\tl = toPosInt(arrayLike.length);\n\t\tif (Constructor) arr = new Constructor(l);\n\t\tfor (i = 0; i < l; ++i) {\n\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n\t\t\tif (!Constructor) {\n\t\t\t\tarr[i] = value;\n\t\t\t} else {\n\t\t\t\tdesc.value = value;\n\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t}\n\t\t}\n\t}\n\tif (Constructor) {\n\t\tdesc.value = null;\n\t\tarr.length = l;\n\t}\n\treturn arr;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvYXJyYXkvZnJvbS9zaGltLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXM1LWV4dC9hcnJheS9mcm9tL3NoaW0uanM/NGIwMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpdGVyYXRvclN5bWJvbCA9IHJlcXVpcmUoJ2VzNi1zeW1ib2wnKS5pdGVyYXRvclxuICAsIGlzQXJndW1lbnRzICAgID0gcmVxdWlyZSgnLi4vLi4vZnVuY3Rpb24vaXMtYXJndW1lbnRzJylcbiAgLCBpc0Z1bmN0aW9uICAgICA9IHJlcXVpcmUoJy4uLy4uL2Z1bmN0aW9uL2lzLWZ1bmN0aW9uJylcbiAgLCB0b1Bvc0ludCAgICAgICA9IHJlcXVpcmUoJy4uLy4uL251bWJlci90by1wb3MtaW50ZWdlcicpXG4gICwgY2FsbGFibGUgICAgICAgPSByZXF1aXJlKCcuLi8uLi9vYmplY3QvdmFsaWQtY2FsbGFibGUnKVxuICAsIHZhbGlkVmFsdWUgICAgID0gcmVxdWlyZSgnLi4vLi4vb2JqZWN0L3ZhbGlkLXZhbHVlJylcbiAgLCBpc1N0cmluZyAgICAgICA9IHJlcXVpcmUoJy4uLy4uL3N0cmluZy9pcy1zdHJpbmcnKVxuXG4gICwgaXNBcnJheSA9IEFycmF5LmlzQXJyYXksIGNhbGwgPSBGdW5jdGlvbi5wcm90b3R5cGUuY2FsbFxuICAsIGRlc2MgPSB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlOiBudWxsIH1cbiAgLCBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXJyYXlMaWtlLyosIG1hcEZuLCB0aGlzQXJnKi8pIHtcblx0dmFyIG1hcEZuID0gYXJndW1lbnRzWzFdLCB0aGlzQXJnID0gYXJndW1lbnRzWzJdLCBDb25zdHJ1Y3RvciwgaSwgaiwgYXJyLCBsLCBjb2RlLCBpdGVyYXRvclxuXHQgICwgcmVzdWx0LCBnZXRJdGVyYXRvciwgdmFsdWU7XG5cblx0YXJyYXlMaWtlID0gT2JqZWN0KHZhbGlkVmFsdWUoYXJyYXlMaWtlKSk7XG5cblx0aWYgKG1hcEZuICE9IG51bGwpIGNhbGxhYmxlKG1hcEZuKTtcblx0aWYgKCF0aGlzIHx8ICh0aGlzID09PSBBcnJheSkgfHwgIWlzRnVuY3Rpb24odGhpcykpIHtcblx0XHQvLyBSZXN1bHQ6IFBsYWluIGFycmF5XG5cdFx0aWYgKCFtYXBGbikge1xuXHRcdFx0aWYgKGlzQXJndW1lbnRzKGFycmF5TGlrZSkpIHtcblx0XHRcdFx0Ly8gU291cmNlOiBBcmd1bWVudHNcblx0XHRcdFx0bCA9IGFycmF5TGlrZS5sZW5ndGg7XG5cdFx0XHRcdGlmIChsICE9PSAxKSByZXR1cm4gQXJyYXkuYXBwbHkobnVsbCwgYXJyYXlMaWtlKTtcblx0XHRcdFx0YXJyID0gbmV3IEFycmF5KDEpO1xuXHRcdFx0XHRhcnJbMF0gPSBhcnJheUxpa2VbMF07XG5cdFx0XHRcdHJldHVybiBhcnI7XG5cdFx0XHR9XG5cdFx0XHRpZiAoaXNBcnJheShhcnJheUxpa2UpKSB7XG5cdFx0XHRcdC8vIFNvdXJjZTogQXJyYXlcblx0XHRcdFx0YXJyID0gbmV3IEFycmF5KGwgPSBhcnJheUxpa2UubGVuZ3RoKTtcblx0XHRcdFx0Zm9yIChpID0gMDsgaSA8IGw7ICsraSkgYXJyW2ldID0gYXJyYXlMaWtlW2ldO1xuXHRcdFx0XHRyZXR1cm4gYXJyO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRhcnIgPSBbXTtcblx0fSBlbHNlIHtcblx0XHQvLyBSZXN1bHQ6IE5vbiBwbGFpbiBhcnJheVxuXHRcdENvbnN0cnVjdG9yID0gdGhpcztcblx0fVxuXG5cdGlmICghaXNBcnJheShhcnJheUxpa2UpKSB7XG5cdFx0aWYgKChnZXRJdGVyYXRvciA9IGFycmF5TGlrZVtpdGVyYXRvclN5bWJvbF0pICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdC8vIFNvdXJjZTogSXRlcmF0b3Jcblx0XHRcdGl0ZXJhdG9yID0gY2FsbGFibGUoZ2V0SXRlcmF0b3IpLmNhbGwoYXJyYXlMaWtlKTtcblx0XHRcdGlmIChDb25zdHJ1Y3RvcikgYXJyID0gbmV3IENvbnN0cnVjdG9yKCk7XG5cdFx0XHRyZXN1bHQgPSBpdGVyYXRvci5uZXh0KCk7XG5cdFx0XHRpID0gMDtcblx0XHRcdHdoaWxlICghcmVzdWx0LmRvbmUpIHtcblx0XHRcdFx0dmFsdWUgPSBtYXBGbiA/IGNhbGwuY2FsbChtYXBGbiwgdGhpc0FyZywgcmVzdWx0LnZhbHVlLCBpKSA6IHJlc3VsdC52YWx1ZTtcblx0XHRcdFx0aWYgKCFDb25zdHJ1Y3Rvcikge1xuXHRcdFx0XHRcdGFycltpXSA9IHZhbHVlO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGRlc2MudmFsdWUgPSB2YWx1ZTtcblx0XHRcdFx0XHRkZWZpbmVQcm9wZXJ0eShhcnIsIGksIGRlc2MpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJlc3VsdCA9IGl0ZXJhdG9yLm5leHQoKTtcblx0XHRcdFx0KytpO1xuXHRcdFx0fVxuXHRcdFx0bCA9IGk7XG5cdFx0fSBlbHNlIGlmIChpc1N0cmluZyhhcnJheUxpa2UpKSB7XG5cdFx0XHQvLyBTb3VyY2U6IFN0cmluZ1xuXHRcdFx0bCA9IGFycmF5TGlrZS5sZW5ndGg7XG5cdFx0XHRpZiAoQ29uc3RydWN0b3IpIGFyciA9IG5ldyBDb25zdHJ1Y3RvcigpO1xuXHRcdFx0Zm9yIChpID0gMCwgaiA9IDA7IGkgPCBsOyArK2kpIHtcblx0XHRcdFx0dmFsdWUgPSBhcnJheUxpa2VbaV07XG5cdFx0XHRcdGlmICgoaSArIDEpIDwgbCkge1xuXHRcdFx0XHRcdGNvZGUgPSB2YWx1ZS5jaGFyQ29kZUF0KDApO1xuXHRcdFx0XHRcdGlmICgoY29kZSA+PSAweEQ4MDApICYmIChjb2RlIDw9IDB4REJGRikpIHZhbHVlICs9IGFycmF5TGlrZVsrK2ldO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHZhbHVlID0gbWFwRm4gPyBjYWxsLmNhbGwobWFwRm4sIHRoaXNBcmcsIHZhbHVlLCBqKSA6IHZhbHVlO1xuXHRcdFx0XHRpZiAoIUNvbnN0cnVjdG9yKSB7XG5cdFx0XHRcdFx0YXJyW2pdID0gdmFsdWU7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZGVzYy52YWx1ZSA9IHZhbHVlO1xuXHRcdFx0XHRcdGRlZmluZVByb3BlcnR5KGFyciwgaiwgZGVzYyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0KytqO1xuXHRcdFx0fVxuXHRcdFx0bCA9IGo7XG5cdFx0fVxuXHR9XG5cdGlmIChsID09PSB1bmRlZmluZWQpIHtcblx0XHQvLyBTb3VyY2U6IGFycmF5IG9yIGFycmF5LWxpa2Vcblx0XHRsID0gdG9Qb3NJbnQoYXJyYXlMaWtlLmxlbmd0aCk7XG5cdFx0aWYgKENvbnN0cnVjdG9yKSBhcnIgPSBuZXcgQ29uc3RydWN0b3IobCk7XG5cdFx0Zm9yIChpID0gMDsgaSA8IGw7ICsraSkge1xuXHRcdFx0dmFsdWUgPSBtYXBGbiA/IGNhbGwuY2FsbChtYXBGbiwgdGhpc0FyZywgYXJyYXlMaWtlW2ldLCBpKSA6IGFycmF5TGlrZVtpXTtcblx0XHRcdGlmICghQ29uc3RydWN0b3IpIHtcblx0XHRcdFx0YXJyW2ldID0gdmFsdWU7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRkZXNjLnZhbHVlID0gdmFsdWU7XG5cdFx0XHRcdGRlZmluZVByb3BlcnR5KGFyciwgaSwgZGVzYyk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdGlmIChDb25zdHJ1Y3Rvcikge1xuXHRcdGRlc2MudmFsdWUgPSBudWxsO1xuXHRcdGFyci5sZW5ndGggPSBsO1xuXHR9XG5cdHJldHVybiBhcnI7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi9lczUtZXh0L2FycmF5L2Zyb20vc2hpbS5qc1xuLy8gbW9kdWxlIGlkID0gLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvYXJyYXkvZnJvbS9zaGltLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "../node_modules/es5-ext/function/is-arguments.js":
/* unknown exports provided */
/* all exports used */
/*!*********************************************!*\
  !*** ../~/es5-ext/function/is-arguments.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar toString = Object.prototype.toString\n\n  , id = toString.call((function () { return arguments; }()));\n\nmodule.exports = function (x) { return (toString.call(x) === id); };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvZnVuY3Rpb24vaXMtYXJndW1lbnRzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXM1LWV4dC9mdW5jdGlvbi9pcy1hcmd1bWVudHMuanM/NzA2MSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdcblxuICAsIGlkID0gdG9TdHJpbmcuY2FsbCgoZnVuY3Rpb24gKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoeCkgeyByZXR1cm4gKHRvU3RyaW5nLmNhbGwoeCkgPT09IGlkKTsgfTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXM1LWV4dC9mdW5jdGlvbi9pcy1hcmd1bWVudHMuanNcbi8vIG1vZHVsZSBpZCA9IC4uL25vZGVfbW9kdWxlcy9lczUtZXh0L2Z1bmN0aW9uL2lzLWFyZ3VtZW50cy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/es5-ext/function/is-function.js":
/* unknown exports provided */
/* all exports used */
/*!********************************************!*\
  !*** ../~/es5-ext/function/is-function.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar toString = Object.prototype.toString\n\n  , id = toString.call(__webpack_require__(/*! ./noop */ \"../node_modules/es5-ext/function/noop.js\"));\n\nmodule.exports = function (f) {\n\treturn (typeof f === \"function\") && (toString.call(f) === id);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvZnVuY3Rpb24vaXMtZnVuY3Rpb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9lczUtZXh0L2Z1bmN0aW9uL2lzLWZ1bmN0aW9uLmpzPzkwNjEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nXG5cbiAgLCBpZCA9IHRvU3RyaW5nLmNhbGwocmVxdWlyZSgnLi9ub29wJykpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmKSB7XG5cdHJldHVybiAodHlwZW9mIGYgPT09IFwiZnVuY3Rpb25cIikgJiYgKHRvU3RyaW5nLmNhbGwoZikgPT09IGlkKTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L2VzNS1leHQvZnVuY3Rpb24vaXMtZnVuY3Rpb24uanNcbi8vIG1vZHVsZSBpZCA9IC4uL25vZGVfbW9kdWxlcy9lczUtZXh0L2Z1bmN0aW9uL2lzLWZ1bmN0aW9uLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/es5-ext/function/noop.js":
/* unknown exports provided */
/* all exports used */
/*!*************************************!*\
  !*** ../~/es5-ext/function/noop.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function () {};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvZnVuY3Rpb24vbm9vcC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L2VzNS1leHQvZnVuY3Rpb24vbm9vcC5qcz8wNjYyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7fTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXM1LWV4dC9mdW5jdGlvbi9ub29wLmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvZXM1LWV4dC9mdW5jdGlvbi9ub29wLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/es5-ext/math/sign/index.js":
/* unknown exports provided */
/* all exports used */
/*!***************************************!*\
  !*** ../~/es5-ext/math/sign/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = __webpack_require__(/*! ./is-implemented */ \"../node_modules/es5-ext/math/sign/is-implemented.js\")()\n\t? Math.sign\n\t: __webpack_require__(/*! ./shim */ \"../node_modules/es5-ext/math/sign/shim.js\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvbWF0aC9zaWduL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXM1LWV4dC9tYXRoL3NpZ24vaW5kZXguanM/Y2EzMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9pcy1pbXBsZW1lbnRlZCcpKClcblx0PyBNYXRoLnNpZ25cblx0OiByZXF1aXJlKCcuL3NoaW0nKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXM1LWV4dC9tYXRoL3NpZ24vaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IC4uL25vZGVfbW9kdWxlcy9lczUtZXh0L21hdGgvc2lnbi9pbmRleC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "../node_modules/es5-ext/math/sign/is-implemented.js":
/* unknown exports provided */
/* all exports used */
/*!************************************************!*\
  !*** ../~/es5-ext/math/sign/is-implemented.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function () {\n\tvar sign = Math.sign;\n\tif (typeof sign !== 'function') return false;\n\treturn ((sign(10) === 1) && (sign(-20) === -1));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvbWF0aC9zaWduL2lzLWltcGxlbWVudGVkLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXM1LWV4dC9tYXRoL3NpZ24vaXMtaW1wbGVtZW50ZWQuanM/ZjAwNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuXHR2YXIgc2lnbiA9IE1hdGguc2lnbjtcblx0aWYgKHR5cGVvZiBzaWduICE9PSAnZnVuY3Rpb24nKSByZXR1cm4gZmFsc2U7XG5cdHJldHVybiAoKHNpZ24oMTApID09PSAxKSAmJiAoc2lnbigtMjApID09PSAtMSkpO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXM1LWV4dC9tYXRoL3NpZ24vaXMtaW1wbGVtZW50ZWQuanNcbi8vIG1vZHVsZSBpZCA9IC4uL25vZGVfbW9kdWxlcy9lczUtZXh0L21hdGgvc2lnbi9pcy1pbXBsZW1lbnRlZC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/es5-ext/math/sign/shim.js":
/* unknown exports provided */
/* all exports used */
/*!**************************************!*\
  !*** ../~/es5-ext/math/sign/shim.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function (value) {\n\tvalue = Number(value);\n\tif (isNaN(value) || (value === 0)) return value;\n\treturn (value > 0) ? 1 : -1;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvbWF0aC9zaWduL3NoaW0uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9lczUtZXh0L21hdGgvc2lnbi9zaGltLmpzP2QxNGIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuXHR2YWx1ZSA9IE51bWJlcih2YWx1ZSk7XG5cdGlmIChpc05hTih2YWx1ZSkgfHwgKHZhbHVlID09PSAwKSkgcmV0dXJuIHZhbHVlO1xuXHRyZXR1cm4gKHZhbHVlID4gMCkgPyAxIDogLTE7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi9lczUtZXh0L21hdGgvc2lnbi9zaGltLmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvZXM1LWV4dC9tYXRoL3NpZ24vc2hpbS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/es5-ext/number/to-integer.js":
/* unknown exports provided */
/* all exports used */
/*!*****************************************!*\
  !*** ../~/es5-ext/number/to-integer.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar sign = __webpack_require__(/*! ../math/sign */ \"../node_modules/es5-ext/math/sign/index.js\")\n\n  , abs = Math.abs, floor = Math.floor;\n\nmodule.exports = function (value) {\n\tif (isNaN(value)) return 0;\n\tvalue = Number(value);\n\tif ((value === 0) || !isFinite(value)) return value;\n\treturn sign(value) * floor(abs(value));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvbnVtYmVyL3RvLWludGVnZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9lczUtZXh0L251bWJlci90by1pbnRlZ2VyLmpzPzY5ZjUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgc2lnbiA9IHJlcXVpcmUoJy4uL21hdGgvc2lnbicpXG5cbiAgLCBhYnMgPSBNYXRoLmFicywgZmxvb3IgPSBNYXRoLmZsb29yO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuXHRpZiAoaXNOYU4odmFsdWUpKSByZXR1cm4gMDtcblx0dmFsdWUgPSBOdW1iZXIodmFsdWUpO1xuXHRpZiAoKHZhbHVlID09PSAwKSB8fCAhaXNGaW5pdGUodmFsdWUpKSByZXR1cm4gdmFsdWU7XG5cdHJldHVybiBzaWduKHZhbHVlKSAqIGZsb29yKGFicyh2YWx1ZSkpO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXM1LWV4dC9udW1iZXIvdG8taW50ZWdlci5qc1xuLy8gbW9kdWxlIGlkID0gLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvbnVtYmVyL3RvLWludGVnZXIuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "../node_modules/es5-ext/number/to-pos-integer.js":
/* unknown exports provided */
/* all exports used */
/*!*********************************************!*\
  !*** ../~/es5-ext/number/to-pos-integer.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar toInteger = __webpack_require__(/*! ./to-integer */ \"../node_modules/es5-ext/number/to-integer.js\")\n\n  , max = Math.max;\n\nmodule.exports = function (value) { return max(0, toInteger(value)); };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvbnVtYmVyL3RvLXBvcy1pbnRlZ2VyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXM1LWV4dC9udW1iZXIvdG8tcG9zLWludGVnZXIuanM/ZTgwNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL3RvLWludGVnZXInKVxuXG4gICwgbWF4ID0gTWF0aC5tYXg7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHZhbHVlKSB7IHJldHVybiBtYXgoMCwgdG9JbnRlZ2VyKHZhbHVlKSk7IH07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L2VzNS1leHQvbnVtYmVyL3RvLXBvcy1pbnRlZ2VyLmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvZXM1LWV4dC9udW1iZXIvdG8tcG9zLWludGVnZXIuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/es5-ext/object/assign/index.js":
/* unknown exports provided */
/* all exports used */
/*!*******************************************!*\
  !*** ../~/es5-ext/object/assign/index.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = __webpack_require__(/*! ./is-implemented */ \"../node_modules/es5-ext/object/assign/is-implemented.js\")()\n\t? Object.assign\n\t: __webpack_require__(/*! ./shim */ \"../node_modules/es5-ext/object/assign/shim.js\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvb2JqZWN0L2Fzc2lnbi9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L2VzNS1leHQvb2JqZWN0L2Fzc2lnbi9pbmRleC5qcz82ZjA1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2lzLWltcGxlbWVudGVkJykoKVxuXHQ/IE9iamVjdC5hc3NpZ25cblx0OiByZXF1aXJlKCcuL3NoaW0nKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXM1LWV4dC9vYmplY3QvYXNzaWduL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvZXM1LWV4dC9vYmplY3QvYXNzaWduL2luZGV4LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/es5-ext/object/assign/is-implemented.js":
/* unknown exports provided */
/* all exports used */
/*!****************************************************!*\
  !*** ../~/es5-ext/object/assign/is-implemented.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== 'function') return false;\n\tobj = { foo: 'raz' };\n\tassign(obj, { bar: 'dwa' }, { trzy: 'trzy' });\n\treturn (obj.foo + obj.bar + obj.trzy) === 'razdwatrzy';\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvb2JqZWN0L2Fzc2lnbi9pcy1pbXBsZW1lbnRlZC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L2VzNS1leHQvb2JqZWN0L2Fzc2lnbi9pcy1pbXBsZW1lbnRlZC5qcz85MWExIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cdHZhciBhc3NpZ24gPSBPYmplY3QuYXNzaWduLCBvYmo7XG5cdGlmICh0eXBlb2YgYXNzaWduICE9PSAnZnVuY3Rpb24nKSByZXR1cm4gZmFsc2U7XG5cdG9iaiA9IHsgZm9vOiAncmF6JyB9O1xuXHRhc3NpZ24ob2JqLCB7IGJhcjogJ2R3YScgfSwgeyB0cnp5OiAndHJ6eScgfSk7XG5cdHJldHVybiAob2JqLmZvbyArIG9iai5iYXIgKyBvYmoudHJ6eSkgPT09ICdyYXpkd2F0cnp5Jztcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L2VzNS1leHQvb2JqZWN0L2Fzc2lnbi9pcy1pbXBsZW1lbnRlZC5qc1xuLy8gbW9kdWxlIGlkID0gLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvb2JqZWN0L2Fzc2lnbi9pcy1pbXBsZW1lbnRlZC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/es5-ext/object/assign/shim.js":
/* unknown exports provided */
/* all exports used */
/*!******************************************!*\
  !*** ../~/es5-ext/object/assign/shim.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar keys  = __webpack_require__(/*! ../keys */ \"../node_modules/es5-ext/object/keys/index.js\")\n  , value = __webpack_require__(/*! ../valid-value */ \"../node_modules/es5-ext/object/valid-value.js\")\n\n  , max = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, l = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry { dest[key] = src[key]; } catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < l; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvb2JqZWN0L2Fzc2lnbi9zaGltLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXM1LWV4dC9vYmplY3QvYXNzaWduL3NoaW0uanM/OTYzNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBrZXlzICA9IHJlcXVpcmUoJy4uL2tleXMnKVxuICAsIHZhbHVlID0gcmVxdWlyZSgnLi4vdmFsaWQtdmFsdWUnKVxuXG4gICwgbWF4ID0gTWF0aC5tYXg7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGRlc3QsIHNyYy8qLCDigKZzcmNuKi8pIHtcblx0dmFyIGVycm9yLCBpLCBsID0gbWF4KGFyZ3VtZW50cy5sZW5ndGgsIDIpLCBhc3NpZ247XG5cdGRlc3QgPSBPYmplY3QodmFsdWUoZGVzdCkpO1xuXHRhc3NpZ24gPSBmdW5jdGlvbiAoa2V5KSB7XG5cdFx0dHJ5IHsgZGVzdFtrZXldID0gc3JjW2tleV07IH0gY2F0Y2ggKGUpIHtcblx0XHRcdGlmICghZXJyb3IpIGVycm9yID0gZTtcblx0XHR9XG5cdH07XG5cdGZvciAoaSA9IDE7IGkgPCBsOyArK2kpIHtcblx0XHRzcmMgPSBhcmd1bWVudHNbaV07XG5cdFx0a2V5cyhzcmMpLmZvckVhY2goYXNzaWduKTtcblx0fVxuXHRpZiAoZXJyb3IgIT09IHVuZGVmaW5lZCkgdGhyb3cgZXJyb3I7XG5cdHJldHVybiBkZXN0O1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXM1LWV4dC9vYmplY3QvYXNzaWduL3NoaW0uanNcbi8vIG1vZHVsZSBpZCA9IC4uL25vZGVfbW9kdWxlcy9lczUtZXh0L29iamVjdC9hc3NpZ24vc2hpbS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/es5-ext/object/is-callable.js":
/* unknown exports provided */
/* all exports used */
/*!******************************************!*\
  !*** ../~/es5-ext/object/is-callable.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Deprecated\n\n\n\nmodule.exports = function (obj) { return typeof obj === 'function'; };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvb2JqZWN0L2lzLWNhbGxhYmxlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXM1LWV4dC9vYmplY3QvaXMtY2FsbGFibGUuanM/YjcwZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBEZXByZWNhdGVkXG5cbid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqID09PSAnZnVuY3Rpb24nOyB9O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi9lczUtZXh0L29iamVjdC9pcy1jYWxsYWJsZS5qc1xuLy8gbW9kdWxlIGlkID0gLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvb2JqZWN0L2lzLWNhbGxhYmxlLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/es5-ext/object/keys/index.js":
/* unknown exports provided */
/* all exports used */
/*!*****************************************!*\
  !*** ../~/es5-ext/object/keys/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = __webpack_require__(/*! ./is-implemented */ \"../node_modules/es5-ext/object/keys/is-implemented.js\")()\n\t? Object.keys\n\t: __webpack_require__(/*! ./shim */ \"../node_modules/es5-ext/object/keys/shim.js\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvb2JqZWN0L2tleXMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9lczUtZXh0L29iamVjdC9rZXlzL2luZGV4LmpzPzJkNmMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vaXMtaW1wbGVtZW50ZWQnKSgpXG5cdD8gT2JqZWN0LmtleXNcblx0OiByZXF1aXJlKCcuL3NoaW0nKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXM1LWV4dC9vYmplY3Qva2V5cy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvb2JqZWN0L2tleXMvaW5kZXguanNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/es5-ext/object/keys/is-implemented.js":
/* unknown exports provided */
/* all exports used */
/*!**************************************************!*\
  !*** ../~/es5-ext/object/keys/is-implemented.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys('primitive');\n\t\treturn true;\n\t} catch (e) { return false; }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvb2JqZWN0L2tleXMvaXMtaW1wbGVtZW50ZWQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9lczUtZXh0L29iamVjdC9rZXlzL2lzLWltcGxlbWVudGVkLmpzPzA3ZTkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcblx0dHJ5IHtcblx0XHRPYmplY3Qua2V5cygncHJpbWl0aXZlJyk7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi9lczUtZXh0L29iamVjdC9rZXlzL2lzLWltcGxlbWVudGVkLmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvZXM1LWV4dC9vYmplY3Qva2V5cy9pcy1pbXBsZW1lbnRlZC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "../node_modules/es5-ext/object/keys/shim.js":
/* unknown exports provided */
/* all exports used */
/*!****************************************!*\
  !*** ../~/es5-ext/object/keys/shim.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) {\n\treturn keys(object == null ? object : Object(object));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvb2JqZWN0L2tleXMvc2hpbS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L2VzNS1leHQvb2JqZWN0L2tleXMvc2hpbS5qcz83NDRmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGtleXMgPSBPYmplY3Qua2V5cztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0KSB7XG5cdHJldHVybiBrZXlzKG9iamVjdCA9PSBudWxsID8gb2JqZWN0IDogT2JqZWN0KG9iamVjdCkpO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXM1LWV4dC9vYmplY3Qva2V5cy9zaGltLmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvZXM1LWV4dC9vYmplY3Qva2V5cy9zaGltLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "../node_modules/es5-ext/object/normalize-options.js":
/* unknown exports provided */
/* all exports used */
/*!************************************************!*\
  !*** ../~/es5-ext/object/normalize-options.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\nmodule.exports = function (options/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (options == null) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvb2JqZWN0L25vcm1hbGl6ZS1vcHRpb25zLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXM1LWV4dC9vYmplY3Qvbm9ybWFsaXplLW9wdGlvbnMuanM/YmI0YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBmb3JFYWNoID0gQXJyYXkucHJvdG90eXBlLmZvckVhY2gsIGNyZWF0ZSA9IE9iamVjdC5jcmVhdGU7XG5cbnZhciBwcm9jZXNzID0gZnVuY3Rpb24gKHNyYywgb2JqKSB7XG5cdHZhciBrZXk7XG5cdGZvciAoa2V5IGluIHNyYykgb2JqW2tleV0gPSBzcmNba2V5XTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9wdGlvbnMvKiwg4oCmb3B0aW9ucyovKSB7XG5cdHZhciByZXN1bHQgPSBjcmVhdGUobnVsbCk7XG5cdGZvckVhY2guY2FsbChhcmd1bWVudHMsIGZ1bmN0aW9uIChvcHRpb25zKSB7XG5cdFx0aWYgKG9wdGlvbnMgPT0gbnVsbCkgcmV0dXJuO1xuXHRcdHByb2Nlc3MoT2JqZWN0KG9wdGlvbnMpLCByZXN1bHQpO1xuXHR9KTtcblx0cmV0dXJuIHJlc3VsdDtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L2VzNS1leHQvb2JqZWN0L25vcm1hbGl6ZS1vcHRpb25zLmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvZXM1LWV4dC9vYmplY3Qvbm9ybWFsaXplLW9wdGlvbnMuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/es5-ext/object/primitive-set.js":
/* unknown exports provided */
/* all exports used */
/*!********************************************!*\
  !*** ../~/es5-ext/object/primitive-set.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nmodule.exports = function (arg/*, …args*/) {\n\tvar set = create(null);\n\tforEach.call(arguments, function (name) { set[name] = true; });\n\treturn set;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvb2JqZWN0L3ByaW1pdGl2ZS1zZXQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9lczUtZXh0L29iamVjdC9wcmltaXRpdmUtc2V0LmpzPzM0MTAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZm9yRWFjaCA9IEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLCBjcmVhdGUgPSBPYmplY3QuY3JlYXRlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmcvKiwg4oCmYXJncyovKSB7XG5cdHZhciBzZXQgPSBjcmVhdGUobnVsbCk7XG5cdGZvckVhY2guY2FsbChhcmd1bWVudHMsIGZ1bmN0aW9uIChuYW1lKSB7IHNldFtuYW1lXSA9IHRydWU7IH0pO1xuXHRyZXR1cm4gc2V0O1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXM1LWV4dC9vYmplY3QvcHJpbWl0aXZlLXNldC5qc1xuLy8gbW9kdWxlIGlkID0gLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvb2JqZWN0L3ByaW1pdGl2ZS1zZXQuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "../node_modules/es5-ext/object/valid-callable.js":
/* unknown exports provided */
/* all exports used */
/*!*********************************************!*\
  !*** ../~/es5-ext/object/valid-callable.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== 'function') throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvb2JqZWN0L3ZhbGlkLWNhbGxhYmxlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXM1LWV4dC9vYmplY3QvdmFsaWQtY2FsbGFibGUuanM/NWVmZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGZuKSB7XG5cdGlmICh0eXBlb2YgZm4gIT09ICdmdW5jdGlvbicpIHRocm93IG5ldyBUeXBlRXJyb3IoZm4gKyBcIiBpcyBub3QgYSBmdW5jdGlvblwiKTtcblx0cmV0dXJuIGZuO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXM1LWV4dC9vYmplY3QvdmFsaWQtY2FsbGFibGUuanNcbi8vIG1vZHVsZSBpZCA9IC4uL25vZGVfbW9kdWxlcy9lczUtZXh0L29iamVjdC92YWxpZC1jYWxsYWJsZS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/es5-ext/object/valid-value.js":
/* unknown exports provided */
/* all exports used */
/*!******************************************!*\
  !*** ../~/es5-ext/object/valid-value.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function (value) {\n\tif (value == null) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvb2JqZWN0L3ZhbGlkLXZhbHVlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXM1LWV4dC9vYmplY3QvdmFsaWQtdmFsdWUuanM/MDA2NCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHZhbHVlKSB7XG5cdGlmICh2YWx1ZSA9PSBudWxsKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHVzZSBudWxsIG9yIHVuZGVmaW5lZFwiKTtcblx0cmV0dXJuIHZhbHVlO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXM1LWV4dC9vYmplY3QvdmFsaWQtdmFsdWUuanNcbi8vIG1vZHVsZSBpZCA9IC4uL25vZGVfbW9kdWxlcy9lczUtZXh0L29iamVjdC92YWxpZC12YWx1ZS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/es5-ext/string/#/contains/index.js":
/* unknown exports provided */
/* all exports used */
/*!***********************************************!*\
  !*** ../~/es5-ext/string/#/contains/index.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = __webpack_require__(/*! ./is-implemented */ \"../node_modules/es5-ext/string/#/contains/is-implemented.js\")()\n\t? String.prototype.contains\n\t: __webpack_require__(/*! ./shim */ \"../node_modules/es5-ext/string/#/contains/shim.js\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvc3RyaW5nLyMvY29udGFpbnMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9lczUtZXh0L3N0cmluZy8jL2NvbnRhaW5zL2luZGV4LmpzP2U2MzgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vaXMtaW1wbGVtZW50ZWQnKSgpXG5cdD8gU3RyaW5nLnByb3RvdHlwZS5jb250YWluc1xuXHQ6IHJlcXVpcmUoJy4vc2hpbScpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi9lczUtZXh0L3N0cmluZy8jL2NvbnRhaW5zL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvZXM1LWV4dC9zdHJpbmcvIy9jb250YWlucy9pbmRleC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "../node_modules/es5-ext/string/#/contains/is-implemented.js":
/* unknown exports provided */
/* all exports used */
/*!********************************************************!*\
  !*** ../~/es5-ext/string/#/contains/is-implemented.js ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar str = 'razdwatrzy';\n\nmodule.exports = function () {\n\tif (typeof str.contains !== 'function') return false;\n\treturn ((str.contains('dwa') === true) && (str.contains('foo') === false));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvc3RyaW5nLyMvY29udGFpbnMvaXMtaW1wbGVtZW50ZWQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9lczUtZXh0L3N0cmluZy8jL2NvbnRhaW5zL2lzLWltcGxlbWVudGVkLmpzPzFkNTgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgc3RyID0gJ3JhemR3YXRyenknO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcblx0aWYgKHR5cGVvZiBzdHIuY29udGFpbnMgIT09ICdmdW5jdGlvbicpIHJldHVybiBmYWxzZTtcblx0cmV0dXJuICgoc3RyLmNvbnRhaW5zKCdkd2EnKSA9PT0gdHJ1ZSkgJiYgKHN0ci5jb250YWlucygnZm9vJykgPT09IGZhbHNlKSk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi9lczUtZXh0L3N0cmluZy8jL2NvbnRhaW5zL2lzLWltcGxlbWVudGVkLmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvZXM1LWV4dC9zdHJpbmcvIy9jb250YWlucy9pcy1pbXBsZW1lbnRlZC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "../node_modules/es5-ext/string/#/contains/shim.js":
/* unknown exports provided */
/* all exports used */
/*!**********************************************!*\
  !*** ../~/es5-ext/string/#/contains/shim.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvc3RyaW5nLyMvY29udGFpbnMvc2hpbS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L2VzNS1leHQvc3RyaW5nLyMvY29udGFpbnMvc2hpbS5qcz9lZjU0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGluZGV4T2YgPSBTdHJpbmcucHJvdG90eXBlLmluZGV4T2Y7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHNlYXJjaFN0cmluZy8qLCBwb3NpdGlvbiovKSB7XG5cdHJldHVybiBpbmRleE9mLmNhbGwodGhpcywgc2VhcmNoU3RyaW5nLCBhcmd1bWVudHNbMV0pID4gLTE7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi9lczUtZXh0L3N0cmluZy8jL2NvbnRhaW5zL3NoaW0uanNcbi8vIG1vZHVsZSBpZCA9IC4uL25vZGVfbW9kdWxlcy9lczUtZXh0L3N0cmluZy8jL2NvbnRhaW5zL3NoaW0uanNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/es5-ext/string/is-string.js":
/* unknown exports provided */
/* all exports used */
/*!****************************************!*\
  !*** ../~/es5-ext/string/is-string.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar toString = Object.prototype.toString\n\n  , id = toString.call('');\n\nmodule.exports = function (x) {\n\treturn (typeof x === 'string') || (x && (typeof x === 'object') &&\n\t\t((x instanceof String) || (toString.call(x) === id))) || false;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvc3RyaW5nL2lzLXN0cmluZy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L2VzNS1leHQvc3RyaW5nL2lzLXN0cmluZy5qcz9lMjY4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZ1xuXG4gICwgaWQgPSB0b1N0cmluZy5jYWxsKCcnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoeCkge1xuXHRyZXR1cm4gKHR5cGVvZiB4ID09PSAnc3RyaW5nJykgfHwgKHggJiYgKHR5cGVvZiB4ID09PSAnb2JqZWN0JykgJiZcblx0XHQoKHggaW5zdGFuY2VvZiBTdHJpbmcpIHx8ICh0b1N0cmluZy5jYWxsKHgpID09PSBpZCkpKSB8fCBmYWxzZTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L2VzNS1leHQvc3RyaW5nL2lzLXN0cmluZy5qc1xuLy8gbW9kdWxlIGlkID0gLi4vbm9kZV9tb2R1bGVzL2VzNS1leHQvc3RyaW5nL2lzLXN0cmluZy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/es6-symbol/index.js":
/* unknown exports provided */
/* all exports used */
/*!********************************!*\
  !*** ../~/es6-symbol/index.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = __webpack_require__(/*! ./is-implemented */ \"../node_modules/es6-symbol/is-implemented.js\")() ? Symbol : __webpack_require__(/*! ./polyfill */ \"../node_modules/es6-symbol/polyfill.js\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNi1zeW1ib2wvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9lczYtc3ltYm9sL2luZGV4LmpzP2JhZjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vaXMtaW1wbGVtZW50ZWQnKSgpID8gU3ltYm9sIDogcmVxdWlyZSgnLi9wb2x5ZmlsbCcpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi9lczYtc3ltYm9sL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvZXM2LXN5bWJvbC9pbmRleC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/es6-symbol/is-implemented.js":
/* unknown exports provided */
/* all exports used */
/*!*****************************************!*\
  !*** ../~/es6-symbol/is-implemented.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar symbol;\n\tif (typeof Symbol !== 'function') return false;\n\tsymbol = Symbol('test symbol');\n\ttry { String(symbol); } catch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNi1zeW1ib2wvaXMtaW1wbGVtZW50ZWQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9lczYtc3ltYm9sL2lzLWltcGxlbWVudGVkLmpzPzZkNjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdmFsaWRUeXBlcyA9IHsgb2JqZWN0OiB0cnVlLCBzeW1ib2w6IHRydWUgfTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cdHZhciBzeW1ib2w7XG5cdGlmICh0eXBlb2YgU3ltYm9sICE9PSAnZnVuY3Rpb24nKSByZXR1cm4gZmFsc2U7XG5cdHN5bWJvbCA9IFN5bWJvbCgndGVzdCBzeW1ib2wnKTtcblx0dHJ5IHsgU3RyaW5nKHN5bWJvbCk7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9XG5cblx0Ly8gUmV0dXJuICd0cnVlJyBhbHNvIGZvciBwb2x5ZmlsbHNcblx0aWYgKCF2YWxpZFR5cGVzW3R5cGVvZiBTeW1ib2wuaXRlcmF0b3JdKSByZXR1cm4gZmFsc2U7XG5cdGlmICghdmFsaWRUeXBlc1t0eXBlb2YgU3ltYm9sLnRvUHJpbWl0aXZlXSkgcmV0dXJuIGZhbHNlO1xuXHRpZiAoIXZhbGlkVHlwZXNbdHlwZW9mIFN5bWJvbC50b1N0cmluZ1RhZ10pIHJldHVybiBmYWxzZTtcblxuXHRyZXR1cm4gdHJ1ZTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L2VzNi1zeW1ib2wvaXMtaW1wbGVtZW50ZWQuanNcbi8vIG1vZHVsZSBpZCA9IC4uL25vZGVfbW9kdWxlcy9lczYtc3ltYm9sL2lzLWltcGxlbWVudGVkLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/es6-symbol/is-symbol.js":
/* unknown exports provided */
/* all exports used */
/*!************************************!*\
  !*** ../~/es6-symbol/is-symbol.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function (x) {\n\tif (!x) return false;\n\tif (typeof x === 'symbol') return true;\n\tif (!x.constructor) return false;\n\tif (x.constructor.name !== 'Symbol') return false;\n\treturn (x[x.constructor.toStringTag] === 'Symbol');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNi1zeW1ib2wvaXMtc3ltYm9sLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXM2LXN5bWJvbC9pcy1zeW1ib2wuanM/ZDVmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHgpIHtcblx0aWYgKCF4KSByZXR1cm4gZmFsc2U7XG5cdGlmICh0eXBlb2YgeCA9PT0gJ3N5bWJvbCcpIHJldHVybiB0cnVlO1xuXHRpZiAoIXguY29uc3RydWN0b3IpIHJldHVybiBmYWxzZTtcblx0aWYgKHguY29uc3RydWN0b3IubmFtZSAhPT0gJ1N5bWJvbCcpIHJldHVybiBmYWxzZTtcblx0cmV0dXJuICh4W3guY29uc3RydWN0b3IudG9TdHJpbmdUYWddID09PSAnU3ltYm9sJyk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi9lczYtc3ltYm9sL2lzLXN5bWJvbC5qc1xuLy8gbW9kdWxlIGlkID0gLi4vbm9kZV9tb2R1bGVzL2VzNi1zeW1ib2wvaXMtc3ltYm9sLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/es6-symbol/polyfill.js":
/* unknown exports provided */
/* all exports used */
/*!***********************************!*\
  !*** ../~/es6-symbol/polyfill.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n\n\nvar d              = __webpack_require__(/*! d */ \"../node_modules/d/index.js\")\n  , validateSymbol = __webpack_require__(/*! ./validate-symbol */ \"../node_modules/es6-symbol/validate-symbol.js\")\n\n  , create = Object.create, defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty, objPrototype = Object.prototype\n  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)\n  , isNativeSafe;\n\nif (typeof Symbol === 'function') {\n\tNativeSymbol = Symbol;\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n}\n\nvar generateName = (function () {\n\tvar created = create(null);\n\treturn function (desc) {\n\t\tvar postfix = 0, name, ie11BugWorkaround;\n\t\twhile (created[desc + (postfix || '')]) ++postfix;\n\t\tdesc += (postfix || '');\n\t\tcreated[desc] = true;\n\t\tname = '@@' + desc;\n\t\tdefineProperty(objPrototype, name, d.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t}));\n\t\treturn name;\n\t};\n}());\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = (description === undefined ? '' : String(description));\n\treturn defineProperties(symbol, {\n\t\t__description__: d('', description),\n\t\t__name__: d('', generateName(description))\n\t});\n};\ndefineProperties(SymbolPolyfill, {\n\tfor: d(function (key) {\n\t\tif (globalSymbols[key]) return globalSymbols[key];\n\t\treturn (globalSymbols[key] = SymbolPolyfill(String(key)));\n\t}),\n\tkeyFor: d(function (s) {\n\t\tvar key;\n\t\tvalidateSymbol(s);\n\t\tfor (key in globalSymbols) if (globalSymbols[key] === s) return key;\n\t}),\n\n\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t// fallback to eventual native implementation of given symbol\n\thasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),\n\tisConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\tSymbolPolyfill('isConcatSpreadable')),\n\titerator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),\n\tmatch: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),\n\treplace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),\n\tsearch: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),\n\tspecies: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),\n\tsplit: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),\n\ttoPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),\n\ttoStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),\n\tunscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))\n});\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d('', function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n\tvar symbol = validateSymbol(this);\n\tif (typeof symbol === 'symbol') return symbol;\n\treturn symbol.toString();\n}));\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ "../node_modules/es6-symbol/validate-symbol.js":
/* unknown exports provided */
/* all exports used */
/*!******************************************!*\
  !*** ../~/es6-symbol/validate-symbol.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isSymbol = __webpack_require__(/*! ./is-symbol */ \"../node_modules/es6-symbol/is-symbol.js\");\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNi1zeW1ib2wvdmFsaWRhdGUtc3ltYm9sLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXM2LXN5bWJvbC92YWxpZGF0ZS1zeW1ib2wuanM/MjM0MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpc1N5bWJvbCA9IHJlcXVpcmUoJy4vaXMtc3ltYm9sJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHZhbHVlKSB7XG5cdGlmICghaXNTeW1ib2wodmFsdWUpKSB0aHJvdyBuZXcgVHlwZUVycm9yKHZhbHVlICsgXCIgaXMgbm90IGEgc3ltYm9sXCIpO1xuXHRyZXR1cm4gdmFsdWU7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi9lczYtc3ltYm9sL3ZhbGlkYXRlLXN5bWJvbC5qc1xuLy8gbW9kdWxlIGlkID0gLi4vbm9kZV9tb2R1bGVzL2VzNi1zeW1ib2wvdmFsaWRhdGUtc3ltYm9sLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/es6-template-strings/compile.js":
/* unknown exports provided */
/* all exports used */
/*!********************************************!*\
  !*** ../~/es6-template-strings/compile.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar esniff = __webpack_require__(/*! esniff */ \"../node_modules/esniff/index.js\")\n\n  , i, current, literals, substitutions, sOut, sEscape, sAhead, sIn, sInEscape, template;\n\nsOut = function (char) {\n\tif (char === '\\\\') return sEscape;\n\tif (char === '$') return sAhead;\n\tcurrent += char;\n\treturn sOut;\n};\nsEscape = function (char) {\n\tif ((char !== '\\\\') && (char !== '$')) current += '\\\\';\n\tcurrent += char;\n\treturn sOut;\n};\nsAhead = function (char) {\n\tif (char === '{') {\n\t\tliterals.push(current);\n\t\tcurrent = '';\n\t\treturn sIn;\n\t}\n\tif (char === '$') {\n\t\tcurrent += '$';\n\t\treturn sAhead;\n\t}\n\tcurrent += '$' + char;\n\treturn sOut;\n};\nsIn = function (char) {\n\tvar code = template.slice(i), end;\n\tesniff(code, '}', function (j) {\n\t\tif (esniff.nest >= 0) return esniff.next();\n\t\tend = j;\n\t});\n\tif (end != null) {\n\t\tsubstitutions.push(template.slice(i, i + end));\n\t\ti += end;\n\t\tcurrent = '';\n\t\treturn sOut;\n\t}\n\tend = code.length;\n\ti += end;\n\tcurrent += code;\n\treturn sIn;\n};\nsInEscape = function (char) {\n\tif ((char !== '\\\\') && (char !== '}')) current += '\\\\';\n\tcurrent += char;\n\treturn sIn;\n};\n\nmodule.exports = function (str) {\n\tvar length, state, result;\n\tcurrent = '';\n\tliterals = [];\n\tsubstitutions = [];\n\n\ttemplate = String(str);\n\tlength = template.length;\n\n\tstate = sOut;\n\tfor (i = 0; i < length; ++i) state = state(template[i]);\n\tif (state === sOut) {\n\t\tliterals.push(current);\n\t} else if (state === sEscape) {\n\t\tliterals.push(current + '\\\\');\n\t} else if (state === sAhead) {\n\t\tliterals.push(current + '$');\n\t} else if (state === sIn) {\n\t\tliterals[literals.length - 1] += '${' + current;\n\t} else if (state === sInEscape) {\n\t\tliterals[literals.length - 1] += '${' + current + '\\\\';\n\t}\n\tresult = { literals: literals, substitutions: substitutions };\n\tliterals = substitutions = null;\n\treturn result;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNi10ZW1wbGF0ZS1zdHJpbmdzL2NvbXBpbGUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9lczYtdGVtcGxhdGUtc3RyaW5ncy9jb21waWxlLmpzPzJlMTkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZXNuaWZmID0gcmVxdWlyZSgnZXNuaWZmJylcblxuICAsIGksIGN1cnJlbnQsIGxpdGVyYWxzLCBzdWJzdGl0dXRpb25zLCBzT3V0LCBzRXNjYXBlLCBzQWhlYWQsIHNJbiwgc0luRXNjYXBlLCB0ZW1wbGF0ZTtcblxuc091dCA9IGZ1bmN0aW9uIChjaGFyKSB7XG5cdGlmIChjaGFyID09PSAnXFxcXCcpIHJldHVybiBzRXNjYXBlO1xuXHRpZiAoY2hhciA9PT0gJyQnKSByZXR1cm4gc0FoZWFkO1xuXHRjdXJyZW50ICs9IGNoYXI7XG5cdHJldHVybiBzT3V0O1xufTtcbnNFc2NhcGUgPSBmdW5jdGlvbiAoY2hhcikge1xuXHRpZiAoKGNoYXIgIT09ICdcXFxcJykgJiYgKGNoYXIgIT09ICckJykpIGN1cnJlbnQgKz0gJ1xcXFwnO1xuXHRjdXJyZW50ICs9IGNoYXI7XG5cdHJldHVybiBzT3V0O1xufTtcbnNBaGVhZCA9IGZ1bmN0aW9uIChjaGFyKSB7XG5cdGlmIChjaGFyID09PSAneycpIHtcblx0XHRsaXRlcmFscy5wdXNoKGN1cnJlbnQpO1xuXHRcdGN1cnJlbnQgPSAnJztcblx0XHRyZXR1cm4gc0luO1xuXHR9XG5cdGlmIChjaGFyID09PSAnJCcpIHtcblx0XHRjdXJyZW50ICs9ICckJztcblx0XHRyZXR1cm4gc0FoZWFkO1xuXHR9XG5cdGN1cnJlbnQgKz0gJyQnICsgY2hhcjtcblx0cmV0dXJuIHNPdXQ7XG59O1xuc0luID0gZnVuY3Rpb24gKGNoYXIpIHtcblx0dmFyIGNvZGUgPSB0ZW1wbGF0ZS5zbGljZShpKSwgZW5kO1xuXHRlc25pZmYoY29kZSwgJ30nLCBmdW5jdGlvbiAoaikge1xuXHRcdGlmIChlc25pZmYubmVzdCA+PSAwKSByZXR1cm4gZXNuaWZmLm5leHQoKTtcblx0XHRlbmQgPSBqO1xuXHR9KTtcblx0aWYgKGVuZCAhPSBudWxsKSB7XG5cdFx0c3Vic3RpdHV0aW9ucy5wdXNoKHRlbXBsYXRlLnNsaWNlKGksIGkgKyBlbmQpKTtcblx0XHRpICs9IGVuZDtcblx0XHRjdXJyZW50ID0gJyc7XG5cdFx0cmV0dXJuIHNPdXQ7XG5cdH1cblx0ZW5kID0gY29kZS5sZW5ndGg7XG5cdGkgKz0gZW5kO1xuXHRjdXJyZW50ICs9IGNvZGU7XG5cdHJldHVybiBzSW47XG59O1xuc0luRXNjYXBlID0gZnVuY3Rpb24gKGNoYXIpIHtcblx0aWYgKChjaGFyICE9PSAnXFxcXCcpICYmIChjaGFyICE9PSAnfScpKSBjdXJyZW50ICs9ICdcXFxcJztcblx0Y3VycmVudCArPSBjaGFyO1xuXHRyZXR1cm4gc0luO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc3RyKSB7XG5cdHZhciBsZW5ndGgsIHN0YXRlLCByZXN1bHQ7XG5cdGN1cnJlbnQgPSAnJztcblx0bGl0ZXJhbHMgPSBbXTtcblx0c3Vic3RpdHV0aW9ucyA9IFtdO1xuXG5cdHRlbXBsYXRlID0gU3RyaW5nKHN0cik7XG5cdGxlbmd0aCA9IHRlbXBsYXRlLmxlbmd0aDtcblxuXHRzdGF0ZSA9IHNPdXQ7XG5cdGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkgc3RhdGUgPSBzdGF0ZSh0ZW1wbGF0ZVtpXSk7XG5cdGlmIChzdGF0ZSA9PT0gc091dCkge1xuXHRcdGxpdGVyYWxzLnB1c2goY3VycmVudCk7XG5cdH0gZWxzZSBpZiAoc3RhdGUgPT09IHNFc2NhcGUpIHtcblx0XHRsaXRlcmFscy5wdXNoKGN1cnJlbnQgKyAnXFxcXCcpO1xuXHR9IGVsc2UgaWYgKHN0YXRlID09PSBzQWhlYWQpIHtcblx0XHRsaXRlcmFscy5wdXNoKGN1cnJlbnQgKyAnJCcpO1xuXHR9IGVsc2UgaWYgKHN0YXRlID09PSBzSW4pIHtcblx0XHRsaXRlcmFsc1tsaXRlcmFscy5sZW5ndGggLSAxXSArPSAnJHsnICsgY3VycmVudDtcblx0fSBlbHNlIGlmIChzdGF0ZSA9PT0gc0luRXNjYXBlKSB7XG5cdFx0bGl0ZXJhbHNbbGl0ZXJhbHMubGVuZ3RoIC0gMV0gKz0gJyR7JyArIGN1cnJlbnQgKyAnXFxcXCc7XG5cdH1cblx0cmVzdWx0ID0geyBsaXRlcmFsczogbGl0ZXJhbHMsIHN1YnN0aXR1dGlvbnM6IHN1YnN0aXR1dGlvbnMgfTtcblx0bGl0ZXJhbHMgPSBzdWJzdGl0dXRpb25zID0gbnVsbDtcblx0cmV0dXJuIHJlc3VsdDtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L2VzNi10ZW1wbGF0ZS1zdHJpbmdzL2NvbXBpbGUuanNcbi8vIG1vZHVsZSBpZCA9IC4uL25vZGVfbW9kdWxlcy9lczYtdGVtcGxhdGUtc3RyaW5ncy9jb21waWxlLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "../node_modules/es6-template-strings/index.js":
/* unknown exports provided */
/* all exports used */
/*!******************************************!*\
  !*** ../~/es6-template-strings/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar compile = __webpack_require__(/*! ./compile */ \"../node_modules/es6-template-strings/compile.js\")\n  , resolve = __webpack_require__(/*! ./resolve-to-string */ \"../node_modules/es6-template-strings/resolve-to-string.js\");\n\nmodule.exports = function (template, context/*, options*/) {\n\treturn resolve(compile(template), context, arguments[2]);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNi10ZW1wbGF0ZS1zdHJpbmdzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXM2LXRlbXBsYXRlLXN0cmluZ3MvaW5kZXguanM/MjA5YSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBjb21waWxlID0gcmVxdWlyZSgnLi9jb21waWxlJylcbiAgLCByZXNvbHZlID0gcmVxdWlyZSgnLi9yZXNvbHZlLXRvLXN0cmluZycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0ZW1wbGF0ZSwgY29udGV4dC8qLCBvcHRpb25zKi8pIHtcblx0cmV0dXJuIHJlc29sdmUoY29tcGlsZSh0ZW1wbGF0ZSksIGNvbnRleHQsIGFyZ3VtZW50c1syXSk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi9lczYtdGVtcGxhdGUtc3RyaW5ncy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gLi4vbm9kZV9tb2R1bGVzL2VzNi10ZW1wbGF0ZS1zdHJpbmdzL2luZGV4LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/es6-template-strings/passthru.js":
/* unknown exports provided */
/* all exports used */
/*!*********************************************!*\
  !*** ../~/es6-template-strings/passthru.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar reduce = Array.prototype.reduce;\n\nmodule.exports = function (literals/*, …substitutions*/) {\n\tvar args = arguments;\n\treturn reduce.call(literals, function (a, b, i) {\n\t\treturn a + ((args[i] === undefined) ? '' :  String(args[i])) + b;\n\t});\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNi10ZW1wbGF0ZS1zdHJpbmdzL3Bhc3N0aHJ1LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXM2LXRlbXBsYXRlLXN0cmluZ3MvcGFzc3RocnUuanM/OGJjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciByZWR1Y2UgPSBBcnJheS5wcm90b3R5cGUucmVkdWNlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXRlcmFscy8qLCDigKZzdWJzdGl0dXRpb25zKi8pIHtcblx0dmFyIGFyZ3MgPSBhcmd1bWVudHM7XG5cdHJldHVybiByZWR1Y2UuY2FsbChsaXRlcmFscywgZnVuY3Rpb24gKGEsIGIsIGkpIHtcblx0XHRyZXR1cm4gYSArICgoYXJnc1tpXSA9PT0gdW5kZWZpbmVkKSA/ICcnIDogIFN0cmluZyhhcmdzW2ldKSkgKyBiO1xuXHR9KTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L2VzNi10ZW1wbGF0ZS1zdHJpbmdzL3Bhc3N0aHJ1LmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvZXM2LXRlbXBsYXRlLXN0cmluZ3MvcGFzc3RocnUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/es6-template-strings/resolve-to-string.js":
/* unknown exports provided */
/* all exports used */
/*!******************************************************!*\
  !*** ../~/es6-template-strings/resolve-to-string.js ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar resolve  = __webpack_require__(/*! ./resolve */ \"../node_modules/es6-template-strings/resolve.js\")\n  , passthru = __webpack_require__(/*! ./passthru */ \"../node_modules/es6-template-strings/passthru.js\");\n\nmodule.exports = function (data, context/*, options*/) {\n\treturn passthru.apply(null, resolve(data, context, arguments[2]));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNi10ZW1wbGF0ZS1zdHJpbmdzL3Jlc29sdmUtdG8tc3RyaW5nLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXM2LXRlbXBsYXRlLXN0cmluZ3MvcmVzb2x2ZS10by1zdHJpbmcuanM/NWE4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciByZXNvbHZlICA9IHJlcXVpcmUoJy4vcmVzb2x2ZScpXG4gICwgcGFzc3RocnUgPSByZXF1aXJlKCcuL3Bhc3N0aHJ1Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGRhdGEsIGNvbnRleHQvKiwgb3B0aW9ucyovKSB7XG5cdHJldHVybiBwYXNzdGhydS5hcHBseShudWxsLCByZXNvbHZlKGRhdGEsIGNvbnRleHQsIGFyZ3VtZW50c1syXSkpO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXM2LXRlbXBsYXRlLXN0cmluZ3MvcmVzb2x2ZS10by1zdHJpbmcuanNcbi8vIG1vZHVsZSBpZCA9IC4uL25vZGVfbW9kdWxlcy9lczYtdGVtcGxhdGUtc3RyaW5ncy9yZXNvbHZlLXRvLXN0cmluZy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "../node_modules/es6-template-strings/resolve.js":
/* unknown exports provided */
/* all exports used */
/*!********************************************!*\
  !*** ../~/es6-template-strings/resolve.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar value          = __webpack_require__(/*! es5-ext/object/valid-value */ \"../node_modules/es5-ext/object/valid-value.js\")\n  , normalize      = __webpack_require__(/*! es5-ext/object/normalize-options */ \"../node_modules/es5-ext/object/normalize-options.js\")\n  , isVarNameValid = __webpack_require__(/*! esniff/is-var-name-valid */ \"../node_modules/esniff/is-var-name-valid.js\")\n\n  , map = Array.prototype.map, keys = Object.keys\n  , stringify = JSON.stringify;\n\nmodule.exports = function (data, context/*, options*/) {\n\tvar names, argNames, argValues, options = Object(arguments[2]);\n\n\t(value(data) && value(data.literals) && value(data.substitutions));\n\tcontext = normalize(context);\n\tnames = keys(context).filter(isVarNameValid);\n\targNames = names.join(', ');\n\targValues = names.map(function (name) { return context[name]; });\n\treturn [data.literals].concat(map.call(data.substitutions, function (expr) {\n\t\tvar resolver;\n\t\tif (!expr) return undefined;\n\t\ttry {\n\t\t\tresolver = new Function(argNames, 'return (' + expr + ')');\n\t\t} catch (e) {\n\t\t\tthrow new TypeError(\"Unable to compile expression:\\n\\targs: \" + stringify(argNames) +\n\t\t\t\t\"\\n\\tbody: \" + stringify(expr) + \"\\n\\terror: \" + e.stack);\n\t\t}\n\t\ttry {\n\t\t\treturn resolver.apply(null, argValues);\n\t\t} catch (e) {\n\t\t\tif (options.partial) return '${' + expr + '}';\n\t\t\tthrow new TypeError(\"Unable to resolve expression:\\n\\targs: \" + stringify(argNames) +\n\t\t\t\t\"\\n\\tbody: \" + stringify(expr) + \"\\n\\terror: \" + e.stack);\n\t\t}\n\t}));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzNi10ZW1wbGF0ZS1zdHJpbmdzL3Jlc29sdmUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9lczYtdGVtcGxhdGUtc3RyaW5ncy9yZXNvbHZlLmpzP2E2NWEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdmFsdWUgICAgICAgICAgPSByZXF1aXJlKCdlczUtZXh0L29iamVjdC92YWxpZC12YWx1ZScpXG4gICwgbm9ybWFsaXplICAgICAgPSByZXF1aXJlKCdlczUtZXh0L29iamVjdC9ub3JtYWxpemUtb3B0aW9ucycpXG4gICwgaXNWYXJOYW1lVmFsaWQgPSByZXF1aXJlKCdlc25pZmYvaXMtdmFyLW5hbWUtdmFsaWQnKVxuXG4gICwgbWFwID0gQXJyYXkucHJvdG90eXBlLm1hcCwga2V5cyA9IE9iamVjdC5rZXlzXG4gICwgc3RyaW5naWZ5ID0gSlNPTi5zdHJpbmdpZnk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGRhdGEsIGNvbnRleHQvKiwgb3B0aW9ucyovKSB7XG5cdHZhciBuYW1lcywgYXJnTmFtZXMsIGFyZ1ZhbHVlcywgb3B0aW9ucyA9IE9iamVjdChhcmd1bWVudHNbMl0pO1xuXG5cdCh2YWx1ZShkYXRhKSAmJiB2YWx1ZShkYXRhLmxpdGVyYWxzKSAmJiB2YWx1ZShkYXRhLnN1YnN0aXR1dGlvbnMpKTtcblx0Y29udGV4dCA9IG5vcm1hbGl6ZShjb250ZXh0KTtcblx0bmFtZXMgPSBrZXlzKGNvbnRleHQpLmZpbHRlcihpc1Zhck5hbWVWYWxpZCk7XG5cdGFyZ05hbWVzID0gbmFtZXMuam9pbignLCAnKTtcblx0YXJnVmFsdWVzID0gbmFtZXMubWFwKGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBjb250ZXh0W25hbWVdOyB9KTtcblx0cmV0dXJuIFtkYXRhLmxpdGVyYWxzXS5jb25jYXQobWFwLmNhbGwoZGF0YS5zdWJzdGl0dXRpb25zLCBmdW5jdGlvbiAoZXhwcikge1xuXHRcdHZhciByZXNvbHZlcjtcblx0XHRpZiAoIWV4cHIpIHJldHVybiB1bmRlZmluZWQ7XG5cdFx0dHJ5IHtcblx0XHRcdHJlc29sdmVyID0gbmV3IEZ1bmN0aW9uKGFyZ05hbWVzLCAncmV0dXJuICgnICsgZXhwciArICcpJyk7XG5cdFx0fSBjYXRjaCAoZSkge1xuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihcIlVuYWJsZSB0byBjb21waWxlIGV4cHJlc3Npb246XFxuXFx0YXJnczogXCIgKyBzdHJpbmdpZnkoYXJnTmFtZXMpICtcblx0XHRcdFx0XCJcXG5cXHRib2R5OiBcIiArIHN0cmluZ2lmeShleHByKSArIFwiXFxuXFx0ZXJyb3I6IFwiICsgZS5zdGFjayk7XG5cdFx0fVxuXHRcdHRyeSB7XG5cdFx0XHRyZXR1cm4gcmVzb2x2ZXIuYXBwbHkobnVsbCwgYXJnVmFsdWVzKTtcblx0XHR9IGNhdGNoIChlKSB7XG5cdFx0XHRpZiAob3B0aW9ucy5wYXJ0aWFsKSByZXR1cm4gJyR7JyArIGV4cHIgKyAnfSc7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5hYmxlIHRvIHJlc29sdmUgZXhwcmVzc2lvbjpcXG5cXHRhcmdzOiBcIiArIHN0cmluZ2lmeShhcmdOYW1lcykgK1xuXHRcdFx0XHRcIlxcblxcdGJvZHk6IFwiICsgc3RyaW5naWZ5KGV4cHIpICsgXCJcXG5cXHRlcnJvcjogXCIgKyBlLnN0YWNrKTtcblx0XHR9XG5cdH0pKTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L2VzNi10ZW1wbGF0ZS1zdHJpbmdzL3Jlc29sdmUuanNcbi8vIG1vZHVsZSBpZCA9IC4uL25vZGVfbW9kdWxlcy9lczYtdGVtcGxhdGUtc3RyaW5ncy9yZXNvbHZlLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/esniff/index.js":
/* unknown exports provided */
/* all exports used */
/*!****************************!*\
  !*** ../~/esniff/index.js ***!
  \****************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar from         = __webpack_require__(/*! es5-ext/array/from */ \"../node_modules/es5-ext/array/from/index.js\")\n  , primitiveSet = __webpack_require__(/*! es5-ext/object/primitive-set */ \"../node_modules/es5-ext/object/primitive-set.js\")\n  , value        = __webpack_require__(/*! es5-ext/object/valid-value */ \"../node_modules/es5-ext/object/valid-value.js\")\n  , callable     = __webpack_require__(/*! es5-ext/object/valid-callable */ \"../node_modules/es5-ext/object/valid-callable.js\")\n  , d            = __webpack_require__(/*! d */ \"../node_modules/d/index.js\")\n  , eolSet       = __webpack_require__(/*! ./lib/ws-eol */ \"../node_modules/esniff/lib/ws-eol.js\")\n  , wsSet        = __webpack_require__(/*! ./lib/ws */ \"../node_modules/esniff/lib/ws.js\")\n\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , preRegExpSet = primitiveSet.apply(null, from(';{=([,<>+-*/%&|^!~?:}'))\n  , nonNameSet = primitiveSet.apply(null, from(';{=([,<>+-*/%&|^!~?:})].'))\n\n  , move, startCollect, endCollect, collectNest\n  , $ws, $common, $string, $comment, $multiComment, $regExp\n\n  , i, char, line, columnIndex, afterWs, previousChar\n  , nest, nestedTokens, results\n  , userCode, userTriggerChar, isUserTriggerOperatorChar, userCallback\n\n  , quote\n  , collectIndex, data, nestRelease;\n\nmove = function (j) {\n\tif (!char) return;\n\tif (i >= j) return;\n\twhile (i !== j) {\n\t\tif (!char) return;\n\t\tif (hasOwnProperty.call(wsSet, char)) {\n\t\t\tif (hasOwnProperty.call(eolSet, char)) {\n\t\t\t\tcolumnIndex = i;\n\t\t\t\t++line;\n\t\t\t}\n\t\t} else {\n\t\t\tpreviousChar = char;\n\t\t}\n\t\tchar = userCode[++i];\n\t}\n};\n\nstartCollect = function (oldNestRelease) {\n\tif (collectIndex != null) nestedTokens.push([data, collectIndex, oldNestRelease]);\n\tdata = { point: i + 1, line: line, column: i + 1 - columnIndex };\n\tcollectIndex = i;\n};\n\nendCollect = function () {\n\tvar previous;\n\tdata.raw = userCode.slice(collectIndex, i);\n\tresults.push(data);\n\tif (nestedTokens.length) {\n\t\tprevious = nestedTokens.pop();\n\t\tdata = previous[0];\n\t\tcollectIndex = previous[1];\n\t\tnestRelease = previous[2];\n\t\treturn;\n\t}\n\tdata = null;\n\tcollectIndex = null;\n\tnestRelease = null;\n};\n\ncollectNest = function () {\n\tvar old = nestRelease;\n\tnestRelease = nest;\n\t++nest;\n\tmove(i + 1);\n\tstartCollect(old);\n\treturn $ws;\n};\n\n$common = function () {\n\tif ((char === '\\'') || (char === '\"')) {\n\t\tquote = char;\n\t\tchar = userCode[++i];\n\t\treturn $string;\n\t}\n\tif ((char === '(') || (char === '{') || (char === '[')) {\n\t\t++nest;\n\t} else if ((char === ')') || (char === '}') || (char === ']')) {\n\t\tif (nestRelease === --nest) endCollect();\n\t} else if (char === '/') {\n\t\tif (hasOwnProperty.call(preRegExpSet, previousChar)) {\n\t\t\tchar = userCode[++i];\n\t\t\treturn $regExp;\n\t\t}\n\t}\n\tif ((char !== userTriggerChar) || (!isUserTriggerOperatorChar && previousChar && !afterWs &&\n\t\t\t!hasOwnProperty.call(nonNameSet, previousChar))) {\n\t\tpreviousChar = char;\n\t\tchar = userCode[++i];\n\t\treturn $ws;\n\t}\n\n\treturn userCallback(i, previousChar, nest);\n};\n\n$comment = function () {\n\twhile (true) {\n\t\tif (!char) return;\n\t\tif (hasOwnProperty.call(eolSet, char)) {\n\t\t\tcolumnIndex = i + 1;\n\t\t\t++line;\n\t\t\treturn;\n\t\t}\n\t\tchar = userCode[++i];\n\t}\n};\n\n$multiComment = function () {\n\twhile (true) {\n\t\tif (!char) return;\n\t\tif (char === '*') {\n\t\t\tchar = userCode[++i];\n\t\t\tif (char === '/') return;\n\t\t\tcontinue;\n\t\t}\n\t\tif (hasOwnProperty.call(eolSet, char)) {\n\t\t\tcolumnIndex = i + 1;\n\t\t\t++line;\n\t\t}\n\t\tchar = userCode[++i];\n\t}\n};\n\n$ws = function () {\n\tvar next;\n\tafterWs = false;\n\twhile (true) {\n\t\tif (!char) return;\n\t\tif (hasOwnProperty.call(wsSet, char)) {\n\t\t\tafterWs = true;\n\t\t\tif (hasOwnProperty.call(eolSet, char)) {\n\t\t\t\tcolumnIndex = i + 1;\n\t\t\t\t++line;\n\t\t\t}\n\t\t} else if (char === '/') {\n\t\t\tnext = userCode[i + 1];\n\t\t\tif (next === '/') {\n\t\t\t\tchar = userCode[i += 2];\n\t\t\t\tafterWs = true;\n\t\t\t\t$comment();\n\t\t\t} else if (next === '*') {\n\t\t\t\tchar = userCode[i += 2];\n\t\t\t\tafterWs = true;\n\t\t\t\t$multiComment();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\tchar = userCode[++i];\n\t}\n\treturn $common;\n};\n\n$string = function () {\n\twhile (true) {\n\t\tif (!char) return;\n\t\tif (char === quote) {\n\t\t\tchar = userCode[++i];\n\t\t\tpreviousChar = quote;\n\t\t\treturn $ws;\n\t\t}\n\t\tif (char === '\\\\') {\n\t\t\tif (hasOwnProperty.call(eolSet, userCode[++i])) {\n\t\t\t\tcolumnIndex = i + 1;\n\t\t\t\t++line;\n\t\t\t}\n\t\t}\n\t\tchar = userCode[++i];\n\t}\n};\n\n$regExp = function () {\n\twhile (true) {\n\t\tif (!char) return;\n\t\tif (char === '/') {\n\t\t\tpreviousChar = '/';\n\t\t\tchar = userCode[++i];\n\t\t\treturn $ws;\n\t\t}\n\t\tif (char === '\\\\') ++i;\n\t\tchar = userCode[++i];\n\t}\n};\n\nmodule.exports = exports = function (code, triggerChar, callback) {\n\tvar state;\n\n\tuserCode = String(value(code));\n\tuserTriggerChar = String(value(triggerChar));\n\tif (userTriggerChar.length !== 1) {\n\t\tthrow new TypeError(userTriggerChar + \" should be one character long string\");\n\t}\n\tuserCallback = callable(callback);\n\tisUserTriggerOperatorChar = hasOwnProperty.call(nonNameSet, userTriggerChar);\n\ti = 0;\n\tchar = userCode[i];\n\tline = 1;\n\tcolumnIndex = 0;\n\tafterWs = false;\n\tpreviousChar = null;\n\tnest = 0;\n\tnestedTokens = [];\n\tresults = [];\n\texports.forceStop = false;\n\tstate = $ws;\n\twhile (state) state = state();\n\treturn results;\n};\n\nObject.defineProperties(exports, {\n\t$ws: d($ws),\n\t$common: d($common),\n\tcollectNest: d(collectNest),\n\tmove: d(move),\n\tindex: d.gs(function () { return i; }),\n\tline: d.gs(function () { return line; }),\n\tnest: d.gs(function () { return nest; }),\n\tcolumnIndex: d.gs(function () { return columnIndex; }),\n\tnext: d(function (step) {\n\t\tif (!char) return;\n\t\tmove(i + (step || 1));\n\t\treturn $ws();\n\t}),\n\tresume: d(function () { return $common; })\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ "../node_modules/esniff/is-var-name-valid.js":
/* unknown exports provided */
/* all exports used */
/*!****************************************!*\
  !*** ../~/esniff/is-var-name-valid.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Credit: Mathias Bynens -> https://mathiasbynens.be/demo/javascript-identifier-regex\n\n\n\nmodule.exports = RegExp.prototype.test.bind(/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|null|this|true|void|with|await|break|catch|class|const|false|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)(?:[\\$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D])(?:[\\$0-9A-Z_a-z\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF])*$/);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ "../node_modules/esniff/lib/ws-eol.js":
/* unknown exports provided */
/* all exports used */
/*!*********************************!*\
  !*** ../~/esniff/lib/ws-eol.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar from         = __webpack_require__(/*! es5-ext/array/from */ \"../node_modules/es5-ext/array/from/index.js\")\n  , primitiveSet = __webpack_require__(/*! es5-ext/object/primitive-set */ \"../node_modules/es5-ext/object/primitive-set.js\");\n\nmodule.exports = primitiveSet.apply(null, from('\\n\\r\\u2028\\u2029'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzbmlmZi9saWIvd3MtZW9sLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXNuaWZmL2xpYi93cy1lb2wuanM/NDlhZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBmcm9tICAgICAgICAgPSByZXF1aXJlKCdlczUtZXh0L2FycmF5L2Zyb20nKVxuICAsIHByaW1pdGl2ZVNldCA9IHJlcXVpcmUoJ2VzNS1leHQvb2JqZWN0L3ByaW1pdGl2ZS1zZXQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBwcmltaXRpdmVTZXQuYXBwbHkobnVsbCwgZnJvbSgnXFxuXFxyXFx1MjAyOFxcdTIwMjknKSk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L2VzbmlmZi9saWIvd3MtZW9sLmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvZXNuaWZmL2xpYi93cy1lb2wuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "../node_modules/esniff/lib/ws-inline.js":
/* unknown exports provided */
/* all exports used */
/*!************************************!*\
  !*** ../~/esniff/lib/ws-inline.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar from         = __webpack_require__(/*! es5-ext/array/from */ \"../node_modules/es5-ext/array/from/index.js\")\n  , primitiveSet = __webpack_require__(/*! es5-ext/object/primitive-set */ \"../node_modules/es5-ext/object/primitive-set.js\");\n\nmodule.exports = primitiveSet.apply(null, from(' \\f\\t\\v​\\u00a0\\u1680​\\u180e' +\n\t'\\u2000​\\u2001\\u2002​\\u2003\\u2004​\\u2005\\u2006​\\u2007\\u2008​\\u2009\\u200a' +\n\t'​​​\\u202f\\u205f​\\u3000'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzbmlmZi9saWIvd3MtaW5saW5lLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vZXNuaWZmL2xpYi93cy1pbmxpbmUuanM/MDM2YiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBmcm9tICAgICAgICAgPSByZXF1aXJlKCdlczUtZXh0L2FycmF5L2Zyb20nKVxuICAsIHByaW1pdGl2ZVNldCA9IHJlcXVpcmUoJ2VzNS1leHQvb2JqZWN0L3ByaW1pdGl2ZS1zZXQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBwcmltaXRpdmVTZXQuYXBwbHkobnVsbCwgZnJvbSgnIFxcZlxcdFxcduKAi1xcdTAwYTBcXHUxNjgw4oCLXFx1MTgwZScgK1xuXHQnXFx1MjAwMOKAi1xcdTIwMDFcXHUyMDAy4oCLXFx1MjAwM1xcdTIwMDTigItcXHUyMDA1XFx1MjAwNuKAi1xcdTIwMDdcXHUyMDA44oCLXFx1MjAwOVxcdTIwMGEnICtcblx0J+KAi+KAi+KAi1xcdTIwMmZcXHUyMDVm4oCLXFx1MzAwMCcpKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXNuaWZmL2xpYi93cy1pbmxpbmUuanNcbi8vIG1vZHVsZSBpZCA9IC4uL25vZGVfbW9kdWxlcy9lc25pZmYvbGliL3dzLWlubGluZS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "../node_modules/esniff/lib/ws.js":
/* unknown exports provided */
/* all exports used */
/*!*****************************!*\
  !*** ../~/esniff/lib/ws.js ***!
  \*****************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar primitiveSet = __webpack_require__(/*! es5-ext/object/primitive-set */ \"../node_modules/es5-ext/object/primitive-set.js\")\n  , eol          = __webpack_require__(/*! ./ws-eol */ \"../node_modules/esniff/lib/ws-eol.js\")\n  , inline       = __webpack_require__(/*! ./ws-inline */ \"../node_modules/esniff/lib/ws-inline.js\");\n\nmodule.exports = primitiveSet.apply(null,\n\tObject.keys(eol).concat(Object.keys(inline)));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2VzbmlmZi9saWIvd3MuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9lc25pZmYvbGliL3dzLmpzPzk1MzMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcHJpbWl0aXZlU2V0ID0gcmVxdWlyZSgnZXM1LWV4dC9vYmplY3QvcHJpbWl0aXZlLXNldCcpXG4gICwgZW9sICAgICAgICAgID0gcmVxdWlyZSgnLi93cy1lb2wnKVxuICAsIGlubGluZSAgICAgICA9IHJlcXVpcmUoJy4vd3MtaW5saW5lJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcHJpbWl0aXZlU2V0LmFwcGx5KG51bGwsXG5cdE9iamVjdC5rZXlzKGVvbCkuY29uY2F0KE9iamVjdC5rZXlzKGlubGluZSkpKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vZXNuaWZmL2xpYi93cy5qc1xuLy8gbW9kdWxlIGlkID0gLi4vbm9kZV9tb2R1bGVzL2VzbmlmZi9saWIvd3MuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/handlebars/dist/cjs/handlebars.runtime.js":
/* unknown exports provided */
/* all exports used */
/*!******************************************************!*\
  !*** ../~/handlebars/dist/cjs/handlebars.runtime.js ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*globals Handlebars: true */\nvar base = __webpack_require__(/*! ./handlebars/base */ \"../node_modules/handlebars/dist/cjs/handlebars/base.js\");\n\n// Each of these augment the Handlebars object. No need to setup here.\n// (This is done to easily share code between commonjs and browse envs)\nvar SafeString = __webpack_require__(/*! ./handlebars/safe-string */ \"../node_modules/handlebars/dist/cjs/handlebars/safe-string.js\")[\"default\"];\nvar Exception = __webpack_require__(/*! ./handlebars/exception */ \"../node_modules/handlebars/dist/cjs/handlebars/exception.js\")[\"default\"];\nvar Utils = __webpack_require__(/*! ./handlebars/utils */ \"../node_modules/handlebars/dist/cjs/handlebars/utils.js\");\nvar runtime = __webpack_require__(/*! ./handlebars/runtime */ \"../node_modules/handlebars/dist/cjs/handlebars/runtime.js\");\n\n// For compatibility and usage outside of module systems, make the Handlebars object a namespace\nvar create = function() {\n  var hb = new base.HandlebarsEnvironment();\n\n  Utils.extend(hb, base);\n  hb.SafeString = SafeString;\n  hb.Exception = Exception;\n  hb.Utils = Utils;\n\n  hb.VM = runtime;\n  hb.template = function(spec) {\n    return runtime.template(spec, hb);\n  };\n\n  return hb;\n};\n\nvar Handlebars = create();\nHandlebars.create = create;\n\nexports[\"default\"] = Handlebars;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy5ydW50aW1lLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzLnJ1bnRpbWUuanM/ZTlmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qZ2xvYmFscyBIYW5kbGViYXJzOiB0cnVlICovXG52YXIgYmFzZSA9IHJlcXVpcmUoXCIuL2hhbmRsZWJhcnMvYmFzZVwiKTtcblxuLy8gRWFjaCBvZiB0aGVzZSBhdWdtZW50IHRoZSBIYW5kbGViYXJzIG9iamVjdC4gTm8gbmVlZCB0byBzZXR1cCBoZXJlLlxuLy8gKFRoaXMgaXMgZG9uZSB0byBlYXNpbHkgc2hhcmUgY29kZSBiZXR3ZWVuIGNvbW1vbmpzIGFuZCBicm93c2UgZW52cylcbnZhciBTYWZlU3RyaW5nID0gcmVxdWlyZShcIi4vaGFuZGxlYmFycy9zYWZlLXN0cmluZ1wiKVtcImRlZmF1bHRcIl07XG52YXIgRXhjZXB0aW9uID0gcmVxdWlyZShcIi4vaGFuZGxlYmFycy9leGNlcHRpb25cIilbXCJkZWZhdWx0XCJdO1xudmFyIFV0aWxzID0gcmVxdWlyZShcIi4vaGFuZGxlYmFycy91dGlsc1wiKTtcbnZhciBydW50aW1lID0gcmVxdWlyZShcIi4vaGFuZGxlYmFycy9ydW50aW1lXCIpO1xuXG4vLyBGb3IgY29tcGF0aWJpbGl0eSBhbmQgdXNhZ2Ugb3V0c2lkZSBvZiBtb2R1bGUgc3lzdGVtcywgbWFrZSB0aGUgSGFuZGxlYmFycyBvYmplY3QgYSBuYW1lc3BhY2VcbnZhciBjcmVhdGUgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGhiID0gbmV3IGJhc2UuSGFuZGxlYmFyc0Vudmlyb25tZW50KCk7XG5cbiAgVXRpbHMuZXh0ZW5kKGhiLCBiYXNlKTtcbiAgaGIuU2FmZVN0cmluZyA9IFNhZmVTdHJpbmc7XG4gIGhiLkV4Y2VwdGlvbiA9IEV4Y2VwdGlvbjtcbiAgaGIuVXRpbHMgPSBVdGlscztcblxuICBoYi5WTSA9IHJ1bnRpbWU7XG4gIGhiLnRlbXBsYXRlID0gZnVuY3Rpb24oc3BlYykge1xuICAgIHJldHVybiBydW50aW1lLnRlbXBsYXRlKHNwZWMsIGhiKTtcbiAgfTtcblxuICByZXR1cm4gaGI7XG59O1xuXG52YXIgSGFuZGxlYmFycyA9IGNyZWF0ZSgpO1xuSGFuZGxlYmFycy5jcmVhdGUgPSBjcmVhdGU7XG5cbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gSGFuZGxlYmFycztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy5ydW50aW1lLmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzLnJ1bnRpbWUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "../node_modules/handlebars/dist/cjs/handlebars/base.js":
/* unknown exports provided */
/* all exports used */
/*!***************************************************!*\
  !*** ../~/handlebars/dist/cjs/handlebars/base.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Utils = __webpack_require__(/*! ./utils */ \"../node_modules/handlebars/dist/cjs/handlebars/utils.js\");\nvar Exception = __webpack_require__(/*! ./exception */ \"../node_modules/handlebars/dist/cjs/handlebars/exception.js\")[\"default\"];\n\nvar VERSION = \"1.3.0\";\nexports.VERSION = VERSION;var COMPILER_REVISION = 4;\nexports.COMPILER_REVISION = COMPILER_REVISION;\nvar REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '>= 1.0.0'\n};\nexports.REVISION_CHANGES = REVISION_CHANGES;\nvar isArray = Utils.isArray,\n    isFunction = Utils.isFunction,\n    toString = Utils.toString,\n    objectType = '[object Object]';\n\nfunction HandlebarsEnvironment(helpers, partials) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n\n  registerDefaultHelpers(this);\n}\n\nexports.HandlebarsEnvironment = HandlebarsEnvironment;HandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: logger,\n  log: log,\n\n  registerHelper: function(name, fn, inverse) {\n    if (toString.call(name) === objectType) {\n      if (inverse || fn) { throw new Exception('Arg not supported with multiple helpers'); }\n      Utils.extend(this.helpers, name);\n    } else {\n      if (inverse) { fn.not = inverse; }\n      this.helpers[name] = fn;\n    }\n  },\n\n  registerPartial: function(name, str) {\n    if (toString.call(name) === objectType) {\n      Utils.extend(this.partials,  name);\n    } else {\n      this.partials[name] = str;\n    }\n  }\n};\n\nfunction registerDefaultHelpers(instance) {\n  instance.registerHelper('helperMissing', function(arg) {\n    if(arguments.length === 2) {\n      return undefined;\n    } else {\n      throw new Exception(\"Missing helper: '\" + arg + \"'\");\n    }\n  });\n\n  instance.registerHelper('blockHelperMissing', function(context, options) {\n    var inverse = options.inverse || function() {}, fn = options.fn;\n\n    if (isFunction(context)) { context = context.call(this); }\n\n    if(context === true) {\n      return fn(this);\n    } else if(context === false || context == null) {\n      return inverse(this);\n    } else if (isArray(context)) {\n      if(context.length > 0) {\n        return instance.helpers.each(context, options);\n      } else {\n        return inverse(this);\n      }\n    } else {\n      return fn(context);\n    }\n  });\n\n  instance.registerHelper('each', function(context, options) {\n    var fn = options.fn, inverse = options.inverse;\n    var i = 0, ret = \"\", data;\n\n    if (isFunction(context)) { context = context.call(this); }\n\n    if (options.data) {\n      data = createFrame(options.data);\n    }\n\n    if(context && typeof context === 'object') {\n      if (isArray(context)) {\n        for(var j = context.length; i<j; i++) {\n          if (data) {\n            data.index = i;\n            data.first = (i === 0);\n            data.last  = (i === (context.length-1));\n          }\n          ret = ret + fn(context[i], { data: data });\n        }\n      } else {\n        for(var key in context) {\n          if(context.hasOwnProperty(key)) {\n            if(data) { \n              data.key = key; \n              data.index = i;\n              data.first = (i === 0);\n            }\n            ret = ret + fn(context[key], {data: data});\n            i++;\n          }\n        }\n      }\n    }\n\n    if(i === 0){\n      ret = inverse(this);\n    }\n\n    return ret;\n  });\n\n  instance.registerHelper('if', function(conditional, options) {\n    if (isFunction(conditional)) { conditional = conditional.call(this); }\n\n    // Default behavior is to render the positive path if the value is truthy and not empty.\n    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n    if ((!options.hash.includeZero && !conditional) || Utils.isEmpty(conditional)) {\n      return options.inverse(this);\n    } else {\n      return options.fn(this);\n    }\n  });\n\n  instance.registerHelper('unless', function(conditional, options) {\n    return instance.helpers['if'].call(this, conditional, {fn: options.inverse, inverse: options.fn, hash: options.hash});\n  });\n\n  instance.registerHelper('with', function(context, options) {\n    if (isFunction(context)) { context = context.call(this); }\n\n    if (!Utils.isEmpty(context)) return options.fn(context);\n  });\n\n  instance.registerHelper('log', function(context, options) {\n    var level = options.data && options.data.level != null ? parseInt(options.data.level, 10) : 1;\n    instance.log(level, context);\n  });\n}\n\nvar logger = {\n  methodMap: { 0: 'debug', 1: 'info', 2: 'warn', 3: 'error' },\n\n  // State enum\n  DEBUG: 0,\n  INFO: 1,\n  WARN: 2,\n  ERROR: 3,\n  level: 3,\n\n  // can be overridden in the host environment\n  log: function(level, obj) {\n    if (logger.level <= level) {\n      var method = logger.methodMap[level];\n      if (typeof console !== 'undefined' && console[method]) {\n        console[method].call(console, obj);\n      }\n    }\n  }\n};\nexports.logger = logger;\nfunction log(level, obj) { logger.log(level, obj); }\n\nexports.log = log;var createFrame = function(object) {\n  var obj = {};\n  Utils.extend(obj, object);\n  return obj;\n};\nexports.createFrame = createFrame;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ "../node_modules/handlebars/dist/cjs/handlebars/exception.js":
/* unknown exports provided */
/* all exports used */
/*!********************************************************!*\
  !*** ../~/handlebars/dist/cjs/handlebars/exception.js ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n\nfunction Exception(message, node) {\n  var line;\n  if (node && node.firstLine) {\n    line = node.firstLine;\n\n    message += ' - ' + line + ':' + node.firstColumn;\n  }\n\n  var tmp = Error.prototype.constructor.call(this, message);\n\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (var idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n\n  if (line) {\n    this.lineNumber = line;\n    this.column = node.firstColumn;\n  }\n}\n\nException.prototype = new Error();\n\nexports[\"default\"] = Exception;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9leGNlcHRpb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvZXhjZXB0aW9uLmpzP2NlODYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBlcnJvclByb3BzID0gWydkZXNjcmlwdGlvbicsICdmaWxlTmFtZScsICdsaW5lTnVtYmVyJywgJ21lc3NhZ2UnLCAnbmFtZScsICdudW1iZXInLCAnc3RhY2snXTtcblxuZnVuY3Rpb24gRXhjZXB0aW9uKG1lc3NhZ2UsIG5vZGUpIHtcbiAgdmFyIGxpbmU7XG4gIGlmIChub2RlICYmIG5vZGUuZmlyc3RMaW5lKSB7XG4gICAgbGluZSA9IG5vZGUuZmlyc3RMaW5lO1xuXG4gICAgbWVzc2FnZSArPSAnIC0gJyArIGxpbmUgKyAnOicgKyBub2RlLmZpcnN0Q29sdW1uO1xuICB9XG5cbiAgdmFyIHRtcCA9IEVycm9yLnByb3RvdHlwZS5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIG1lc3NhZ2UpO1xuXG4gIC8vIFVuZm9ydHVuYXRlbHkgZXJyb3JzIGFyZSBub3QgZW51bWVyYWJsZSBpbiBDaHJvbWUgKGF0IGxlYXN0KSwgc28gYGZvciBwcm9wIGluIHRtcGAgZG9lc24ndCB3b3JrLlxuICBmb3IgKHZhciBpZHggPSAwOyBpZHggPCBlcnJvclByb3BzLmxlbmd0aDsgaWR4KyspIHtcbiAgICB0aGlzW2Vycm9yUHJvcHNbaWR4XV0gPSB0bXBbZXJyb3JQcm9wc1tpZHhdXTtcbiAgfVxuXG4gIGlmIChsaW5lKSB7XG4gICAgdGhpcy5saW5lTnVtYmVyID0gbGluZTtcbiAgICB0aGlzLmNvbHVtbiA9IG5vZGUuZmlyc3RDb2x1bW47XG4gIH1cbn1cblxuRXhjZXB0aW9uLnByb3RvdHlwZSA9IG5ldyBFcnJvcigpO1xuXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IEV4Y2VwdGlvbjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9leGNlcHRpb24uanNcbi8vIG1vZHVsZSBpZCA9IC4uL25vZGVfbW9kdWxlcy9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvZXhjZXB0aW9uLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/handlebars/dist/cjs/handlebars/runtime.js":
/* unknown exports provided */
/* all exports used */
/*!******************************************************!*\
  !*** ../~/handlebars/dist/cjs/handlebars/runtime.js ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Utils = __webpack_require__(/*! ./utils */ \"../node_modules/handlebars/dist/cjs/handlebars/utils.js\");\nvar Exception = __webpack_require__(/*! ./exception */ \"../node_modules/handlebars/dist/cjs/handlebars/exception.js\")[\"default\"];\nvar COMPILER_REVISION = __webpack_require__(/*! ./base */ \"../node_modules/handlebars/dist/cjs/handlebars/base.js\").COMPILER_REVISION;\nvar REVISION_CHANGES = __webpack_require__(/*! ./base */ \"../node_modules/handlebars/dist/cjs/handlebars/base.js\").REVISION_CHANGES;\n\nfunction checkRevision(compilerInfo) {\n  var compilerRevision = compilerInfo && compilerInfo[0] || 1,\n      currentRevision = COMPILER_REVISION;\n\n  if (compilerRevision !== currentRevision) {\n    if (compilerRevision < currentRevision) {\n      var runtimeVersions = REVISION_CHANGES[currentRevision],\n          compilerVersions = REVISION_CHANGES[compilerRevision];\n      throw new Exception(\"Template was precompiled with an older version of Handlebars than the current runtime. \"+\n            \"Please update your precompiler to a newer version (\"+runtimeVersions+\") or downgrade your runtime to an older version (\"+compilerVersions+\").\");\n    } else {\n      // Use the embedded version info since the runtime doesn't know about this revision yet\n      throw new Exception(\"Template was precompiled with a newer version of Handlebars than the current runtime. \"+\n            \"Please update your runtime to a newer version (\"+compilerInfo[1]+\").\");\n    }\n  }\n}\n\nexports.checkRevision = checkRevision;// TODO: Remove this line and break up compilePartial\n\nfunction template(templateSpec, env) {\n  if (!env) {\n    throw new Exception(\"No environment passed to template\");\n  }\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as psuedo-supported APIs.\n  var invokePartialWrapper = function(partial, name, context, helpers, partials, data) {\n    var result = env.VM.invokePartial.apply(this, arguments);\n    if (result != null) { return result; }\n\n    if (env.compile) {\n      var options = { helpers: helpers, partials: partials, data: data };\n      partials[name] = env.compile(partial, { data: data !== undefined }, env);\n      return partials[name](context, options);\n    } else {\n      throw new Exception(\"The partial \" + name + \" could not be compiled when running in runtime-only mode\");\n    }\n  };\n\n  // Just add water\n  var container = {\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n    programs: [],\n    program: function(i, fn, data) {\n      var programWrapper = this.programs[i];\n      if(data) {\n        programWrapper = program(i, fn, data);\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = program(i, fn);\n      }\n      return programWrapper;\n    },\n    merge: function(param, common) {\n      var ret = param || common;\n\n      if (param && common && (param !== common)) {\n        ret = {};\n        Utils.extend(ret, common);\n        Utils.extend(ret, param);\n      }\n      return ret;\n    },\n    programWithDepth: env.VM.programWithDepth,\n    noop: env.VM.noop,\n    compilerInfo: null\n  };\n\n  return function(context, options) {\n    options = options || {};\n    var namespace = options.partial ? options : env,\n        helpers,\n        partials;\n\n    if (!options.partial) {\n      helpers = options.helpers;\n      partials = options.partials;\n    }\n    var result = templateSpec.call(\n          container,\n          namespace, context,\n          helpers,\n          partials,\n          options.data);\n\n    if (!options.partial) {\n      env.VM.checkRevision(container.compilerInfo);\n    }\n\n    return result;\n  };\n}\n\nexports.template = template;function programWithDepth(i, fn, data /*, $depth */) {\n  var args = Array.prototype.slice.call(arguments, 3);\n\n  var prog = function(context, options) {\n    options = options || {};\n\n    return fn.apply(this, [context, options.data || data].concat(args));\n  };\n  prog.program = i;\n  prog.depth = args.length;\n  return prog;\n}\n\nexports.programWithDepth = programWithDepth;function program(i, fn, data) {\n  var prog = function(context, options) {\n    options = options || {};\n\n    return fn(context, options.data || data);\n  };\n  prog.program = i;\n  prog.depth = 0;\n  return prog;\n}\n\nexports.program = program;function invokePartial(partial, name, context, helpers, partials, data) {\n  var options = { partial: true, helpers: helpers, partials: partials, data: data };\n\n  if(partial === undefined) {\n    throw new Exception(\"The partial \" + name + \" could not be found\");\n  } else if(partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nexports.invokePartial = invokePartial;function noop() { return \"\"; }\n\nexports.noop = noop;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9ydW50aW1lLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL34vaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL3J1bnRpbWUuanM/ZGY5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBVdGlscyA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xudmFyIEV4Y2VwdGlvbiA9IHJlcXVpcmUoXCIuL2V4Y2VwdGlvblwiKVtcImRlZmF1bHRcIl07XG52YXIgQ09NUElMRVJfUkVWSVNJT04gPSByZXF1aXJlKFwiLi9iYXNlXCIpLkNPTVBJTEVSX1JFVklTSU9OO1xudmFyIFJFVklTSU9OX0NIQU5HRVMgPSByZXF1aXJlKFwiLi9iYXNlXCIpLlJFVklTSU9OX0NIQU5HRVM7XG5cbmZ1bmN0aW9uIGNoZWNrUmV2aXNpb24oY29tcGlsZXJJbmZvKSB7XG4gIHZhciBjb21waWxlclJldmlzaW9uID0gY29tcGlsZXJJbmZvICYmIGNvbXBpbGVySW5mb1swXSB8fCAxLFxuICAgICAgY3VycmVudFJldmlzaW9uID0gQ09NUElMRVJfUkVWSVNJT047XG5cbiAgaWYgKGNvbXBpbGVyUmV2aXNpb24gIT09IGN1cnJlbnRSZXZpc2lvbikge1xuICAgIGlmIChjb21waWxlclJldmlzaW9uIDwgY3VycmVudFJldmlzaW9uKSB7XG4gICAgICB2YXIgcnVudGltZVZlcnNpb25zID0gUkVWSVNJT05fQ0hBTkdFU1tjdXJyZW50UmV2aXNpb25dLFxuICAgICAgICAgIGNvbXBpbGVyVmVyc2lvbnMgPSBSRVZJU0lPTl9DSEFOR0VTW2NvbXBpbGVyUmV2aXNpb25dO1xuICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbihcIlRlbXBsYXRlIHdhcyBwcmVjb21waWxlZCB3aXRoIGFuIG9sZGVyIHZlcnNpb24gb2YgSGFuZGxlYmFycyB0aGFuIHRoZSBjdXJyZW50IHJ1bnRpbWUuIFwiK1xuICAgICAgICAgICAgXCJQbGVhc2UgdXBkYXRlIHlvdXIgcHJlY29tcGlsZXIgdG8gYSBuZXdlciB2ZXJzaW9uIChcIitydW50aW1lVmVyc2lvbnMrXCIpIG9yIGRvd25ncmFkZSB5b3VyIHJ1bnRpbWUgdG8gYW4gb2xkZXIgdmVyc2lvbiAoXCIrY29tcGlsZXJWZXJzaW9ucytcIikuXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBVc2UgdGhlIGVtYmVkZGVkIHZlcnNpb24gaW5mbyBzaW5jZSB0aGUgcnVudGltZSBkb2Vzbid0IGtub3cgYWJvdXQgdGhpcyByZXZpc2lvbiB5ZXRcbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oXCJUZW1wbGF0ZSB3YXMgcHJlY29tcGlsZWQgd2l0aCBhIG5ld2VyIHZlcnNpb24gb2YgSGFuZGxlYmFycyB0aGFuIHRoZSBjdXJyZW50IHJ1bnRpbWUuIFwiK1xuICAgICAgICAgICAgXCJQbGVhc2UgdXBkYXRlIHlvdXIgcnVudGltZSB0byBhIG5ld2VyIHZlcnNpb24gKFwiK2NvbXBpbGVySW5mb1sxXStcIikuXCIpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnRzLmNoZWNrUmV2aXNpb24gPSBjaGVja1JldmlzaW9uOy8vIFRPRE86IFJlbW92ZSB0aGlzIGxpbmUgYW5kIGJyZWFrIHVwIGNvbXBpbGVQYXJ0aWFsXG5cbmZ1bmN0aW9uIHRlbXBsYXRlKHRlbXBsYXRlU3BlYywgZW52KSB7XG4gIGlmICghZW52KSB7XG4gICAgdGhyb3cgbmV3IEV4Y2VwdGlvbihcIk5vIGVudmlyb25tZW50IHBhc3NlZCB0byB0ZW1wbGF0ZVwiKTtcbiAgfVxuXG4gIC8vIE5vdGU6IFVzaW5nIGVudi5WTSByZWZlcmVuY2VzIHJhdGhlciB0aGFuIGxvY2FsIHZhciByZWZlcmVuY2VzIHRocm91Z2hvdXQgdGhpcyBzZWN0aW9uIHRvIGFsbG93XG4gIC8vIGZvciBleHRlcm5hbCB1c2VycyB0byBvdmVycmlkZSB0aGVzZSBhcyBwc3VlZG8tc3VwcG9ydGVkIEFQSXMuXG4gIHZhciBpbnZva2VQYXJ0aWFsV3JhcHBlciA9IGZ1bmN0aW9uKHBhcnRpYWwsIG5hbWUsIGNvbnRleHQsIGhlbHBlcnMsIHBhcnRpYWxzLCBkYXRhKSB7XG4gICAgdmFyIHJlc3VsdCA9IGVudi5WTS5pbnZva2VQYXJ0aWFsLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7IHJldHVybiByZXN1bHQ7IH1cblxuICAgIGlmIChlbnYuY29tcGlsZSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSB7IGhlbHBlcnM6IGhlbHBlcnMsIHBhcnRpYWxzOiBwYXJ0aWFscywgZGF0YTogZGF0YSB9O1xuICAgICAgcGFydGlhbHNbbmFtZV0gPSBlbnYuY29tcGlsZShwYXJ0aWFsLCB7IGRhdGE6IGRhdGEgIT09IHVuZGVmaW5lZCB9LCBlbnYpO1xuICAgICAgcmV0dXJuIHBhcnRpYWxzW25hbWVdKGNvbnRleHQsIG9wdGlvbnMpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKFwiVGhlIHBhcnRpYWwgXCIgKyBuYW1lICsgXCIgY291bGQgbm90IGJlIGNvbXBpbGVkIHdoZW4gcnVubmluZyBpbiBydW50aW1lLW9ubHkgbW9kZVwiKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gSnVzdCBhZGQgd2F0ZXJcbiAgdmFyIGNvbnRhaW5lciA9IHtcbiAgICBlc2NhcGVFeHByZXNzaW9uOiBVdGlscy5lc2NhcGVFeHByZXNzaW9uLFxuICAgIGludm9rZVBhcnRpYWw6IGludm9rZVBhcnRpYWxXcmFwcGVyLFxuICAgIHByb2dyYW1zOiBbXSxcbiAgICBwcm9ncmFtOiBmdW5jdGlvbihpLCBmbiwgZGF0YSkge1xuICAgICAgdmFyIHByb2dyYW1XcmFwcGVyID0gdGhpcy5wcm9ncmFtc1tpXTtcbiAgICAgIGlmKGRhdGEpIHtcbiAgICAgICAgcHJvZ3JhbVdyYXBwZXIgPSBwcm9ncmFtKGksIGZuLCBkYXRhKTtcbiAgICAgIH0gZWxzZSBpZiAoIXByb2dyYW1XcmFwcGVyKSB7XG4gICAgICAgIHByb2dyYW1XcmFwcGVyID0gdGhpcy5wcm9ncmFtc1tpXSA9IHByb2dyYW0oaSwgZm4pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHByb2dyYW1XcmFwcGVyO1xuICAgIH0sXG4gICAgbWVyZ2U6IGZ1bmN0aW9uKHBhcmFtLCBjb21tb24pIHtcbiAgICAgIHZhciByZXQgPSBwYXJhbSB8fCBjb21tb247XG5cbiAgICAgIGlmIChwYXJhbSAmJiBjb21tb24gJiYgKHBhcmFtICE9PSBjb21tb24pKSB7XG4gICAgICAgIHJldCA9IHt9O1xuICAgICAgICBVdGlscy5leHRlbmQocmV0LCBjb21tb24pO1xuICAgICAgICBVdGlscy5leHRlbmQocmV0LCBwYXJhbSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmV0O1xuICAgIH0sXG4gICAgcHJvZ3JhbVdpdGhEZXB0aDogZW52LlZNLnByb2dyYW1XaXRoRGVwdGgsXG4gICAgbm9vcDogZW52LlZNLm5vb3AsXG4gICAgY29tcGlsZXJJbmZvOiBudWxsXG4gIH07XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICB2YXIgbmFtZXNwYWNlID0gb3B0aW9ucy5wYXJ0aWFsID8gb3B0aW9ucyA6IGVudixcbiAgICAgICAgaGVscGVycyxcbiAgICAgICAgcGFydGlhbHM7XG5cbiAgICBpZiAoIW9wdGlvbnMucGFydGlhbCkge1xuICAgICAgaGVscGVycyA9IG9wdGlvbnMuaGVscGVycztcbiAgICAgIHBhcnRpYWxzID0gb3B0aW9ucy5wYXJ0aWFscztcbiAgICB9XG4gICAgdmFyIHJlc3VsdCA9IHRlbXBsYXRlU3BlYy5jYWxsKFxuICAgICAgICAgIGNvbnRhaW5lcixcbiAgICAgICAgICBuYW1lc3BhY2UsIGNvbnRleHQsXG4gICAgICAgICAgaGVscGVycyxcbiAgICAgICAgICBwYXJ0aWFscyxcbiAgICAgICAgICBvcHRpb25zLmRhdGEpO1xuXG4gICAgaWYgKCFvcHRpb25zLnBhcnRpYWwpIHtcbiAgICAgIGVudi5WTS5jaGVja1JldmlzaW9uKGNvbnRhaW5lci5jb21waWxlckluZm8pO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG59XG5cbmV4cG9ydHMudGVtcGxhdGUgPSB0ZW1wbGF0ZTtmdW5jdGlvbiBwcm9ncmFtV2l0aERlcHRoKGksIGZuLCBkYXRhIC8qLCAkZGVwdGggKi8pIHtcbiAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDMpO1xuXG4gIHZhciBwcm9nID0gZnVuY3Rpb24oY29udGV4dCwgb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoaXMsIFtjb250ZXh0LCBvcHRpb25zLmRhdGEgfHwgZGF0YV0uY29uY2F0KGFyZ3MpKTtcbiAgfTtcbiAgcHJvZy5wcm9ncmFtID0gaTtcbiAgcHJvZy5kZXB0aCA9IGFyZ3MubGVuZ3RoO1xuICByZXR1cm4gcHJvZztcbn1cblxuZXhwb3J0cy5wcm9ncmFtV2l0aERlcHRoID0gcHJvZ3JhbVdpdGhEZXB0aDtmdW5jdGlvbiBwcm9ncmFtKGksIGZuLCBkYXRhKSB7XG4gIHZhciBwcm9nID0gZnVuY3Rpb24oY29udGV4dCwgb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG4gICAgcmV0dXJuIGZuKGNvbnRleHQsIG9wdGlvbnMuZGF0YSB8fCBkYXRhKTtcbiAgfTtcbiAgcHJvZy5wcm9ncmFtID0gaTtcbiAgcHJvZy5kZXB0aCA9IDA7XG4gIHJldHVybiBwcm9nO1xufVxuXG5leHBvcnRzLnByb2dyYW0gPSBwcm9ncmFtO2Z1bmN0aW9uIGludm9rZVBhcnRpYWwocGFydGlhbCwgbmFtZSwgY29udGV4dCwgaGVscGVycywgcGFydGlhbHMsIGRhdGEpIHtcbiAgdmFyIG9wdGlvbnMgPSB7IHBhcnRpYWw6IHRydWUsIGhlbHBlcnM6IGhlbHBlcnMsIHBhcnRpYWxzOiBwYXJ0aWFscywgZGF0YTogZGF0YSB9O1xuXG4gIGlmKHBhcnRpYWwgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFeGNlcHRpb24oXCJUaGUgcGFydGlhbCBcIiArIG5hbWUgKyBcIiBjb3VsZCBub3QgYmUgZm91bmRcIik7XG4gIH0gZWxzZSBpZihwYXJ0aWFsIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICByZXR1cm4gcGFydGlhbChjb250ZXh0LCBvcHRpb25zKTtcbiAgfVxufVxuXG5leHBvcnRzLmludm9rZVBhcnRpYWwgPSBpbnZva2VQYXJ0aWFsO2Z1bmN0aW9uIG5vb3AoKSB7IHJldHVybiBcIlwiOyB9XG5cbmV4cG9ydHMubm9vcCA9IG5vb3A7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvcnVudGltZS5qc1xuLy8gbW9kdWxlIGlkID0gLi4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9ydW50aW1lLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/handlebars/dist/cjs/handlebars/safe-string.js":
/* unknown exports provided */
/* all exports used */
/*!**********************************************************!*\
  !*** ../~/handlebars/dist/cjs/handlebars/safe-string.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n// Build out our basic SafeString type\nfunction SafeString(string) {\n  this.string = string;\n}\n\nSafeString.prototype.toString = function() {\n  return \"\" + this.string;\n};\n\nexports[\"default\"] = SafeString;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9zYWZlLXN0cmluZy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9zYWZlLXN0cmluZy5qcz8xNzc0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQnVpbGQgb3V0IG91ciBiYXNpYyBTYWZlU3RyaW5nIHR5cGVcbmZ1bmN0aW9uIFNhZmVTdHJpbmcoc3RyaW5nKSB7XG4gIHRoaXMuc3RyaW5nID0gc3RyaW5nO1xufVxuXG5TYWZlU3RyaW5nLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gXCJcIiArIHRoaXMuc3RyaW5nO1xufTtcblxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBTYWZlU3RyaW5nO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL3NhZmUtc3RyaW5nLmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL3NhZmUtc3RyaW5nLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "../node_modules/handlebars/dist/cjs/handlebars/utils.js":
/* unknown exports provided */
/* all exports used */
/*!****************************************************!*\
  !*** ../~/handlebars/dist/cjs/handlebars/utils.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*jshint -W004 */\nvar SafeString = __webpack_require__(/*! ./safe-string */ \"../node_modules/handlebars/dist/cjs/handlebars/safe-string.js\")[\"default\"];\n\nvar escape = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#x27;\",\n  \"`\": \"&#x60;\"\n};\n\nvar badChars = /[&<>\"'`]/g;\nvar possible = /[&<>\"'`]/;\n\nfunction escapeChar(chr) {\n  return escape[chr] || \"&amp;\";\n}\n\nfunction extend(obj, value) {\n  for(var key in value) {\n    if(Object.prototype.hasOwnProperty.call(value, key)) {\n      obj[key] = value[key];\n    }\n  }\n}\n\nexports.extend = extend;var toString = Object.prototype.toString;\nexports.toString = toString;\n// Sourced from lodash\n// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\nvar isFunction = function(value) {\n  return typeof value === 'function';\n};\n// fallback for older versions of Chrome and Safari\nif (isFunction(/x/)) {\n  isFunction = function(value) {\n    return typeof value === 'function' && toString.call(value) === '[object Function]';\n  };\n}\nvar isFunction;\nexports.isFunction = isFunction;\nvar isArray = Array.isArray || function(value) {\n  return (value && typeof value === 'object') ? toString.call(value) === '[object Array]' : false;\n};\nexports.isArray = isArray;\n\nfunction escapeExpression(string) {\n  // don't escape SafeStrings, since they're already safe\n  if (string instanceof SafeString) {\n    return string.toString();\n  } else if (!string && string !== 0) {\n    return \"\";\n  }\n\n  // Force a string conversion as this will be done by the append regardless and\n  // the regex test will do this transparently behind the scenes, causing issues if\n  // an object's to string has escaped characters in it.\n  string = \"\" + string;\n\n  if(!possible.test(string)) { return string; }\n  return string.replace(badChars, escapeChar);\n}\n\nexports.escapeExpression = escapeExpression;function isEmpty(value) {\n  if (!value && value !== 0) {\n    return true;\n  } else if (isArray(value) && value.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexports.isEmpty = isEmpty;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy91dGlscy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy91dGlscy5qcz8zOWU4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypqc2hpbnQgLVcwMDQgKi9cbnZhciBTYWZlU3RyaW5nID0gcmVxdWlyZShcIi4vc2FmZS1zdHJpbmdcIilbXCJkZWZhdWx0XCJdO1xuXG52YXIgZXNjYXBlID0ge1xuICBcIiZcIjogXCImYW1wO1wiLFxuICBcIjxcIjogXCImbHQ7XCIsXG4gIFwiPlwiOiBcIiZndDtcIixcbiAgJ1wiJzogXCImcXVvdDtcIixcbiAgXCInXCI6IFwiJiN4Mjc7XCIsXG4gIFwiYFwiOiBcIiYjeDYwO1wiXG59O1xuXG52YXIgYmFkQ2hhcnMgPSAvWyY8PlwiJ2BdL2c7XG52YXIgcG9zc2libGUgPSAvWyY8PlwiJ2BdLztcblxuZnVuY3Rpb24gZXNjYXBlQ2hhcihjaHIpIHtcbiAgcmV0dXJuIGVzY2FwZVtjaHJdIHx8IFwiJmFtcDtcIjtcbn1cblxuZnVuY3Rpb24gZXh0ZW5kKG9iaiwgdmFsdWUpIHtcbiAgZm9yKHZhciBrZXkgaW4gdmFsdWUpIHtcbiAgICBpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodmFsdWUsIGtleSkpIHtcbiAgICAgIG9ialtrZXldID0gdmFsdWVba2V5XTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0cy5leHRlbmQgPSBleHRlbmQ7dmFyIHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcbmV4cG9ydHMudG9TdHJpbmcgPSB0b1N0cmluZztcbi8vIFNvdXJjZWQgZnJvbSBsb2Rhc2hcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9iZXN0aWVqcy9sb2Rhc2gvYmxvYi9tYXN0ZXIvTElDRU5TRS50eHRcbnZhciBpc0Z1bmN0aW9uID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJztcbn07XG4vLyBmYWxsYmFjayBmb3Igb2xkZXIgdmVyc2lvbnMgb2YgQ2hyb21lIGFuZCBTYWZhcmlcbmlmIChpc0Z1bmN0aW9uKC94LykpIHtcbiAgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbiAgfTtcbn1cbnZhciBpc0Z1bmN0aW9uO1xuZXhwb3J0cy5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjtcbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gKHZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpID8gdG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09ICdbb2JqZWN0IEFycmF5XScgOiBmYWxzZTtcbn07XG5leHBvcnRzLmlzQXJyYXkgPSBpc0FycmF5O1xuXG5mdW5jdGlvbiBlc2NhcGVFeHByZXNzaW9uKHN0cmluZykge1xuICAvLyBkb24ndCBlc2NhcGUgU2FmZVN0cmluZ3MsIHNpbmNlIHRoZXkncmUgYWxyZWFkeSBzYWZlXG4gIGlmIChzdHJpbmcgaW5zdGFuY2VvZiBTYWZlU3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0cmluZy50b1N0cmluZygpO1xuICB9IGVsc2UgaWYgKCFzdHJpbmcgJiYgc3RyaW5nICE9PSAwKSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cblxuICAvLyBGb3JjZSBhIHN0cmluZyBjb252ZXJzaW9uIGFzIHRoaXMgd2lsbCBiZSBkb25lIGJ5IHRoZSBhcHBlbmQgcmVnYXJkbGVzcyBhbmRcbiAgLy8gdGhlIHJlZ2V4IHRlc3Qgd2lsbCBkbyB0aGlzIHRyYW5zcGFyZW50bHkgYmVoaW5kIHRoZSBzY2VuZXMsIGNhdXNpbmcgaXNzdWVzIGlmXG4gIC8vIGFuIG9iamVjdCdzIHRvIHN0cmluZyBoYXMgZXNjYXBlZCBjaGFyYWN0ZXJzIGluIGl0LlxuICBzdHJpbmcgPSBcIlwiICsgc3RyaW5nO1xuXG4gIGlmKCFwb3NzaWJsZS50ZXN0KHN0cmluZykpIHsgcmV0dXJuIHN0cmluZzsgfVxuICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoYmFkQ2hhcnMsIGVzY2FwZUNoYXIpO1xufVxuXG5leHBvcnRzLmVzY2FwZUV4cHJlc3Npb24gPSBlc2NhcGVFeHByZXNzaW9uO2Z1bmN0aW9uIGlzRW1wdHkodmFsdWUpIHtcbiAgaWYgKCF2YWx1ZSAmJiB2YWx1ZSAhPT0gMCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGlzQXJyYXkodmFsdWUpICYmIHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5leHBvcnRzLmlzRW1wdHkgPSBpc0VtcHR5O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL3V0aWxzLmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL3V0aWxzLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "../node_modules/handlebars/runtime.js":
/* unknown exports provided */
/* all exports used */
/*!**********************************!*\
  !*** ../~/handlebars/runtime.js ***!
  \**********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("// Create a simple path alias to allow browserify to resolve\n// the runtime on a supported path.\nmodule.exports = __webpack_require__(/*! ./dist/cjs/handlebars.runtime */ \"../node_modules/handlebars/dist/cjs/handlebars.runtime.js\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvcnVudGltZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L2hhbmRsZWJhcnMvcnVudGltZS5qcz8yNDY5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENyZWF0ZSBhIHNpbXBsZSBwYXRoIGFsaWFzIHRvIGFsbG93IGJyb3dzZXJpZnkgdG8gcmVzb2x2ZVxuLy8gdGhlIHJ1bnRpbWUgb24gYSBzdXBwb3J0ZWQgcGF0aC5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2Nqcy9oYW5kbGViYXJzLnJ1bnRpbWUnKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vaGFuZGxlYmFycy9ydW50aW1lLmpzXG4vLyBtb2R1bGUgaWQgPSAuLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9ydW50aW1lLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "./fixtures/content.json":
/* unknown exports provided */
/* all exports used */
/*!*******************************!*\
  !*** ./fixtures/content.json ***!
  \*******************************/
/***/ (function(module, exports) {

eval("module.exports = [\n\t{\n\t\t\"type\": \"image\",\n\t\t\"src\": \"https://i.redd.it/naagddk51nyy.jpg\"\n\t},\n\t{\n\t\t\"type\": \"image\",\n\t\t\"src\": \"https://i.redd.it/h7w56iwzwoyy.png\"\n\t},\n\t{\n\t\t\"type\": \"image\",\n\t\t\"src\": \"https://i.redd.it/5havdg7m8pyy.png\"\n\t},\n\t{\n\t\t\"type\": \"image\",\n\t\t\"src\": \"http://i.imgur.com/mzBHGAZ.jpg\"\n\t},\n\t{\n\t\t\"type\": \"image\",\n\t\t\"src\": \"https://i.redd.it/4z4dtsxb2oyy.jpg\"\n\t},\n\t{\n\t\t\"type\": \"image\",\n\t\t\"src\": \"https://i.redd.it/72pxr1rubpyy.jpg\"\n\t},\n\t{\n\t\t\"type\": \"image\",\n\t\t\"src\": \"https://i.redd.it/p80skth8bnyy.jpg\"\n\t},\n\t{\n\t\t\"type\": \"image\",\n\t\t\"src\": \"https://i.redd.it/zi5mixcd0qyy.png\"\n\t},\n\t{\n\t\t\"type\": \"image\",\n\t\t\"src\": \"https://i.redd.it/09h4kusljoyy.jpg\"\n\t},\n\t{\n\t\t\"type\": \"image\",\n\t\t\"src\": \"https://i.redd.it/h7w56iwzwoyy.png\"\n\t},\n\t{\n\t\t\"type\": \"image\",\n\t\t\"src\": \"https://i.redd.it/maigklrsmkyy.jpg\"\n\t},\n\t{\n\t\t\"type\": \"image\",\n\t\t\"src\": \"https://i.redd.it/mwhafcv18myy.jpg\"\n\t},\n\t{\n\t\t\"type\": \"text\",\n\t\t\"text\": \"Do VR Better Than Barack Obama\"\n\t},\n\t{\n\t\t\"type\": \"text\",\n\t\t\"text\": \"5 Things To Do Immediately About VR\"\n\t},\n\t{\n\t\t\"type\": \"text\",\n\t\t\"text\": \"The Untapped Gold Mine Of VR That Virtually No One Knows About\"\n\t},\n\t{\n\t\t\"type\": \"text\",\n\t\t\"text\": \"Open The Gates For VR By Using These Simple Tips\"\n\t},\n\t{\n\t\t\"type\": \"text\",\n\t\t\"text\": \"Lies And Damn Lies About VR\"\n\t},\n\t{\n\t\t\"type\": \"text\",\n\t\t\"text\": \"Improve(Increase) Your VR In 3 Days\"\n\t},\n\t{\n\t\t\"type\": \"text\",\n\t\t\"text\": \"How To Earn $398/Day Using VR\"\n\t},\n\t{\n\t\t\"type\": \"text\",\n\t\t\"text\": \"Secrets To VR – Even In This Down Economy\"\n\t},\n\t{\n\t\t\"type\": \"text\",\n\t\t\"text\": \"Secrets To Getting VR To Complete Tasks Quickly And Efficiently\"\n\t},\n\t{\n\t\t\"type\": \"text\",\n\t\t\"text\": \"Guaranteed No Stress VR\"\n\t},\n\t{\n\t\t\"type\": \"text\",\n\t\t\"text\": \"3 Easy Ways To Make VR Faster\"\n\t},\n\t{\n\t\t\"type\": \"text\",\n\t\t\"text\": \"How To Improve At VR In 60 Minutes\"\n\t},\n\t{\n\t\t\"type\": \"video\",\n\t\t\"src\": \"http://techslides.com/demos/sample-videos/small.mp4\"\n\t},\n\t{\n\t\t\"type\": \"video\",\n\t\t\"src\": \"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\"\n\t},\n\t{\n\t\t\"type\": \"video\",\n\t\t\"src\": \"http://yt-dash-mse-test.commondatastorage.googleapis.com/media/motion-20120802-85.mp4\"\n\t},\n\t{\n\t\t\"type\": \"video\",\n\t\t\"src\": \"http://techslides.com/demos/sample-videos/small.mp4\"\n\t},\n\t{\n\t\t\"type\": \"video\",\n\t\t\"src\": \"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\"\n\t},\n\t{\n\t\t\"type\": \"video\",\n\t\t\"src\": \"http://yt-dash-mse-test.commondatastorage.googleapis.com/media/motion-20120802-85.mp4\"\n\t},\n\t{\n\t\t\"type\": \"video\",\n\t\t\"src\": \"http://techslides.com/demos/sample-videos/small.mp4\"\n\t},\n\t{\n\t\t\"type\": \"video\",\n\t\t\"src\": \"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\"\n\t},\n\t{\n\t\t\"type\": \"video\",\n\t\t\"src\": \"http://yt-dash-mse-test.commondatastorage.googleapis.com/media/motion-20120802-85.mp4\"\n\t},\n\t{\n\t\t\"type\": \"video\",\n\t\t\"src\": \"http://techslides.com/demos/sample-videos/small.mp4\"\n\t},\n\t{\n\t\t\"type\": \"video\",\n\t\t\"src\": \"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\"\n\t},\n\t{\n\t\t\"type\": \"video\",\n\t\t\"src\": \"http://yt-dash-mse-test.commondatastorage.googleapis.com/media/motion-20120802-85.mp4\"\n\t}\n];//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9maXh0dXJlcy9jb250ZW50Lmpzb24uanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9maXh0dXJlcy9jb250ZW50Lmpzb24/MzJmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFtcblx0e1xuXHRcdFwidHlwZVwiOiBcImltYWdlXCIsXG5cdFx0XCJzcmNcIjogXCJodHRwczovL2kucmVkZC5pdC9uYWFnZGRrNTFueXkuanBnXCJcblx0fSxcblx0e1xuXHRcdFwidHlwZVwiOiBcImltYWdlXCIsXG5cdFx0XCJzcmNcIjogXCJodHRwczovL2kucmVkZC5pdC9oN3c1Nml3endveXkucG5nXCJcblx0fSxcblx0e1xuXHRcdFwidHlwZVwiOiBcImltYWdlXCIsXG5cdFx0XCJzcmNcIjogXCJodHRwczovL2kucmVkZC5pdC81aGF2ZGc3bThweXkucG5nXCJcblx0fSxcblx0e1xuXHRcdFwidHlwZVwiOiBcImltYWdlXCIsXG5cdFx0XCJzcmNcIjogXCJodHRwOi8vaS5pbWd1ci5jb20vbXpCSEdBWi5qcGdcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwiaW1hZ2VcIixcblx0XHRcInNyY1wiOiBcImh0dHBzOi8vaS5yZWRkLml0LzR6NGR0c3hiMm95eS5qcGdcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwiaW1hZ2VcIixcblx0XHRcInNyY1wiOiBcImh0dHBzOi8vaS5yZWRkLml0LzcycHhyMXJ1YnB5eS5qcGdcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwiaW1hZ2VcIixcblx0XHRcInNyY1wiOiBcImh0dHBzOi8vaS5yZWRkLml0L3A4MHNrdGg4Ym55eS5qcGdcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwiaW1hZ2VcIixcblx0XHRcInNyY1wiOiBcImh0dHBzOi8vaS5yZWRkLml0L3ppNW1peGNkMHF5eS5wbmdcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwiaW1hZ2VcIixcblx0XHRcInNyY1wiOiBcImh0dHBzOi8vaS5yZWRkLml0LzA5aDRrdXNsam95eS5qcGdcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwiaW1hZ2VcIixcblx0XHRcInNyY1wiOiBcImh0dHBzOi8vaS5yZWRkLml0L2g3dzU2aXd6d295eS5wbmdcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwiaW1hZ2VcIixcblx0XHRcInNyY1wiOiBcImh0dHBzOi8vaS5yZWRkLml0L21haWdrbHJzbWt5eS5qcGdcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwiaW1hZ2VcIixcblx0XHRcInNyY1wiOiBcImh0dHBzOi8vaS5yZWRkLml0L213aGFmY3YxOG15eS5qcGdcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwidGV4dFwiLFxuXHRcdFwidGV4dFwiOiBcIkRvIFZSIEJldHRlciBUaGFuIEJhcmFjayBPYmFtYVwiXG5cdH0sXG5cdHtcblx0XHRcInR5cGVcIjogXCJ0ZXh0XCIsXG5cdFx0XCJ0ZXh0XCI6IFwiNSBUaGluZ3MgVG8gRG8gSW1tZWRpYXRlbHkgQWJvdXQgVlJcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwidGV4dFwiLFxuXHRcdFwidGV4dFwiOiBcIlRoZSBVbnRhcHBlZCBHb2xkIE1pbmUgT2YgVlIgVGhhdCBWaXJ0dWFsbHkgTm8gT25lIEtub3dzIEFib3V0XCJcblx0fSxcblx0e1xuXHRcdFwidHlwZVwiOiBcInRleHRcIixcblx0XHRcInRleHRcIjogXCJPcGVuIFRoZSBHYXRlcyBGb3IgVlIgQnkgVXNpbmcgVGhlc2UgU2ltcGxlIFRpcHNcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwidGV4dFwiLFxuXHRcdFwidGV4dFwiOiBcIkxpZXMgQW5kIERhbW4gTGllcyBBYm91dCBWUlwiXG5cdH0sXG5cdHtcblx0XHRcInR5cGVcIjogXCJ0ZXh0XCIsXG5cdFx0XCJ0ZXh0XCI6IFwiSW1wcm92ZShJbmNyZWFzZSkgWW91ciBWUiBJbiAzIERheXNcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwidGV4dFwiLFxuXHRcdFwidGV4dFwiOiBcIkhvdyBUbyBFYXJuICQzOTgvRGF5IFVzaW5nIFZSXCJcblx0fSxcblx0e1xuXHRcdFwidHlwZVwiOiBcInRleHRcIixcblx0XHRcInRleHRcIjogXCJTZWNyZXRzIFRvIFZSIOKAkyBFdmVuIEluIFRoaXMgRG93biBFY29ub215XCJcblx0fSxcblx0e1xuXHRcdFwidHlwZVwiOiBcInRleHRcIixcblx0XHRcInRleHRcIjogXCJTZWNyZXRzIFRvIEdldHRpbmcgVlIgVG8gQ29tcGxldGUgVGFza3MgUXVpY2tseSBBbmQgRWZmaWNpZW50bHlcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwidGV4dFwiLFxuXHRcdFwidGV4dFwiOiBcIkd1YXJhbnRlZWQgTm8gU3RyZXNzIFZSXCJcblx0fSxcblx0e1xuXHRcdFwidHlwZVwiOiBcInRleHRcIixcblx0XHRcInRleHRcIjogXCIzIEVhc3kgV2F5cyBUbyBNYWtlIFZSIEZhc3RlclwiXG5cdH0sXG5cdHtcblx0XHRcInR5cGVcIjogXCJ0ZXh0XCIsXG5cdFx0XCJ0ZXh0XCI6IFwiSG93IFRvIEltcHJvdmUgQXQgVlIgSW4gNjAgTWludXRlc1wiXG5cdH0sXG5cdHtcblx0XHRcInR5cGVcIjogXCJ2aWRlb1wiLFxuXHRcdFwic3JjXCI6IFwiaHR0cDovL3RlY2hzbGlkZXMuY29tL2RlbW9zL3NhbXBsZS12aWRlb3Mvc21hbGwubXA0XCJcblx0fSxcblx0e1xuXHRcdFwidHlwZVwiOiBcInZpZGVvXCIsXG5cdFx0XCJzcmNcIjogXCJodHRwOi8vY2xpcHMudm9yd2FlcnRzLWdtYmguZGUvYmlnX2J1Y2tfYnVubnkubXA0XCJcblx0fSxcblx0e1xuXHRcdFwidHlwZVwiOiBcInZpZGVvXCIsXG5cdFx0XCJzcmNcIjogXCJodHRwOi8veXQtZGFzaC1tc2UtdGVzdC5jb21tb25kYXRhc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9tZWRpYS9tb3Rpb24tMjAxMjA4MDItODUubXA0XCJcblx0fSxcblx0e1xuXHRcdFwidHlwZVwiOiBcInZpZGVvXCIsXG5cdFx0XCJzcmNcIjogXCJodHRwOi8vdGVjaHNsaWRlcy5jb20vZGVtb3Mvc2FtcGxlLXZpZGVvcy9zbWFsbC5tcDRcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwidmlkZW9cIixcblx0XHRcInNyY1wiOiBcImh0dHA6Ly9jbGlwcy52b3J3YWVydHMtZ21iaC5kZS9iaWdfYnVja19idW5ueS5tcDRcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwidmlkZW9cIixcblx0XHRcInNyY1wiOiBcImh0dHA6Ly95dC1kYXNoLW1zZS10ZXN0LmNvbW1vbmRhdGFzdG9yYWdlLmdvb2dsZWFwaXMuY29tL21lZGlhL21vdGlvbi0yMDEyMDgwMi04NS5tcDRcIlxuXHR9LFxuXHR7XG5cdFx0XCJ0eXBlXCI6IFwidmlkZW9cIixcblx0XHRcInNyY1wiOiBcImh0dHA6Ly90ZWNoc2xpZGVzLmNvbS9kZW1vcy9zYW1wbGUtdmlkZW9zL3NtYWxsLm1wNFwiXG5cdH0sXG5cdHtcblx0XHRcInR5cGVcIjogXCJ2aWRlb1wiLFxuXHRcdFwic3JjXCI6IFwiaHR0cDovL2NsaXBzLnZvcndhZXJ0cy1nbWJoLmRlL2JpZ19idWNrX2J1bm55Lm1wNFwiXG5cdH0sXG5cdHtcblx0XHRcInR5cGVcIjogXCJ2aWRlb1wiLFxuXHRcdFwic3JjXCI6IFwiaHR0cDovL3l0LWRhc2gtbXNlLXRlc3QuY29tbW9uZGF0YXN0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vbWVkaWEvbW90aW9uLTIwMTIwODAyLTg1Lm1wNFwiXG5cdH0sXG5cdHtcblx0XHRcInR5cGVcIjogXCJ2aWRlb1wiLFxuXHRcdFwic3JjXCI6IFwiaHR0cDovL3RlY2hzbGlkZXMuY29tL2RlbW9zL3NhbXBsZS12aWRlb3Mvc21hbGwubXA0XCJcblx0fSxcblx0e1xuXHRcdFwidHlwZVwiOiBcInZpZGVvXCIsXG5cdFx0XCJzcmNcIjogXCJodHRwOi8vY2xpcHMudm9yd2FlcnRzLWdtYmguZGUvYmlnX2J1Y2tfYnVubnkubXA0XCJcblx0fSxcblx0e1xuXHRcdFwidHlwZVwiOiBcInZpZGVvXCIsXG5cdFx0XCJzcmNcIjogXCJodHRwOi8veXQtZGFzaC1tc2UtdGVzdC5jb21tb25kYXRhc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9tZWRpYS9tb3Rpb24tMjAxMjA4MDItODUubXA0XCJcblx0fVxuXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2ZpeHR1cmVzL2NvbnRlbnQuanNvblxuLy8gbW9kdWxlIGlkID0gLi9maXh0dXJlcy9jb250ZW50Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "./js/a-components/fade-in-out.js":
/* unknown exports provided */
/* all exports used */
/*!****************************************!*\
  !*** ./js/a-components/fade-in-out.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar THREE = window.THREE;\n\n// pausable setTimeout\nfunction Timer(callback, delay) {\n  var timerId = delay;\n  var start = delay;\n  var remaining = delay;\n\n  this.pause = function () {\n    window.clearTimeout(timerId);\n    remaining -= new Date() - start;\n  };\n\n  this.resume = function () {\n    start = new Date();\n    window.clearTimeout(timerId);\n    timerId = window.setTimeout(callback, remaining);\n  };\n\n  this.resume();\n}\n\nAFRAME.registerComponent('fade-in-out', {\n  schema: {\n    ypos: { type: 'number' },\n    dur: { type: 'number' }\n  },\n\n  init: function init() {\n    var _this = this;\n\n    var data = this.data,\n        el = this.el;\n\n    this.dur = data.dur;\n    this.fadeTime = data.dur / 2 + 2000;\n    this.fading = false;\n    this.paused = false;\n\n    var radius = 1;\n    var xAngle = THREE.Math.degToRad(Math.random() * 360);\n    var yAngle = THREE.Math.degToRad(Math.random() * 360);\n    var yOffset = radius * Math.sin(xAngle) * Math.sin(yAngle);\n    var xOffset = radius / 4 * Math.cos(xAngle) * Math.sin(yAngle);\n    var zOffset = radius / 4 * Math.cos(yAngle);\n\n    var fallName = 'animation__fall';\n    var fallHeight = data.ypos + yOffset;\n\n    el.setAttribute(fallName, {\n      property: 'position',\n      from: xOffset + ' ' + fallHeight + ' ' + zOffset,\n      to: xOffset + ' -' + fallHeight + ' ' + zOffset,\n      startEvents: 'startFall',\n      restartEvents: 'restartFall',\n      pauseEvents: 'pauseFall',\n      resumeEvents: 'resumeFall',\n      dur: this.dur\n    });\n\n    el.setAttribute('animation__fade_in', {\n      property: 'material.opacity',\n      startEvents: 'startFadeIn',\n      restartEvents: 'restartFadeIn',\n      pauseEvents: 'pauseFadeIn',\n      resumeEvents: 'resumeFadeIn',\n      easing: 'linear',\n      dur: this.dur / 2,\n      from: '0',\n      to: '1'\n    });\n\n    el.setAttribute('animation__fade_out', {\n      property: 'material.opacity',\n      startEvents: 'startFadeOut',\n      restartEvents: 'restartFadeOut',\n      pauseEvents: 'pauseFadeOut',\n      resumeEvents: 'resumeFadeOut',\n      easing: 'linear',\n      dur: this.dur / 2,\n      from: '1',\n      to: '0'\n    });\n\n    el.addEventListener(fallName + '-complete', function () {\n      el.emit('restartFall');\n      el.emit('restartFadeIn');\n      _this.fading = false;\n      _this.timer.pause();\n      _this.timer = new Timer(function () {\n        el.emit('restartFadeOut');\n      }, _this.fadeTime);\n    });\n\n    this.timer = new Timer(function () {\n      el.emit('startFadeOut');\n      _this.fading = true;\n    }, this.fadeTime);\n\n    el.addEventListener('click', function () {\n      if (_this.paused) {\n        return;\n      }\n      el.emit('pauseFall');\n      el.emit(_this.fading ? 'pauseFadeOut' : 'pauseFadeIn');\n      _this.paused = true;\n      _this.timer && _this.timer.pause();\n    });\n\n    el.addEventListener('mouseleave', function () {\n      if (!_this.paused) {\n        return;\n      }\n      el.emit('resumeFall');\n      el.emit(_this.fading ? 'resumeFadeOut' : 'resumeFadeIn');\n      _this.paused = false;\n      _this.timer && _this.timer.resume();\n    });\n\n    el.emit('startFall');\n    el.emit('startFadeIn');\n  }\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9qcy9hLWNvbXBvbmVudHMvZmFkZS1pbi1vdXQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2pzL2EtY29tcG9uZW50cy9mYWRlLWluLW91dC5qcz9kMWRhIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFRIUkVFID0gd2luZG93LlRIUkVFO1xuXG4vLyBwYXVzYWJsZSBzZXRUaW1lb3V0XG5mdW5jdGlvbiBUaW1lcihjYWxsYmFjaywgZGVsYXkpIHtcbiAgbGV0IHRpbWVySWQgPSBkZWxheTtcbiAgbGV0IHN0YXJ0ID0gZGVsYXk7XG4gIGxldCByZW1haW5pbmcgPSBkZWxheTtcblxuICB0aGlzLnBhdXNlID0gZnVuY3Rpb24oKSB7XG4gICAgd2luZG93LmNsZWFyVGltZW91dCh0aW1lcklkKTtcbiAgICByZW1haW5pbmcgLT0gbmV3IERhdGUoKSAtIHN0YXJ0O1xuICB9O1xuXG4gIHRoaXMucmVzdW1lID0gZnVuY3Rpb24oKSB7XG4gICAgc3RhcnQgPSBuZXcgRGF0ZSgpO1xuICAgIHdpbmRvdy5jbGVhclRpbWVvdXQodGltZXJJZCk7XG4gICAgdGltZXJJZCA9IHdpbmRvdy5zZXRUaW1lb3V0KGNhbGxiYWNrLCByZW1haW5pbmcpO1xuICB9O1xuXG4gIHRoaXMucmVzdW1lKCk7XG59XG5cbkFGUkFNRS5yZWdpc3RlckNvbXBvbmVudCgnZmFkZS1pbi1vdXQnLCB7XG4gIHNjaGVtYToge1xuICAgIHlwb3M6IHt0eXBlOiAnbnVtYmVyJ30sXG4gICAgZHVyOiB7dHlwZTogJ251bWJlcid9LFxuICB9LFxuXG4gIGluaXQoKSB7XG4gICAgY29uc3Qge2RhdGEsIGVsfSA9IHRoaXM7XG4gICAgdGhpcy5kdXIgPSBkYXRhLmR1cjtcbiAgICB0aGlzLmZhZGVUaW1lID0gKGRhdGEuZHVyIC8gMikgKyAyMDAwO1xuICAgIHRoaXMuZmFkaW5nID0gZmFsc2U7XG4gICAgdGhpcy5wYXVzZWQgPSBmYWxzZTtcblxuICAgIGNvbnN0IHJhZGl1cyA9IDE7XG4gICAgY29uc3QgeEFuZ2xlID0gVEhSRUUuTWF0aC5kZWdUb1JhZChNYXRoLnJhbmRvbSgpICogMzYwKTtcbiAgICBjb25zdCB5QW5nbGUgPSBUSFJFRS5NYXRoLmRlZ1RvUmFkKE1hdGgucmFuZG9tKCkgKiAzNjApO1xuICAgIGNvbnN0IHlPZmZzZXQgPSByYWRpdXMgKiBNYXRoLnNpbih4QW5nbGUpICogTWF0aC5zaW4oeUFuZ2xlKTtcbiAgICBjb25zdCB4T2Zmc2V0ID0gKHJhZGl1cyAvIDQpICogTWF0aC5jb3MoeEFuZ2xlKSAqIE1hdGguc2luKHlBbmdsZSk7XG4gICAgY29uc3Qgek9mZnNldCA9IChyYWRpdXMgLyA0KSAqIE1hdGguY29zKHlBbmdsZSk7XG5cbiAgICBjb25zdCBmYWxsTmFtZSA9ICdhbmltYXRpb25fX2ZhbGwnO1xuICAgIGNvbnN0IGZhbGxIZWlnaHQgPSBkYXRhLnlwb3MgKyB5T2Zmc2V0O1xuXG4gICAgZWwuc2V0QXR0cmlidXRlKGZhbGxOYW1lLCB7XG4gICAgICBwcm9wZXJ0eTogJ3Bvc2l0aW9uJyxcbiAgICAgIGZyb206IGAke3hPZmZzZXR9ICR7ZmFsbEhlaWdodH0gJHt6T2Zmc2V0fWAsXG4gICAgICB0bzogYCR7eE9mZnNldH0gLSR7ZmFsbEhlaWdodH0gJHt6T2Zmc2V0fWAsXG4gICAgICBzdGFydEV2ZW50czogJ3N0YXJ0RmFsbCcsXG4gICAgICByZXN0YXJ0RXZlbnRzOiAncmVzdGFydEZhbGwnLFxuICAgICAgcGF1c2VFdmVudHM6ICdwYXVzZUZhbGwnLFxuICAgICAgcmVzdW1lRXZlbnRzOiAncmVzdW1lRmFsbCcsXG4gICAgICBkdXI6IHRoaXMuZHVyLFxuICAgIH0pO1xuXG4gICAgZWwuc2V0QXR0cmlidXRlKCdhbmltYXRpb25fX2ZhZGVfaW4nLCB7XG4gICAgICBwcm9wZXJ0eTogJ21hdGVyaWFsLm9wYWNpdHknLFxuICAgICAgc3RhcnRFdmVudHM6ICdzdGFydEZhZGVJbicsXG4gICAgICByZXN0YXJ0RXZlbnRzOiAncmVzdGFydEZhZGVJbicsXG4gICAgICBwYXVzZUV2ZW50czogJ3BhdXNlRmFkZUluJyxcbiAgICAgIHJlc3VtZUV2ZW50czogJ3Jlc3VtZUZhZGVJbicsXG4gICAgICBlYXNpbmc6ICdsaW5lYXInLFxuICAgICAgZHVyOiB0aGlzLmR1ciAvIDIsXG4gICAgICBmcm9tOiAnMCcsXG4gICAgICB0bzogJzEnLFxuICAgIH0pO1xuXG4gICAgZWwuc2V0QXR0cmlidXRlKCdhbmltYXRpb25fX2ZhZGVfb3V0Jywge1xuICAgICAgcHJvcGVydHk6ICdtYXRlcmlhbC5vcGFjaXR5JyxcbiAgICAgIHN0YXJ0RXZlbnRzOiAnc3RhcnRGYWRlT3V0JyxcbiAgICAgIHJlc3RhcnRFdmVudHM6ICdyZXN0YXJ0RmFkZU91dCcsXG4gICAgICBwYXVzZUV2ZW50czogJ3BhdXNlRmFkZU91dCcsXG4gICAgICByZXN1bWVFdmVudHM6ICdyZXN1bWVGYWRlT3V0JyxcbiAgICAgIGVhc2luZzogJ2xpbmVhcicsXG4gICAgICBkdXI6IHRoaXMuZHVyIC8gMixcbiAgICAgIGZyb206ICcxJyxcbiAgICAgIHRvOiAnMCcsXG4gICAgfSk7XG5cbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKGAke2ZhbGxOYW1lfS1jb21wbGV0ZWAsICgpID0+IHtcbiAgICAgIGVsLmVtaXQoJ3Jlc3RhcnRGYWxsJyk7XG4gICAgICBlbC5lbWl0KCdyZXN0YXJ0RmFkZUluJyk7XG4gICAgICB0aGlzLmZhZGluZyA9IGZhbHNlO1xuICAgICAgdGhpcy50aW1lci5wYXVzZSgpO1xuICAgICAgdGhpcy50aW1lciA9IG5ldyBUaW1lcigoKSA9PiB7XG4gICAgICAgIGVsLmVtaXQoJ3Jlc3RhcnRGYWRlT3V0Jyk7XG4gICAgICB9LCB0aGlzLmZhZGVUaW1lKTtcbiAgICB9KTtcblxuICAgIHRoaXMudGltZXIgPSBuZXcgVGltZXIoKCkgPT4ge1xuICAgICAgZWwuZW1pdCgnc3RhcnRGYWRlT3V0Jyk7XG4gICAgICB0aGlzLmZhZGluZyA9IHRydWU7XG4gICAgfSwgdGhpcy5mYWRlVGltZSk7XG5cbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIGlmICh0aGlzLnBhdXNlZCkgeyByZXR1cm47IH1cbiAgICAgIGVsLmVtaXQoJ3BhdXNlRmFsbCcpO1xuICAgICAgZWwuZW1pdCh0aGlzLmZhZGluZyA/ICdwYXVzZUZhZGVPdXQnIDogJ3BhdXNlRmFkZUluJyk7XG4gICAgICB0aGlzLnBhdXNlZCA9IHRydWU7XG4gICAgICB0aGlzLnRpbWVyICYmIHRoaXMudGltZXIucGF1c2UoKTtcbiAgICB9KTtcblxuICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCAoKSA9PiB7XG4gICAgICBpZiAoIXRoaXMucGF1c2VkKSB7IHJldHVybjsgfVxuICAgICAgZWwuZW1pdCgncmVzdW1lRmFsbCcpO1xuICAgICAgZWwuZW1pdCh0aGlzLmZhZGluZyA/ICdyZXN1bWVGYWRlT3V0JyA6ICdyZXN1bWVGYWRlSW4nKTtcbiAgICAgIHRoaXMucGF1c2VkID0gZmFsc2U7XG4gICAgICB0aGlzLnRpbWVyICYmIHRoaXMudGltZXIucmVzdW1lKCk7XG4gICAgfSk7XG5cbiAgICBlbC5lbWl0KCdzdGFydEZhbGwnKTtcbiAgICBlbC5lbWl0KCdzdGFydEZhZGVJbicpO1xuICB9LFxufSk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2pzL2EtY29tcG9uZW50cy9mYWRlLWluLW91dC5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFDQTtBQUlBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVJBO0FBQ0E7QUFVQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBQ0E7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBQ0E7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBM0ZBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "./js/a-components/index.js":
/* unknown exports provided */
/* all exports used */
/*!**********************************!*\
  !*** ./js/a-components/index.js ***!
  \**********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./fade-in-out */ \"./js/a-components/fade-in-out.js\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9qcy9hLWNvbXBvbmVudHMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2pzL2EtY29tcG9uZW50cy9pbmRleC5qcz9iYzk1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi9mYWRlLWluLW91dCc7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2pzL2EtY29tcG9uZW50cy9pbmRleC5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "./js/index.js":
/* unknown exports provided */
/* all exports used */
/*!*********************!*\
  !*** ./js/index.js ***!
  \*********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n__webpack_require__(/*! aframe */ 0);\n\n__webpack_require__(/*! aframe-animation-component */ \"../node_modules/aframe-animation-component/index.js\");\n\n__webpack_require__(/*! aframe-event-set-component */ \"../node_modules/aframe-event-set-component/index.js\");\n\n__webpack_require__(/*! aframe-layout-component */ \"../node_modules/aframe-layout-component/index.js\");\n\n__webpack_require__(/*! aframe-template-component */ \"../node_modules/aframe-template-component/index.js\");\n\n__webpack_require__(/*! aframe-look-at-component */ \"../node_modules/aframe-look-at-component/index.js\");\n\n__webpack_require__(/*! aframe-particle-system-component */ \"../node_modules/aframe-particle-system-component/index.js\");\n\n__webpack_require__(/*! aframe-randomizer-components */ \"../node_modules/aframe-randomizer-components/index.js\");\n\n__webpack_require__(/*! ./a-components */ \"./js/a-components/index.js\");\n\nvar _content = __webpack_require__(/*! ../fixtures/content */ \"./fixtures/content.json\");\n\nvar _content2 = _interopRequireDefault(_content);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nif (false) {\n  module.hot.accept();\n}\n\nvar config = {\n  rowRadius: 2.75,\n  contentPerRow: 12\n};\n\nfunction shuffle(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\nvar contents = shuffle(_content2.default.filter(function (c) {\n  return c.type === 'image';\n}).map(function (c) {\n  return _extends({}, c, {\n    yPos: Math.PI,\n    dur: 50000\n  });\n})).slice(0, config.contentPerRow);\n\nwhile (contents.length < config.contentPerRow) {\n  contents = contents.concat(contents).slice(0, config.contentPerRow);\n}\n\nvar aScene = __webpack_require__(/*! ../scene/scene.hbs */ \"./scene/scene.hbs\");\ndocument.addEventListener('DOMContentLoaded', function () {\n  document.body.innerHTML = aScene({ config: config, contents: contents });\n\n  var aframeScene = document.querySelector('a-scene');\n  var showStats = false;\n  document.addEventListener('keyup', function (e) {\n    if (e.keyCode === 83) {\n      showStats = !showStats;\n      aframeScene.setAttribute('stats', showStats);\n    }\n  });\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9qcy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvanMvaW5kZXguanM/OTlhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ2FmcmFtZSc7XG5cbmltcG9ydCAnYWZyYW1lLWFuaW1hdGlvbi1jb21wb25lbnQnO1xuaW1wb3J0ICdhZnJhbWUtZXZlbnQtc2V0LWNvbXBvbmVudCc7XG5pbXBvcnQgJ2FmcmFtZS1sYXlvdXQtY29tcG9uZW50JztcbmltcG9ydCAnYWZyYW1lLXRlbXBsYXRlLWNvbXBvbmVudCc7XG5pbXBvcnQgJ2FmcmFtZS1sb29rLWF0LWNvbXBvbmVudCc7XG5pbXBvcnQgJ2FmcmFtZS1wYXJ0aWNsZS1zeXN0ZW0tY29tcG9uZW50JztcbmltcG9ydCAnYWZyYW1lLXJhbmRvbWl6ZXItY29tcG9uZW50cyc7XG5pbXBvcnQgJy4vYS1jb21wb25lbnRzJztcblxuaW1wb3J0IGNvbnRlbnQgZnJvbSAnLi4vZml4dHVyZXMvY29udGVudCc7XG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIG1vZHVsZS5ob3QuYWNjZXB0KCk7XG59XG5cbmNvbnN0IGNvbmZpZyA9IHtcbiAgcm93UmFkaXVzOiAyLjc1LFxuICBjb250ZW50UGVyUm93OiAxMixcbn07XG5cbmZ1bmN0aW9uIHNodWZmbGUoYXJyYXkpIHtcbiAgZm9yICh2YXIgaSA9IGFycmF5Lmxlbmd0aCAtIDE7IGkgPiAwOyBpLS0pIHtcbiAgICB2YXIgaiA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChpICsgMSkpO1xuICAgIHZhciB0ZW1wID0gYXJyYXlbaV07XG4gICAgYXJyYXlbaV0gPSBhcnJheVtqXTtcbiAgICBhcnJheVtqXSA9IHRlbXA7XG4gIH1cbiAgcmV0dXJuIGFycmF5O1xufVxuXG5sZXQgY29udGVudHMgPSBzaHVmZmxlKGNvbnRlbnQuZmlsdGVyKGMgPT4gYy50eXBlID09PSAnaW1hZ2UnKS5tYXAoYyA9PiAoe1xuICAuLi5jLFxuICB5UG9zOiBNYXRoLlBJLFxuICBkdXI6IDUwMDAwLFxufSkpKS5zbGljZSgwLCBjb25maWcuY29udGVudFBlclJvdyk7XG5cbndoaWxlIChjb250ZW50cy5sZW5ndGggPCBjb25maWcuY29udGVudFBlclJvdykge1xuICBjb250ZW50cyA9IGNvbnRlbnRzLmNvbmNhdChjb250ZW50cykuc2xpY2UoMCwgY29uZmlnLmNvbnRlbnRQZXJSb3cpO1xufVxuXG5jb25zdCBhU2NlbmUgPSByZXF1aXJlKCcuLi9zY2VuZS9zY2VuZS5oYnMnKTtcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XG4gIGRvY3VtZW50LmJvZHkuaW5uZXJIVE1MID0gYVNjZW5lKHtjb25maWcsIGNvbnRlbnRzfSk7XG5cbiAgbGV0IGFmcmFtZVNjZW5lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYS1zY2VuZScpO1xuICBsZXQgc2hvd1N0YXRzID0gZmFsc2U7XG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgZSA9PiB7XG4gICAgaWYgKGUua2V5Q29kZSA9PT0gODMpIHtcbiAgICAgIHNob3dTdGF0cyA9ICFzaG93U3RhdHM7XG4gICAgICBhZnJhbWVTY2VuZS5zZXRBdHRyaWJ1dGUoJ3N0YXRzJywgc2hvd1N0YXRzKTtcbiAgICB9XG4gIH0pO1xufSk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2pzL2luZGV4LmpzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUhBO0FBQUE7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "./sass/entry.scss":
/* unknown exports provided */
/* all exports used */
/*!*************************!*\
  !*** ./sass/entry.scss ***!
  \*************************/
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zYXNzL2VudHJ5LnNjc3MuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zYXNzL2VudHJ5LnNjc3M/NDliMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2Fzcy9lbnRyeS5zY3NzXG4vLyBtb2R1bGUgaWQgPSAuL3Nhc3MvZW50cnkuc2Nzc1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ "./scene/camera.hbs":
/* unknown exports provided */
/* all exports used */
/*!**************************!*\
  !*** ./scene/camera.hbs ***!
  \**************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var Handlebars = __webpack_require__(/*! ../~/handlebars/runtime.js */ \"../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<a-entity camera look-controls position=\\\"0 0 0\\\">\\n  <a-cursor id=\\\"cursor\\\"\\n    animation__click=\\\"property: scale; startEvents: click; from: 0.1 0.1 0.1; to: 1 1 1; dur: 150\\\"\\n    animation__fusing=\\\"property: fusing; startEvents: fusing; from: 1 1 1; to: 0.1 0.1 0.1; dur: 1500\\\"\\n    event-set__1=\\\"_event: mouseenter; color: springgreen\\\"\\n    event-set__2=\\\"_event: mouseleave; color: black\\\"\\n    fuse=\\\"true\\\"\\n    raycaster=\\\"objects: .content\\\"></a-cursor>\\n</a-entity>\\n\";\n  });//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zY2VuZS9jYW1lcmEuaGJzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc2NlbmUvY2FtZXJhLmhicz9iNTViIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBIYW5kbGViYXJzID0gcmVxdWlyZShcIi9Vc2Vycy9tYW51ZWxwYWxvdS9TaXRlcy9tb25vL3BsYXlncm91bmRzL3BsYXlncm91bmRzL29tbmlzZWFyY2gtdnIvbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvcnVudGltZS5qc1wiKTtcbmZ1bmN0aW9uIF9fZGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiAob2JqLl9fZXNNb2R1bGUgPyBvYmpbXCJkZWZhdWx0XCJdIDogb2JqKTsgfVxubW9kdWxlLmV4cG9ydHMgPSAoSGFuZGxlYmFyc1tcImRlZmF1bHRcIl0gfHwgSGFuZGxlYmFycykudGVtcGxhdGUoZnVuY3Rpb24gKEhhbmRsZWJhcnMsZGVwdGgwLGhlbHBlcnMscGFydGlhbHMsZGF0YSkge1xuICB0aGlzLmNvbXBpbGVySW5mbyA9IFs0LCc+PSAxLjAuMCddO1xuaGVscGVycyA9IHRoaXMubWVyZ2UoaGVscGVycywgSGFuZGxlYmFycy5oZWxwZXJzKTsgZGF0YSA9IGRhdGEgfHwge307XG4gIFxuXG5cbiAgcmV0dXJuIFwiPGEtZW50aXR5IGNhbWVyYSBsb29rLWNvbnRyb2xzIHBvc2l0aW9uPVxcXCIwIDAgMFxcXCI+XFxuICA8YS1jdXJzb3IgaWQ9XFxcImN1cnNvclxcXCJcXG4gICAgYW5pbWF0aW9uX19jbGljaz1cXFwicHJvcGVydHk6IHNjYWxlOyBzdGFydEV2ZW50czogY2xpY2s7IGZyb206IDAuMSAwLjEgMC4xOyB0bzogMSAxIDE7IGR1cjogMTUwXFxcIlxcbiAgICBhbmltYXRpb25fX2Z1c2luZz1cXFwicHJvcGVydHk6IGZ1c2luZzsgc3RhcnRFdmVudHM6IGZ1c2luZzsgZnJvbTogMSAxIDE7IHRvOiAwLjEgMC4xIDAuMTsgZHVyOiAxNTAwXFxcIlxcbiAgICBldmVudC1zZXRfXzE9XFxcIl9ldmVudDogbW91c2VlbnRlcjsgY29sb3I6IHNwcmluZ2dyZWVuXFxcIlxcbiAgICBldmVudC1zZXRfXzI9XFxcIl9ldmVudDogbW91c2VsZWF2ZTsgY29sb3I6IGJsYWNrXFxcIlxcbiAgICBmdXNlPVxcXCJ0cnVlXFxcIlxcbiAgICByYXljYXN0ZXI9XFxcIm9iamVjdHM6IC5jb250ZW50XFxcIj48L2EtY3Vyc29yPlxcbjwvYS1lbnRpdHk+XFxuXCI7XG4gIH0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2NlbmUvY2FtZXJhLmhic1xuLy8gbW9kdWxlIGlkID0gLi9zY2VuZS9jYW1lcmEuaGJzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ "./scene/content.hbs":
/* unknown exports provided */
/* all exports used */
/*!***************************!*\
  !*** ./scene/content.hbs ***!
  \***************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var Handlebars = __webpack_require__(/*! ../~/handlebars/runtime.js */ \"../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<script id=\\\"content-cpt\\\" type=\\\"text/html\\\">\\n  <a-entity\\n    fade-in-out=\\\"ypos: ${ypos}; dur: ${dur}\\\"\\n    class=\\\"content\\\"\\n    geometry=\\\"primitive: plane; height: 1; width: 1\\\"\\n    material=\\\"shader: flat; src: ${thumbnail}; opacity: 0\\\"\\n    look-at=\\\"[camera]\\\"\\n    event-set__1=\\\"_event: mousedown; scale: 1 1 1\\\"\\n    event-set__2=\\\"_event: mouseup; scale: 1.2 1.2 1\\\"\\n    event-set__3=\\\"_event: mouseenter; scale: 1.2 1.2 1\\\"\\n    event-set__4=\\\"_event: mouseleave; scale: 1 1 1\\\"\\n    sound=\\\"on: click; src: #click-sound\\\"></a-entity>\\n</script>\\n\";\n  });//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zY2VuZS9jb250ZW50Lmhicy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NjZW5lL2NvbnRlbnQuaGJzP2U3MTMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEhhbmRsZWJhcnMgPSByZXF1aXJlKFwiL1VzZXJzL21hbnVlbHBhbG91L1NpdGVzL21vbm8vcGxheWdyb3VuZHMvcGxheWdyb3VuZHMvb21uaXNlYXJjaC12ci9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9ydW50aW1lLmpzXCIpO1xuZnVuY3Rpb24gX19kZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIChvYmouX19lc01vZHVsZSA/IG9ialtcImRlZmF1bHRcIl0gOiBvYmopOyB9XG5tb2R1bGUuZXhwb3J0cyA9IChIYW5kbGViYXJzW1wiZGVmYXVsdFwiXSB8fCBIYW5kbGViYXJzKS50ZW1wbGF0ZShmdW5jdGlvbiAoSGFuZGxlYmFycyxkZXB0aDAsaGVscGVycyxwYXJ0aWFscyxkYXRhKSB7XG4gIHRoaXMuY29tcGlsZXJJbmZvID0gWzQsJz49IDEuMC4wJ107XG5oZWxwZXJzID0gdGhpcy5tZXJnZShoZWxwZXJzLCBIYW5kbGViYXJzLmhlbHBlcnMpOyBkYXRhID0gZGF0YSB8fCB7fTtcbiAgXG5cblxuICByZXR1cm4gXCI8c2NyaXB0IGlkPVxcXCJjb250ZW50LWNwdFxcXCIgdHlwZT1cXFwidGV4dC9odG1sXFxcIj5cXG4gIDxhLWVudGl0eVxcbiAgICBmYWRlLWluLW91dD1cXFwieXBvczogJHt5cG9zfTsgZHVyOiAke2R1cn1cXFwiXFxuICAgIGNsYXNzPVxcXCJjb250ZW50XFxcIlxcbiAgICBnZW9tZXRyeT1cXFwicHJpbWl0aXZlOiBwbGFuZTsgaGVpZ2h0OiAxOyB3aWR0aDogMVxcXCJcXG4gICAgbWF0ZXJpYWw9XFxcInNoYWRlcjogZmxhdDsgc3JjOiAke3RodW1ibmFpbH07IG9wYWNpdHk6IDBcXFwiXFxuICAgIGxvb2stYXQ9XFxcIltjYW1lcmFdXFxcIlxcbiAgICBldmVudC1zZXRfXzE9XFxcIl9ldmVudDogbW91c2Vkb3duOyBzY2FsZTogMSAxIDFcXFwiXFxuICAgIGV2ZW50LXNldF9fMj1cXFwiX2V2ZW50OiBtb3VzZXVwOyBzY2FsZTogMS4yIDEuMiAxXFxcIlxcbiAgICBldmVudC1zZXRfXzM9XFxcIl9ldmVudDogbW91c2VlbnRlcjsgc2NhbGU6IDEuMiAxLjIgMVxcXCJcXG4gICAgZXZlbnQtc2V0X180PVxcXCJfZXZlbnQ6IG1vdXNlbGVhdmU7IHNjYWxlOiAxIDEgMVxcXCJcXG4gICAgc291bmQ9XFxcIm9uOiBjbGljazsgc3JjOiAjY2xpY2stc291bmRcXFwiPjwvYS1lbnRpdHk+XFxuPC9zY3JpcHQ+XFxuXCI7XG4gIH0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2NlbmUvY29udGVudC5oYnNcbi8vIG1vZHVsZSBpZCA9IC4vc2NlbmUvY29udGVudC5oYnNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ "./scene/scene.hbs":
/* unknown exports provided */
/* all exports used */
/*!*************************!*\
  !*** ./scene/scene.hbs ***!
  \*************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var Handlebars = __webpack_require__(/*! ../~/handlebars/runtime.js */ \"../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n      <a-entity\\n        id=\\\"content-\"\n    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\\n        template=\\\"src: #content-cpt; type: html\\\"\\n        data-ypos=\"\n    + escapeExpression(((stack1 = (depth0 && depth0.yPos)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n        data-thumbnail=\"\n    + escapeExpression(((stack1 = (depth0 && depth0.src)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n        data-src=\"\n    + escapeExpression(((stack1 = (depth0 && depth0.src)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n        data-dur=\"\n    + escapeExpression(((stack1 = (depth0 && depth0.dur)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n        data-thumb=\\\"\"\n    + escapeExpression(((stack1 = (depth0 && depth0.src)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"></a-entity>\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<a-scene id=\\\"aframe-project\\\" inspector=\\\"url: https://aframe.io/releases/0.3.0/aframe-inspector.min.js\\\">\\n  <a-assets>\\n    <audio id=\\\"click-sound\\\" crossorigin=\\\"anonymous\\\" src=\\\"https://cdn.aframe.io/360-image-gallery-boilerplate/audio/click.ogg\\\"></audio>\\n    \";\n  stack1 = self.invokePartial(__webpack_require__(/*! ./scene/content.hbs */ \"./scene/content.hbs\"), 'content', depth0, helpers, partials, data);\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n  </a-assets>\\n\\n  <!-- Camera + cursor. -->\\n  \";\n  stack1 = self.invokePartial(__webpack_require__(/*! ./scene/camera.hbs */ \"./scene/camera.hbs\"), 'camera', depth0, helpers, partials, data);\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n  <!-- Snow effect -->\\n  <a-sky id=\\\"sky\\\" color=\\\"#000000\\\"></a-sky>\\n  <a-entity position=\\\"0 2.25 -15\\\" particle-system=\\\"preset: snow; particleCount: 1000; velocityValue: 0 1 0\\\"></a-entity>\\n\\n  <!-- Content elements. -->\\n  <a-entity id=\\\"content-layout\\\" layout=\\\"type: circle; radius: \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.config)),stack1 == null || stack1 === false ? stack1 : stack1.rowRadius)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"; plane: xz;\\\" position=\\\"0 0 0\\\">\\n    \";\n  stack1 = ((stack1 = ((stack1 = (depth0 && depth0.contents)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1)),blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}));\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n  </a-entity>\\n</a-scene>\\n\";\n  return buffer;\n  });//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zY2VuZS9zY2VuZS5oYnMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zY2VuZS9zY2VuZS5oYnM/Yzg4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgSGFuZGxlYmFycyA9IHJlcXVpcmUoXCIvVXNlcnMvbWFudWVscGFsb3UvU2l0ZXMvbW9uby9wbGF5Z3JvdW5kcy9wbGF5Z3JvdW5kcy9vbW5pc2VhcmNoLXZyL25vZGVfbW9kdWxlcy9oYW5kbGViYXJzL3J1bnRpbWUuanNcIik7XG5mdW5jdGlvbiBfX2RlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgKG9iai5fX2VzTW9kdWxlID8gb2JqW1wiZGVmYXVsdFwiXSA6IG9iaik7IH1cbm1vZHVsZS5leHBvcnRzID0gKEhhbmRsZWJhcnNbXCJkZWZhdWx0XCJdIHx8IEhhbmRsZWJhcnMpLnRlbXBsYXRlKGZ1bmN0aW9uIChIYW5kbGViYXJzLGRlcHRoMCxoZWxwZXJzLHBhcnRpYWxzLGRhdGEpIHtcbiAgdGhpcy5jb21waWxlckluZm8gPSBbNCwnPj0gMS4wLjAnXTtcbmhlbHBlcnMgPSB0aGlzLm1lcmdlKGhlbHBlcnMsIEhhbmRsZWJhcnMuaGVscGVycyk7IHBhcnRpYWxzID0gdGhpcy5tZXJnZShwYXJ0aWFscywgSGFuZGxlYmFycy5wYXJ0aWFscyk7IGRhdGEgPSBkYXRhIHx8IHt9O1xuICB2YXIgYnVmZmVyID0gXCJcIiwgc3RhY2sxLCBmdW5jdGlvblR5cGU9XCJmdW5jdGlvblwiLCBlc2NhcGVFeHByZXNzaW9uPXRoaXMuZXNjYXBlRXhwcmVzc2lvbiwgc2VsZj10aGlzLCBibG9ja0hlbHBlck1pc3Npbmc9aGVscGVycy5ibG9ja0hlbHBlck1pc3Npbmc7XG5cbmZ1bmN0aW9uIHByb2dyYW0xKGRlcHRoMCxkYXRhKSB7XG4gIFxuICB2YXIgYnVmZmVyID0gXCJcIiwgc3RhY2sxO1xuICBidWZmZXIgKz0gXCJcXG4gICAgICA8YS1lbnRpdHlcXG4gICAgICAgIGlkPVxcXCJjb250ZW50LVwiXG4gICAgKyBlc2NhcGVFeHByZXNzaW9uKCgoc3RhY2sxID0gKGRhdGEgPT0gbnVsbCB8fCBkYXRhID09PSBmYWxzZSA/IGRhdGEgOiBkYXRhLmluZGV4KSksdHlwZW9mIHN0YWNrMSA9PT0gZnVuY3Rpb25UeXBlID8gc3RhY2sxLmFwcGx5KGRlcHRoMCkgOiBzdGFjazEpKVxuICAgICsgXCJcXFwiXFxuICAgICAgICB0ZW1wbGF0ZT1cXFwic3JjOiAjY29udGVudC1jcHQ7IHR5cGU6IGh0bWxcXFwiXFxuICAgICAgICBkYXRhLXlwb3M9XCJcbiAgICArIGVzY2FwZUV4cHJlc3Npb24oKChzdGFjazEgPSAoZGVwdGgwICYmIGRlcHRoMC55UG9zKSksdHlwZW9mIHN0YWNrMSA9PT0gZnVuY3Rpb25UeXBlID8gc3RhY2sxLmFwcGx5KGRlcHRoMCkgOiBzdGFjazEpKVxuICAgICsgXCJcXG4gICAgICAgIGRhdGEtdGh1bWJuYWlsPVwiXG4gICAgKyBlc2NhcGVFeHByZXNzaW9uKCgoc3RhY2sxID0gKGRlcHRoMCAmJiBkZXB0aDAuc3JjKSksdHlwZW9mIHN0YWNrMSA9PT0gZnVuY3Rpb25UeXBlID8gc3RhY2sxLmFwcGx5KGRlcHRoMCkgOiBzdGFjazEpKVxuICAgICsgXCJcXG4gICAgICAgIGRhdGEtc3JjPVwiXG4gICAgKyBlc2NhcGVFeHByZXNzaW9uKCgoc3RhY2sxID0gKGRlcHRoMCAmJiBkZXB0aDAuc3JjKSksdHlwZW9mIHN0YWNrMSA9PT0gZnVuY3Rpb25UeXBlID8gc3RhY2sxLmFwcGx5KGRlcHRoMCkgOiBzdGFjazEpKVxuICAgICsgXCJcXG4gICAgICAgIGRhdGEtZHVyPVwiXG4gICAgKyBlc2NhcGVFeHByZXNzaW9uKCgoc3RhY2sxID0gKGRlcHRoMCAmJiBkZXB0aDAuZHVyKSksdHlwZW9mIHN0YWNrMSA9PT0gZnVuY3Rpb25UeXBlID8gc3RhY2sxLmFwcGx5KGRlcHRoMCkgOiBzdGFjazEpKVxuICAgICsgXCJcXG4gICAgICAgIGRhdGEtdGh1bWI9XFxcIlwiXG4gICAgKyBlc2NhcGVFeHByZXNzaW9uKCgoc3RhY2sxID0gKGRlcHRoMCAmJiBkZXB0aDAuc3JjKSksdHlwZW9mIHN0YWNrMSA9PT0gZnVuY3Rpb25UeXBlID8gc3RhY2sxLmFwcGx5KGRlcHRoMCkgOiBzdGFjazEpKVxuICAgICsgXCJcXFwiPjwvYS1lbnRpdHk+XFxuICAgIFwiO1xuICByZXR1cm4gYnVmZmVyO1xuICB9XG5cbiAgYnVmZmVyICs9IFwiPGEtc2NlbmUgaWQ9XFxcImFmcmFtZS1wcm9qZWN0XFxcIiBpbnNwZWN0b3I9XFxcInVybDogaHR0cHM6Ly9hZnJhbWUuaW8vcmVsZWFzZXMvMC4zLjAvYWZyYW1lLWluc3BlY3Rvci5taW4uanNcXFwiPlxcbiAgPGEtYXNzZXRzPlxcbiAgICA8YXVkaW8gaWQ9XFxcImNsaWNrLXNvdW5kXFxcIiBjcm9zc29yaWdpbj1cXFwiYW5vbnltb3VzXFxcIiBzcmM9XFxcImh0dHBzOi8vY2RuLmFmcmFtZS5pby8zNjAtaW1hZ2UtZ2FsbGVyeS1ib2lsZXJwbGF0ZS9hdWRpby9jbGljay5vZ2dcXFwiPjwvYXVkaW8+XFxuICAgIFwiO1xuICBzdGFjazEgPSBzZWxmLmludm9rZVBhcnRpYWwocmVxdWlyZShcIi9Vc2Vycy9tYW51ZWxwYWxvdS9TaXRlcy9tb25vL3BsYXlncm91bmRzL3BsYXlncm91bmRzL29tbmlzZWFyY2gtdnIvc3JjL3NjZW5lL2NvbnRlbnQuaGJzXCIpLCAnY29udGVudCcsIGRlcHRoMCwgaGVscGVycywgcGFydGlhbHMsIGRhdGEpO1xuICBpZihzdGFjazEgfHwgc3RhY2sxID09PSAwKSB7IGJ1ZmZlciArPSBzdGFjazE7IH1cbiAgYnVmZmVyICs9IFwiXFxuICA8L2EtYXNzZXRzPlxcblxcbiAgPCEtLSBDYW1lcmEgKyBjdXJzb3IuIC0tPlxcbiAgXCI7XG4gIHN0YWNrMSA9IHNlbGYuaW52b2tlUGFydGlhbChyZXF1aXJlKFwiL1VzZXJzL21hbnVlbHBhbG91L1NpdGVzL21vbm8vcGxheWdyb3VuZHMvcGxheWdyb3VuZHMvb21uaXNlYXJjaC12ci9zcmMvc2NlbmUvY2FtZXJhLmhic1wiKSwgJ2NhbWVyYScsIGRlcHRoMCwgaGVscGVycywgcGFydGlhbHMsIGRhdGEpO1xuICBpZihzdGFjazEgfHwgc3RhY2sxID09PSAwKSB7IGJ1ZmZlciArPSBzdGFjazE7IH1cbiAgYnVmZmVyICs9IFwiXFxuXFxuICA8IS0tIFNub3cgZWZmZWN0IC0tPlxcbiAgPGEtc2t5IGlkPVxcXCJza3lcXFwiIGNvbG9yPVxcXCIjMDAwMDAwXFxcIj48L2Etc2t5PlxcbiAgPGEtZW50aXR5IHBvc2l0aW9uPVxcXCIwIDIuMjUgLTE1XFxcIiBwYXJ0aWNsZS1zeXN0ZW09XFxcInByZXNldDogc25vdzsgcGFydGljbGVDb3VudDogMTAwMDsgdmVsb2NpdHlWYWx1ZTogMCAxIDBcXFwiPjwvYS1lbnRpdHk+XFxuXFxuICA8IS0tIENvbnRlbnQgZWxlbWVudHMuIC0tPlxcbiAgPGEtZW50aXR5IGlkPVxcXCJjb250ZW50LWxheW91dFxcXCIgbGF5b3V0PVxcXCJ0eXBlOiBjaXJjbGU7IHJhZGl1czogXCJcbiAgICArIGVzY2FwZUV4cHJlc3Npb24oKChzdGFjazEgPSAoKHN0YWNrMSA9IChkZXB0aDAgJiYgZGVwdGgwLmNvbmZpZykpLHN0YWNrMSA9PSBudWxsIHx8IHN0YWNrMSA9PT0gZmFsc2UgPyBzdGFjazEgOiBzdGFjazEucm93UmFkaXVzKSksdHlwZW9mIHN0YWNrMSA9PT0gZnVuY3Rpb25UeXBlID8gc3RhY2sxLmFwcGx5KGRlcHRoMCkgOiBzdGFjazEpKVxuICAgICsgXCI7IHBsYW5lOiB4ejtcXFwiIHBvc2l0aW9uPVxcXCIwIDAgMFxcXCI+XFxuICAgIFwiO1xuICBzdGFjazEgPSAoKHN0YWNrMSA9ICgoc3RhY2sxID0gKGRlcHRoMCAmJiBkZXB0aDAuY29udGVudHMpKSx0eXBlb2Ygc3RhY2sxID09PSBmdW5jdGlvblR5cGUgPyBzdGFjazEuYXBwbHkoZGVwdGgwKSA6IHN0YWNrMSkpLGJsb2NrSGVscGVyTWlzc2luZy5jYWxsKGRlcHRoMCwgc3RhY2sxLCB7aGFzaDp7fSxpbnZlcnNlOnNlbGYubm9vcCxmbjpzZWxmLnByb2dyYW0oMSwgcHJvZ3JhbTEsIGRhdGEpLGRhdGE6ZGF0YX0pKTtcbiAgaWYoc3RhY2sxIHx8IHN0YWNrMSA9PT0gMCkgeyBidWZmZXIgKz0gc3RhY2sxOyB9XG4gIGJ1ZmZlciArPSBcIlxcbiAgPC9hLWVudGl0eT5cXG48L2Etc2NlbmU+XFxuXCI7XG4gIHJldHVybiBidWZmZXI7XG4gIH0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2NlbmUvc2NlbmUuaGJzXG4vLyBtb2R1bGUgaWQgPSAuL3NjZW5lL3NjZW5lLmhic1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 0:
/* unknown exports provided */
/* all exports used */
/*!****************************************************************************************!*\
  !*** delegated ./node_modules/aframe/dist/aframe-master.js from dll-reference vendors ***!
  \****************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(1))(116);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9kZWxlZ2F0ZWQgLi9ub2RlX21vZHVsZXMvYWZyYW1lL2Rpc3QvYWZyYW1lLW1hc3Rlci5qcyBmcm9tIGRsbC1yZWZlcmVuY2UgdmVuZG9ycz9kMzIyIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKF9fd2VicGFja19yZXF1aXJlX18oMSkpKDExNik7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZGVsZWdhdGVkIC4vbm9kZV9tb2R1bGVzL2FmcmFtZS9kaXN0L2FmcmFtZS1tYXN0ZXIuanMgZnJvbSBkbGwtcmVmZXJlbmNlIHZlbmRvcnNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 1:
/* unknown exports provided */
/*!**************************!*\
  !*** external "vendors" ***!
  \**************************/
/***/ (function(module, exports) {

eval("module.exports = vendors;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcInZlbmRvcnNcIj8yNTRhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gdmVuZG9ycztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcInZlbmRvcnNcIlxuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 2:
/* unknown exports provided */
/* all exports used */
/*!*********************************************!*\
  !*** multi ./js/index.js ./sass/entry.scss ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./js/index.js */"./js/index.js");
module.exports = __webpack_require__(/*! ./sass/entry.scss */"./sass/entry.scss");


/***/ })

/******/ });